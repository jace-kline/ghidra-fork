make: Entering directory '/home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray'
rm -rf *.bin *.o *.dwarfdump *.objdump *.pickle *.gpr *.rep
make: Leaving directory '/home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray'
make: Entering directory '/home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray'
gcc  -g -O0 -c -o ndarray_O0_debug.o ndarray.c
gcc  -g -O0 -o ndarray_O0_debug.bin ndarray_O0_debug.o
python3 /home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray//../../evaluate/parse_dwarf_exec.py ndarray_O0_debug.bin pickle ndarray_O0_debug.dwarf.pickle
gcc  -O0 -c -o ndarray_O0.o ndarray.c
gcc  -O0 -o ndarray_O0.bin ndarray_O0.o
/home/jacekline/dev/research/ghidra-build/support/analyzeHeadless \
	/home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray/ \
	tempproject \
	-import ndarray_O0.bin \
	-scriptpath "/home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray//../../evaluate" \
	-postscript parse_ghidra_exec.py pickle ndarray_O0.ghidra.pickle \
	-deleteproject
INFO  Using log config file: jar:file:/home/jacekline/dev/research/ghidra-build/Ghidra/Framework/Generic/lib/Generic.jar!/generic.log4j.xml (LoggingInitialization)  
INFO  Using log file: /home/jacekline/.ghidra/.ghidra_10.2_DEV/application.log (LoggingInitialization)  
INFO  Loading user preferences: /home/jacekline/.ghidra/.ghidra_10.2_DEV/preferences (Preferences)  
INFO  Class search complete (1047 ms) (ClassSearcher)  
INFO  Initializing SSL Context (SSLContextInitializer)  
INFO  Initializing Random Number Generator... (SecureRandomFactory)  
INFO  Random Number Generator initialization complete: NativePRNGNonBlocking (SecureRandomFactory)  
INFO  Trust manager disabled, cacerts have not been set (ApplicationTrustManagerFactory)  
INFO  HEADLESS Script Paths:
    /home/jacekline/dev/research/ghidra-build/Ghidra/Features/BytePatterns/ghidra_scripts
    /home/jacekline/dev/research/ghidra-build/Ghidra/Features/FunctionID/ghidra_scripts
    /home/jacekline/dev/research/ghidra-build/Ghidra/Processors/8051/ghidra_scripts
    /home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray/../../evaluate
    /home/jacekline/dev/research/ghidra-build/Ghidra/Features/PDB/ghidra_scripts
    /home/jacekline/dev/research/ghidra-build/Ghidra/Processors/DATA/ghidra_scripts
    /home/jacekline/dev/research/ghidra-build/Ghidra/Features/Python/ghidra_scripts
    /home/jacekline/dev/research/ghidra-build/Ghidra/Features/MicrosoftCodeAnalyzer/ghidra_scripts
    /home/jacekline/dev/research/ghidra-build/Ghidra/Debug/Debugger/ghidra_scripts
    /home/jacekline/dev/research/ghidra-build/Ghidra/Features/VersionTracking/ghidra_scripts
    /home/jacekline/dev/research/ghidra-build/Ghidra/Debug/Debugger-agent-dbgmodel-traceloader/ghidra_scripts
    /home/jacekline/dev/research/ghidra-build/Ghidra/Features/FileFormats/ghidra_scripts
    /home/jacekline/dev/research/ghidra-build/Ghidra/Processors/PIC/ghidra_scripts
    /home/jacekline/dev/research/ghidra-build/Ghidra/Debug/Debugger-agent-frida/ghidra_scripts
    /home/jacekline/dev/research/ghidra-build/Ghidra/Features/Decompiler/ghidra_scripts
    /home/jacekline/dev/research/ghidra-build/Ghidra/Features/Base/ghidra_scripts
    /home/jacekline/dev/research/ghidra-build/Ghidra/Features/GnuDemangler/ghidra_scripts (HeadlessAnalyzer)  
INFO  HEADLESS: execution starts (HeadlessAnalyzer)  
INFO  Creating temporary project: /home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray/tempproject (HeadlessAnalyzer)  
INFO  Creating project: /home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray/tempproject (DefaultProject)  
INFO  REPORT: Processing input files:  (HeadlessAnalyzer)  
INFO       project: /home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray/tempproject (HeadlessAnalyzer)  
INFO  IMPORTING: /home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray/ndarray_O0.bin (HeadlessAnalyzer)  
INFO  REPORT: Import succeeded with language "x86:LE:64:default" and cspec "gcc" for file: /home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray/ndarray_O0.bin (HeadlessAnalyzer)  
INFO  ANALYZING all memory and code: /home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray/ndarray_O0.bin (HeadlessAnalyzer)  
INFO  DWARF external debug information found: ExternalDebugInfo [filename=null, crc=0, hash=40d1443dae4b6ef4f4954ecc8861726e94fa4df1] (ExternalDebugFilesService)  
INFO  Unable to find DWARF information, skipping DWARF analysis (DWARFAnalyzer)  
INFO  hit non-returning function, restarting decompiler switch analyzer later (DecompilerSwitchAnalyzer)  
INFO  Packed database cache: /tmp/jacekline-Ghidra/packed-db-cache (PackedDatabaseCache)  
INFO  -----------------------------------------------------
    ASCII Strings                              0.316 secs
    Apply Data Archives                        0.274 secs
    Call Convention ID                         0.140 secs
    Call-Fixup Installer                       0.004 secs
    Create Address Tables                      0.005 secs
    Create Function                            0.003 secs
    DWARF                                      0.009 secs
    Data Reference                             0.004 secs
    Decompiler Switch Analysis                 0.040 secs
    Decompiler Switch Analysis - One Time      0.368 secs
    Demangler GNU                              0.016 secs
    Disassemble Entry Points                   0.060 secs
    ELF Scalar Operand References              0.009 secs
    Embedded Media                             0.018 secs
    External Entry References                  0.000 secs
    Function ID                                0.034 secs
    Function Start Search                      0.019 secs
    Function Start Search After Code           0.001 secs
    Function Start Search After Data           0.001 secs
    GCC Exception Handlers                     0.043 secs
    Non-Returning Functions - Discovered       0.001 secs
    Non-Returning Functions - Known            0.004 secs
    Reference                                  0.011 secs
    Shared Return Calls                        0.002 secs
    Stack                                      0.022 secs
    Subroutine References                      0.003 secs
    Subroutine References - One Time           0.000 secs
    x86 Constant Reference Analyzer            0.061 secs
-----------------------------------------------------
     Total Time   1 secs
-----------------------------------------------------
 (AutoAnalysisManager)  
INFO  REPORT: Analysis succeeded for file: /home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray/ndarray_O0.bin (HeadlessAnalyzer)  
INFO  SCRIPT: /home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray/../../evaluate/parse_ghidra_exec.py (HeadlessAnalyzer)  
[u'pickle', u'ndarray_O0.ghidra.pickle']
WARN  Decompiling 00105000, pcode error at 00105000: Unable to disassemble EXTERNAL block location: 00105000 (DecompileCallback)  
WARN  Decompiling 00105008, pcode error at 00105008: Unable to disassemble EXTERNAL block location: 00105008 (DecompileCallback)  
WARN  Decompiling 00105010, pcode error at 00105010: Unable to disassemble EXTERNAL block location: 00105010 (DecompileCallback)  
WARN  Decompiling 00105018, pcode error at 00105018: Unable to disassemble EXTERNAL block location: 00105018 (DecompileCallback)  
WARN  Decompiling 00105020, pcode error at 00105020: Unable to disassemble EXTERNAL block location: 00105020 (DecompileCallback)  
WARN  Decompiling 00105028, pcode error at 00105028: Unable to disassemble EXTERNAL block location: 00105028 (DecompileCallback)  
WARN  Decompiling 00105030, pcode error at 00105030: Unable to disassemble EXTERNAL block location: 00105030 (DecompileCallback)  
WARN  Decompiling 00105000, pcode error at 00105000: Unable to disassemble EXTERNAL block location: 00105000 (DecompileCallback)  
WARN  Decompiling 00105008, pcode error at 00105008: Unable to disassemble EXTERNAL block location: 00105008 (DecompileCallback)  
WARN  Decompiling 00105010, pcode error at 00105010: Unable to disassemble EXTERNAL block location: 00105010 (DecompileCallback)  
WARN  Decompiling 00105018, pcode error at 00105018: Unable to disassemble EXTERNAL block location: 00105018 (DecompileCallback)  
WARN  Decompiling 00105020, pcode error at 00105020: Unable to disassemble EXTERNAL block location: 00105020 (DecompileCallback)  
WARN  Decompiling 00105028, pcode error at 00105028: Unable to disassemble EXTERNAL block location: 00105028 (DecompileCallback)  
WARN  Decompiling 00105030, pcode error at 00105030: Unable to disassemble EXTERNAL block location: 00105030 (DecompileCallback)  
INFO  ANALYZING changes made by post scripts: /home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray/ndarray_O0.bin (HeadlessAnalyzer)  
INFO  REPORT: Post-analysis succeeded for file: /home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray/ndarray_O0.bin (HeadlessAnalyzer)  
INFO  REPORT: Save succeeded for file: /ndarray_O0.bin (HeadlessAnalyzer)  
make: Leaving directory '/home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray'
Building Makefile targets in directory '/home/jacekline/dev/research/ghidra-fork/fork/progs/ndarray':
	ndarray_O0_debug.dwarf.pickle
	ndarray_O0.ghidra.pickle
Verifying targets...
Success!
----------GHIDRA DECOMPILER OUTPUT----------

----------------GLOBALS----------------------
<VAR main :: undefined1 @ [<AddressLiveRange addr=<ABSOLUTE:0x1169> startpc=None endpc=None>]>
<VAR __libc_csu_fini :: undefined1 @ [<AddressLiveRange addr=<ABSOLUTE:0x12e0> startpc=None endpc=None>]>
<VAR __libc_csu_init :: undefined1 @ [<AddressLiveRange addr=<ABSOLUTE:0x1270> startpc=None endpc=None>]>
<VAR completed.8061 :: char @ [<AddressLiveRange addr=<ABSOLUTE:0x4010> startpc=None endpc=None>]>
<VAR __dso_handle :: undefined1 * @ [<AddressLiveRange addr=<ABSOLUTE:0x4008> startpc=None endpc=None>]>
<VAR __frame_dummy_init_array_entry :: unsigned int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x3db0> startpc=None endpc=None>]>
----------------FUNCTIONS--------------------
_init :: (<STRUCT evp_pkey_ctx_st membertypes=0 size=0> *) -> int4 @ PC range=(<ABSOLUTE:0x1000>, <ABSOLUTE:0x101c>)
	<PARAM ctx :: <STRUCT evp_pkey_ctx_st membertypes=0 size=0> * @ [<AddressLiveRange addr=<REGISTER:5> startpc=<ABSOLUTE:0x1000> endpc=<ABSOLUTE:0x101c>>]>
	<VAR iVar1 :: int4 @ [<AddressLiveRange addr=<REGISTER:0> startpc=<ABSOLUTE:0x1000> endpc=<ABSOLUTE:0x101c>>]>
FUN_00101020 :: () -> void @ PC range=(<ABSOLUTE:0x1020>, <ABSOLUTE:0x102e>)
__cxa_finalize :: () -> void @ PC range=(<ABSOLUTE:0x1050>, <ABSOLUTE:0x105c>)
__stack_chk_fail :: () -> void @ PC range=(<ABSOLUTE:0x1060>, <ABSOLUTE:0x106c>)
printf :: (char *[...]) -> int4 @ PC range=(<ABSOLUTE:0x1070>, <ABSOLUTE:0x107c>)
	<PARAM __format :: char * @ [<AddressLiveRange addr=<REGISTER:5> startpc=<ABSOLUTE:0x1070> endpc=<ABSOLUTE:0x107c>>]>
	<VAR iVar1 :: int4 @ [<AddressLiveRange addr=<REGISTER:0> startpc=<ABSOLUTE:0x1070> endpc=<ABSOLUTE:0x107c>>]>
_start :: (undefined8) -> void @ PC range=(<ABSOLUTE:0x1080>, <ABSOLUTE:0x10b0>)
	<PARAM param_3 :: undefined8 @ [<AddressLiveRange addr=<REGISTER:1> startpc=<ABSOLUTE:0x1080> endpc=<ABSOLUTE:0x10b0>>]>
	<VAR auStack8 :: <ARRAY subtype=undefined1 dimensions=(8,) size=8> @ [<AddressLiveRange addr=<STACK:-0x10> startpc=<ABSOLUTE:0x1080> endpc=<ABSOLUTE:0x10b0>>]>
	<VAR unaff_retaddr :: undefined8 @ [<AddressLiveRange addr=<STACK:-0x8> startpc=<ABSOLUTE:0x1080> endpc=<ABSOLUTE:0x10b0>>]>
deregister_tm_clones :: () -> void @ PC range=(<ABSOLUTE:0x10b0>, <ABSOLUTE:0x10da>)
register_tm_clones :: () -> void @ PC range=(<ABSOLUTE:0x10e0>, <ABSOLUTE:0x111a>)
__do_global_dtors_aux :: () -> void @ PC range=(<ABSOLUTE:0x1120>, <ABSOLUTE:0x115a>)
frame_dummy :: () -> void @ PC range=(<ABSOLUTE:0x1160>, <ABSOLUTE:0x116a>)
main :: () -> undefined8 @ PC range=(<ABSOLUTE:0x1169>, <ABSOLUTE:0x1263>)
	<VAR local_fb8 :: <ARRAY subtype=undefined8 dimensions=(501,) size=4008> @ [<AddressLiveRange addr=<STACK:-0xfc0> startpc=<ABSOLUTE:0x1169> endpc=<ABSOLUTE:0x1263>>]>
	<VAR local_10 :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1169> endpc=<ABSOLUTE:0x1263>>]>
	<VAR lVar1 :: int8 @ [<AddressLiveRange addr=<REGISTER:2> startpc=<ABSOLUTE:0x1169> endpc=<ABSOLUTE:0x1263>>]>
	<VAR puVar2 :: undefined8 * @ [<AddressLiveRange addr=<REGISTER:5> startpc=<ABSOLUTE:0x1169> endpc=<ABSOLUTE:0x1263>>]>
	<VAR in_FS_OFFSET :: int8 @ [<AddressLiveRange addr=<REGISTER:None> startpc=<ABSOLUTE:0x1169> endpc=<ABSOLUTE:0x1263>>]>
	<VAR local_1148 :: <ARRAY subtype=undefined8 dimensions=(50,) size=400> @ [<AddressLiveRange addr=<STACK:-0x1150> startpc=<ABSOLUTE:0x1169> endpc=<ABSOLUTE:0x1263>>]>
__libc_csu_init :: (<STRUCT evp_pkey_ctx_st membertypes=0 size=0> *, undefined8, undefined8) -> void @ PC range=(<ABSOLUTE:0x1270>, <ABSOLUTE:0x12d6>)
	<PARAM param_1 :: <STRUCT evp_pkey_ctx_st membertypes=0 size=0> * @ [<AddressLiveRange addr=<REGISTER:5> startpc=<ABSOLUTE:0x1270> endpc=<ABSOLUTE:0x12d6>>]>
	<PARAM param_2 :: undefined8 @ [<AddressLiveRange addr=<REGISTER:4> startpc=<ABSOLUTE:0x1270> endpc=<ABSOLUTE:0x12d6>>]>
	<PARAM param_3 :: undefined8 @ [<AddressLiveRange addr=<REGISTER:1> startpc=<ABSOLUTE:0x1270> endpc=<ABSOLUTE:0x12d6>>]>
	<VAR lVar1 :: int8 @ [<AddressLiveRange addr=<REGISTER:3> startpc=<ABSOLUTE:0x1270> endpc=<ABSOLUTE:0x12d6>>]>
__libc_csu_fini :: () -> void @ PC range=(<ABSOLUTE:0x12e0>, <ABSOLUTE:0x12e6>)
_fini :: () -> void @ PC range=(<ABSOLUTE:0x12e8>, <ABSOLUTE:0x12f6>)
_ITM_deregisterTMCloneTable :: () -> void @ PC range=(<ABSOLUTE:0x5000>, <ABSOLUTE:0x5002>)
__stack_chk_fail :: () -> void @ PC range=(<ABSOLUTE:0x5008>, <ABSOLUTE:0x500a>)
printf :: (char *[...]) -> int4 @ PC range=(<ABSOLUTE:0x5010>, <ABSOLUTE:0x5012>)
	<PARAM __format :: char * @ [<AddressLiveRange addr=<REGISTER:5> startpc=<ABSOLUTE:0x5010> endpc=<ABSOLUTE:0x5012>>]>
__libc_start_main :: () -> void @ PC range=(<ABSOLUTE:0x5018>, <ABSOLUTE:0x501a>)
__gmon_start__ :: () -> void @ PC range=(<ABSOLUTE:0x5020>, <ABSOLUTE:0x5022>)
_ITM_registerTMCloneTable :: () -> void @ PC range=(<ABSOLUTE:0x5028>, <ABSOLUTE:0x502a>)
__cxa_finalize :: () -> void @ PC range=(<ABSOLUTE:0x5030>, <ABSOLUTE:0x5032>)

----------DWARF OUTPUT (ground truth)----------

----------------GLOBALS----------------------
----------------FUNCTIONS--------------------
main :: (int4, char * *) -> int4 @ PC range=(<ABSOLUTE:0x1169>, <ABSOLUTE:0x1263>)
	<PARAM argc :: int4 @ [<AddressLiveRange addr=<STACK:-0x1184> startpc=<ABSOLUTE:0x1169> endpc=<ABSOLUTE:0x1263>>]>
	<PARAM argv :: char * * @ [<AddressLiveRange addr=<STACK:-0x1190> startpc=<ABSOLUTE:0x1169> endpc=<ABSOLUTE:0x1263>>]>
	<VAR _1darray :: <ARRAY subtype=int4 dimensions=(10,) size=40> @ [<AddressLiveRange addr=<STACK:-0x1180> startpc=<ABSOLUTE:0x1169> endpc=<ABSOLUTE:0x1263>>]>
	<VAR _2darray :: <ARRAY subtype=int4 dimensions=(10, 10) size=400> @ [<AddressLiveRange addr=<STACK:-0x1150> startpc=<ABSOLUTE:0x1169> endpc=<ABSOLUTE:0x1263>>]>
	<VAR _3darray :: <ARRAY subtype=int4 dimensions=(10, 10, 10) size=4000> @ [<AddressLiveRange addr=<STACK:-0xfc0> startpc=<ABSOLUTE:0x1169> endpc=<ABSOLUTE:0x1263>>]>

---------DWARF VS GHIDRA----------

----------GLOBAL COMPARISONS----------


----------FUNCTION COMPARISONS----------
<UnoptimizedFunctionCompareRecord name=main startpc=<ABSOLUTE:0x1169> compared=True>
	Parameters:
		<VarnodeCompareRecord varnode=<Varnode name=argv address=<STACK:-0x1190> datatype=char * *> status=NO_MATCH>
		<VarnodeCompareRecord varnode=<Varnode name=argc address=<STACK:-0x1184> datatype=int4> status=NO_MATCH>
		
	Local Variables:
		<VarnodeCompareRecord varnode=<Varnode name=_1darray address=<STACK:-0x1180> datatype=<ARRAY subtype=int4 dimensions=(10,) size=40>> status=NO_MATCH>
		<VarnodeCompareRecord varnode=<Varnode name=_2darray address=<STACK:-0x1150> datatype=<ARRAY subtype=int4 dimensions=(10, 10) size=400>> status=MATCH>
			Comparison:
				other=<Varnode name=local_1148 address=<STACK:-0x1150> datatype=<ARRAY subtype=undefined8 dimensions=(50,) size=400>>
				compare_code=MATCH
		
		<VarnodeCompareRecord varnode=<Varnode name=_3darray address=<STACK:-0xfc0> datatype=<ARRAY subtype=int4 dimensions=(10, 10, 10) size=4000>> status=CONTAINED>
			Comparison:
				other=<Varnode name=local_fb8 address=<STACK:-0xfc0> datatype=<ARRAY subtype=undefined8 dimensions=(501,) size=4008>>
				compare_code=RIGHT_CONTAINS_LEFT
		
		

