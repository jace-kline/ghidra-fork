----------------GLOBALS----------------------
<VAR G_line :: <ARRAY subtype=char dimensions=(4808,) size=4808> @ [<AddressLiveRange addr=<ABSOLUTE:0x1f2c0> startpc=None endpc=None>]>
<VAR filetype_letter :: <ARRAY subtype=char dimensions=(11,) size=11> @ [<AddressLiveRange addr=<ABSOLUTE:0x20588> startpc=None endpc=None>]>
<VAR active_dir_set :: <STRUCT hash_table membertypes=0 size=0> * @ [<AddressLiveRange addr=<ABSOLUTE:0x2b320> startpc=None endpc=None>]>
<VAR cwd_file :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<ABSOLUTE:0x2b328> startpc=None endpc=None>]>
<VAR cwd_n_alloc :: unsigned int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b330> startpc=None endpc=None>]>
<VAR cwd_n_used :: unsigned int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b338> startpc=None endpc=None>]>
<VAR cwd_some_quoted :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b340> startpc=None endpc=None>]>
<VAR align_variable_outer_quotes :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b341> startpc=None endpc=None>]>
<VAR sorted_file :: void * * @ [<AddressLiveRange addr=<ABSOLUTE:0x2b348> startpc=None endpc=None>]>
<VAR sorted_file_alloc :: unsigned int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b350> startpc=None endpc=None>]>
<VAR color_symlink_as_referent :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b358> startpc=None endpc=None>]>
<VAR hostname :: char * @ [<AddressLiveRange addr=<ABSOLUTE:0x2b360> startpc=None endpc=None>]>
<VAR pending_dirs :: <STRUCT pending membertypes=4 size=32> * @ [<AddressLiveRange addr=<ABSOLUTE:0x2b368> startpc=None endpc=None>]>
<VAR current_time :: <STRUCT timespec membertypes=2 size=16> @ [<AddressLiveRange addr=<ABSOLUTE:0x2b370> startpc=None endpc=None>]>
<VAR print_scontext :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b380> startpc=None endpc=None>]>
<VAR UNKNOWN_SECURITY_CONTEXT :: <ARRAY subtype=char dimensions=(2,) size=2> @ [<AddressLiveRange addr=<ABSOLUTE:0x2b020> startpc=None endpc=None>]>
<VAR any_has_acl :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b381> startpc=None endpc=None>]>
<VAR inode_number_width :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b384> startpc=None endpc=None>]>
<VAR block_size_width :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b388> startpc=None endpc=None>]>
<VAR nlink_width :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b38c> startpc=None endpc=None>]>
<VAR scontext_width :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b390> startpc=None endpc=None>]>
<VAR owner_width :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b394> startpc=None endpc=None>]>
<VAR group_width :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b398> startpc=None endpc=None>]>
<VAR author_width :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b39c> startpc=None endpc=None>]>
<VAR major_device_number_width :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3a0> startpc=None endpc=None>]>
<VAR minor_device_number_width :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3a4> startpc=None endpc=None>]>
<VAR file_size_width :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3a8> startpc=None endpc=None>]>
<VAR format :: unsigned int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3ac> startpc=None endpc=None>]>
<VAR time_style_args :: <ARRAY subtype=char * dimensions=(5,) size=40> @ [<AddressLiveRange addr=<ABSOLUTE:0x29fa0> startpc=None endpc=None>]>
<VAR time_style_types :: <ARRAY subtype=unsigned int4 dimensions=(4,) size=16> @ [<AddressLiveRange addr=<ABSOLUTE:0x205b0> startpc=None endpc=None>]>
<VAR time_type :: unsigned int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3b0> startpc=None endpc=None>]>
<VAR sort_type :: unsigned int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3b4> startpc=None endpc=None>]>
<VAR sort_reverse :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3b8> startpc=None endpc=None>]>
<VAR print_owner :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b022> startpc=None endpc=None>]>
<VAR print_author :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3b9> startpc=None endpc=None>]>
<VAR print_group :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b023> startpc=None endpc=None>]>
<VAR numeric_ids :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3ba> startpc=None endpc=None>]>
<VAR print_block_size :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3bb> startpc=None endpc=None>]>
<VAR human_output_opts :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3bc> startpc=None endpc=None>]>
<VAR output_block_size :: unsigned int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3c0> startpc=None endpc=None>]>
<VAR file_human_output_opts :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3c8> startpc=None endpc=None>]>
<VAR file_output_block_size :: unsigned int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b028> startpc=None endpc=None>]>
<VAR dired :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3cc> startpc=None endpc=None>]>
<VAR indicator_style :: unsigned int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3d0> startpc=None endpc=None>]>
<VAR indicator_style_args :: <ARRAY subtype=char * dimensions=(5,) size=40> @ [<AddressLiveRange addr=<ABSOLUTE:0x29fe0> startpc=None endpc=None>]>
<VAR indicator_style_types :: <ARRAY subtype=unsigned int4 dimensions=(4,) size=16> @ [<AddressLiveRange addr=<ABSOLUTE:0x205e0> startpc=None endpc=None>]>
<VAR print_with_color :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3d4> startpc=None endpc=None>]>
<VAR print_hyperlink :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3d5> startpc=None endpc=None>]>
<VAR used_color :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3d6> startpc=None endpc=None>]>
<VAR indicator_name :: <ARRAY subtype=char * dimensions=(25,) size=200> @ [<AddressLiveRange addr=<ABSOLUTE:0x2a020> startpc=None endpc=None>]>
<VAR color_indicator :: <ARRAY subtype=<STRUCT bin_str membertypes=2 size=16> dimensions=(24,) size=384> @ [<AddressLiveRange addr=<ABSOLUTE:0x2b080> startpc=None endpc=None>]>
<VAR color_ext_list :: <STRUCT color_ext_type membertypes=3 size=40> * @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3d8> startpc=None endpc=None>]>
<VAR color_buf :: char * @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3e0> startpc=None endpc=None>]>
<VAR check_symlink_mode :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3e8> startpc=None endpc=None>]>
<VAR print_inode :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3e9> startpc=None endpc=None>]>
<VAR dereference :: unsigned int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3ec> startpc=None endpc=None>]>
<VAR recursive :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3f0> startpc=None endpc=None>]>
<VAR immediate_dirs :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3f1> startpc=None endpc=None>]>
<VAR directories_first :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3f2> startpc=None endpc=None>]>
<VAR ignore_mode :: unsigned int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3f4> startpc=None endpc=None>]>
<VAR ignore_patterns :: <STRUCT ignore_pattern membertypes=2 size=16> * @ [<AddressLiveRange addr=<ABSOLUTE:0x2b3f8> startpc=None endpc=None>]>
<VAR hide_patterns :: <STRUCT ignore_pattern membertypes=2 size=16> * @ [<AddressLiveRange addr=<ABSOLUTE:0x2b400> startpc=None endpc=None>]>
<VAR qmark_funny_chars :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b408> startpc=None endpc=None>]>
<VAR filename_quoting_options :: <STRUCT quoting_options membertypes=0 size=0> * @ [<AddressLiveRange addr=<ABSOLUTE:0x2b410> startpc=None endpc=None>]>
<VAR dirname_quoting_options :: <STRUCT quoting_options membertypes=0 size=0> * @ [<AddressLiveRange addr=<ABSOLUTE:0x2b418> startpc=None endpc=None>]>
<VAR tabsize :: unsigned int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b420> startpc=None endpc=None>]>
<VAR print_dir_name :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b428> startpc=None endpc=None>]>
<VAR line_length :: unsigned int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b430> startpc=None endpc=None>]>
<VAR localtz :: <STRUCT tm_zone membertypes=0 size=0> * @ [<AddressLiveRange addr=<ABSOLUTE:0x2b438> startpc=None endpc=None>]>
<VAR format_needs_stat :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b440> startpc=None endpc=None>]>
<VAR format_needs_type :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b441> startpc=None endpc=None>]>
<VAR long_time_format :: <ARRAY subtype=char * dimensions=(2,) size=16> @ [<AddressLiveRange addr=<ABSOLUTE:0x2b200> startpc=None endpc=None>]>
<VAR caught_signals :: <STRUCT membertypes=1 size=128> @ [<AddressLiveRange addr=<ABSOLUTE:0x2b460> startpc=None endpc=None>]>
<VAR interrupt_signal :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b4e0> startpc=None endpc=None>]>
<VAR stop_signal_count :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b4e4> startpc=None endpc=None>]>
<VAR exit_status :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b4e8> startpc=None endpc=None>]>
<VAR long_options :: <ARRAY subtype=<STRUCT option membertypes=4 size=32> dimensions=(45,) size=1440> @ [<AddressLiveRange addr=<ABSOLUTE:0x2a100> startpc=None endpc=None>]>
<VAR format_args :: <ARRAY subtype=char * dimensions=(8,) size=64> @ [<AddressLiveRange addr=<ABSOLUTE:0x2a6a0> startpc=None endpc=None>]>
<VAR format_types :: <ARRAY subtype=unsigned int4 dimensions=(7,) size=28> @ [<AddressLiveRange addr=<ABSOLUTE:0x208a0> startpc=None endpc=None>]>
<VAR sort_args :: <ARRAY subtype=char * dimensions=(7,) size=56> @ [<AddressLiveRange addr=<ABSOLUTE:0x2a6e0> startpc=None endpc=None>]>
<VAR sort_types :: <ARRAY subtype=unsigned int4 dimensions=(6,) size=24> @ [<AddressLiveRange addr=<ABSOLUTE:0x208d0> startpc=None endpc=None>]>
<VAR time_args :: <ARRAY subtype=char * dimensions=(8,) size=64> @ [<AddressLiveRange addr=<ABSOLUTE:0x2a720> startpc=None endpc=None>]>
<VAR time_types :: <ARRAY subtype=unsigned int4 dimensions=(7,) size=28> @ [<AddressLiveRange addr=<ABSOLUTE:0x20920> startpc=None endpc=None>]>
<VAR when_args :: <ARRAY subtype=char * dimensions=(10,) size=80> @ [<AddressLiveRange addr=<ABSOLUTE:0x2a760> startpc=None endpc=None>]>
<VAR when_types :: <ARRAY subtype=unsigned int4 dimensions=(9,) size=36> @ [<AddressLiveRange addr=<ABSOLUTE:0x20980> startpc=None endpc=None>]>
<VAR column_info :: <STRUCT column_info membertypes=3 size=24> * @ [<AddressLiveRange addr=<ABSOLUTE:0x2b4f0> startpc=None endpc=None>]>
<VAR max_idx :: unsigned int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b4f8> startpc=None endpc=None>]>
<VAR dired_pos :: int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b500> startpc=None endpc=None>]>
<VAR dired_obstack :: <STRUCT obstack membertypes=13 size=88> @ [<AddressLiveRange addr=<ABSOLUTE:0x2b520> startpc=None endpc=None>]>
<VAR subdired_obstack :: <STRUCT obstack membertypes=13 size=88> @ [<AddressLiveRange addr=<ABSOLUTE:0x2b580> startpc=None endpc=None>]>
<VAR dev_ino_obstack :: <STRUCT obstack membertypes=13 size=88> @ [<AddressLiveRange addr=<ABSOLUTE:0x2b5e0> startpc=None endpc=None>]>
<VAR eolbyte :: char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b030> startpc=None endpc=None>]>
<VAR RFC3986 :: <ARRAY subtype=char dimensions=(256,) size=256> @ [<AddressLiveRange addr=<ABSOLUTE:0x2b640> startpc=None endpc=None>]>
<VAR abformat :: <ARRAY subtype=char dimensions=(2, 12, 128) size=3072> @ [<AddressLiveRange addr=<ABSOLUTE:0x2b740> startpc=None endpc=None>]>
<VAR use_abformat :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2c340> startpc=None endpc=None>]>
<VAR failed_strcoll :: <ARRAY subtype=<STRUCT __jmp_buf_tag membertypes=3 size=200> dimensions=(1,) size=200> @ [<AddressLiveRange addr=<ABSOLUTE:0x2c360> startpc=None endpc=None>]>
<VAR sort_functions :: <ARRAY subtype=(void *, void *) -> int4 * dimensions=(9, 2, 2, 2) size=576> @ [<AddressLiveRange addr=<ABSOLUTE:0x2a7c0> startpc=None endpc=None>]>
<VAR None :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b210> startpc=None endpc=None>]>
<VAR Version :: char * @ [<AddressLiveRange addr=<ABSOLUTE:0x2b218> startpc=None endpc=None>]>
<VAR None :: () -> void * @ [<AddressLiveRange addr=<ABSOLUTE:0x2b220> startpc=None endpc=None>]>
<VAR dir_suffix :: <ARRAY subtype=char dimensions=(2,) size=2> @ [<AddressLiveRange addr=<ABSOLUTE:0x2344b> startpc=None endpc=None>]>
<VAR file_name :: char * @ [<AddressLiveRange addr=<ABSOLUTE:0x2c448> startpc=None endpc=None>]>
<VAR ignore_EPIPE :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2c450> startpc=None endpc=None>]>
<VAR None :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b228> startpc=None endpc=None>]>
<VAR default_tuning :: <STRUCT hash_tuning membertypes=5 size=20> @ [<AddressLiveRange addr=<ABSOLUTE:0x23470> startpc=None endpc=None>]>
<VAR power_letter :: <ARRAY subtype=char dimensions=(9,) size=9> @ [<AddressLiveRange addr=<ABSOLUTE:0x23520> startpc=None endpc=None>]>
<VAR block_size_args :: <ARRAY subtype=char * dimensions=(3,) size=24> @ [<AddressLiveRange addr=<ABSOLUTE:0x2aa00> startpc=None endpc=None>]>
<VAR block_size_opts :: <ARRAY subtype=int4 dimensions=(2,) size=8> @ [<AddressLiveRange addr=<ABSOLUTE:0x23550> startpc=None endpc=None>]>
<VAR user_alist :: <STRUCT userid membertypes=3 size=16> * @ [<AddressLiveRange addr=<ABSOLUTE:0x2c458> startpc=None endpc=None>]>
<VAR nouser_alist :: <STRUCT userid membertypes=3 size=16> * @ [<AddressLiveRange addr=<ABSOLUTE:0x2c460> startpc=None endpc=None>]>
<VAR group_alist :: <STRUCT userid membertypes=3 size=16> * @ [<AddressLiveRange addr=<ABSOLUTE:0x2c468> startpc=None endpc=None>]>
<VAR nogroup_alist :: <STRUCT userid membertypes=3 size=16> * @ [<AddressLiveRange addr=<ABSOLUTE:0x2c470> startpc=None endpc=None>]>
<VAR None :: () -> void * @ [<AddressLiveRange addr=<ABSOLUTE:0x2b230> startpc=None endpc=None>]>
<VAR None :: char * @ [<AddressLiveRange addr=<ABSOLUTE:0x2c478> startpc=None endpc=None>]>
<VAR None :: <ARRAY subtype=char * dimensions=(11,) size=88> @ [<AddressLiveRange addr=<ABSOLUTE:0x2aa20> startpc=None endpc=None>]>
<VAR None :: <ARRAY subtype=unsigned int4 dimensions=(10,) size=40> @ [<AddressLiveRange addr=<ABSOLUTE:0x238c0> startpc=None endpc=None>]>
<VAR default_quoting_options :: <STRUCT quoting_options membertypes=5 size=56> @ [<AddressLiveRange addr=<ABSOLUTE:0x2c480> startpc=None endpc=None>]>
<VAR slot0 :: <ARRAY subtype=char dimensions=(256,) size=256> @ [<AddressLiveRange addr=<ABSOLUTE:0x2c4c0> startpc=None endpc=None>]>
<VAR nslots :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b240> startpc=None endpc=None>]>
<VAR slotvec0 :: <STRUCT slotvec membertypes=2 size=16> @ [<AddressLiveRange addr=<ABSOLUTE:0x2b2a0> startpc=None endpc=None>]>
<VAR slotvec :: <STRUCT slotvec membertypes=2 size=16> * @ [<AddressLiveRange addr=<ABSOLUTE:0x2b2b0> startpc=None endpc=None>]>
<VAR None :: <STRUCT quoting_options membertypes=5 size=56> @ [<AddressLiveRange addr=<ABSOLUTE:0x2b260> startpc=None endpc=None>]>
<VAR local_tz :: <STRUCT tm_zone membertypes=3 size=16> * @ [<AddressLiveRange addr=<ABSOLUTE:0x23a38> startpc=None endpc=None>]>
<VAR None :: <ARRAY subtype=char dimensions=(47,) size=47> @ [<AddressLiveRange addr=<ABSOLUTE:0x23dc0> startpc=None endpc=None>]>
<VAR mktime_min :: int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x23fa0> startpc=None endpc=None>]>
<VAR mktime_max :: int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x23fa8> startpc=None endpc=None>]>
<VAR __mon_yday :: <ARRAY subtype=unsigned int2 dimensions=(2, 13) size=52> @ [<AddressLiveRange addr=<ABSOLUTE:0x23fc0> startpc=None endpc=None>]>
----------------FUNCTIONS--------------------
usage :: (int4) -> void @ PC range=(<ABSOLUTE:0xf0be>, <ABSOLUTE:0xf72a>)
	<PARAM status :: int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0xf0be> endpc=<ABSOLUTE:0xf72a>>]>
calculate_columns :: (unsigned char) -> unsigned int8 @ PC range=(<ABSOLUTE:0xedfc>, <ABSOLUTE:0xf0bf>)
	<PARAM by_columns :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x54> startpc=<ABSOLUTE:0xedfc> endpc=<ABSOLUTE:0xf0bf>>]>
	<VAR filesno :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0xedfc> endpc=<ABSOLUTE:0xf0bf>>]>
	<VAR cols :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xedfc> endpc=<ABSOLUTE:0xf0bf>>]>
	<VAR max_cols :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xedfc> endpc=<ABSOLUTE:0xf0bf>>]>
	<VAR f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xedfc> endpc=<ABSOLUTE:0xf0bf>>]>
	<VAR name_length :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xedfc> endpc=<ABSOLUTE:0xf0bf>>]>
	<VAR i :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0xedfc> endpc=<ABSOLUTE:0xf0bf>>]>
	<VAR idx :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xedfc> endpc=<ABSOLUTE:0xf0bf>>]>
	<VAR real_length :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xedfc> endpc=<ABSOLUTE:0xf0bf>>]>
init_column_info :: (unsigned int8) -> void @ PC range=(<ABSOLUTE:0xebd9>, <ABSOLUTE:0xedfd>)
	<PARAM max_cols :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0xebd9> endpc=<ABSOLUTE:0xedfd>>]>
	<VAR i :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xebd9> endpc=<ABSOLUTE:0xedfd>>]>
	<VAR column_info_alloc :: unsigned int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x2c440> startpc=<ABSOLUTE:0xebd9> endpc=<ABSOLUTE:0xedfd>>]>
	<VAR new_column_info_alloc :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0xebd9> endpc=<ABSOLUTE:0xedfd>>]>
	<VAR p :: unsigned int8 * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xebd9> endpc=<ABSOLUTE:0xedfd>>]>
	<VAR column_info_growth :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xebd9> endpc=<ABSOLUTE:0xedfd>>]>
	<VAR s :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xebd9> endpc=<ABSOLUTE:0xedfd>>]>
	<VAR t :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xebd9> endpc=<ABSOLUTE:0xedfd>>]>
	<VAR j :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xebd9> endpc=<ABSOLUTE:0xedfd>>]>
attach :: (char *, char *, char *) -> void @ PC range=(<ABSOLUTE:0xeb1d>, <ABSOLUTE:0xebda>)
	<PARAM dest :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xeb1d> endpc=<ABSOLUTE:0xebda>>]>
	<PARAM dirname :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xeb1d> endpc=<ABSOLUTE:0xebda>>]>
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xeb1d> endpc=<ABSOLUTE:0xebda>>]>
	<VAR dirnamep :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xeb1d> endpc=<ABSOLUTE:0xebda>>]>
indent :: (unsigned int8, unsigned int8) -> void @ PC range=(<ABSOLUTE:0xea78>, <ABSOLUTE:0xeb1e>)
	<PARAM from :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xea78> endpc=<ABSOLUTE:0xeb1e>>]>
	<PARAM to :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xea78> endpc=<ABSOLUTE:0xeb1e>>]>
print_with_separator :: (char) -> void @ PC range=(<ABSOLUTE:0xe95f>, <ABSOLUTE:0xea79>)
	<PARAM sep :: char @ [<AddressLiveRange addr=<STACK:-0x44> startpc=<ABSOLUTE:0xe95f> endpc=<ABSOLUTE:0xea79>>]>
	<VAR filesno :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xe95f> endpc=<ABSOLUTE:0xea79>>]>
	<VAR pos :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xe95f> endpc=<ABSOLUTE:0xea79>>]>
	<VAR f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xe95f> endpc=<ABSOLUTE:0xea79>>]>
	<VAR len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xe95f> endpc=<ABSOLUTE:0xea79>>]>
	<VAR separator :: char @ [<AddressLiveRange addr=<STACK:-0x31> startpc=<ABSOLUTE:0xe95f> endpc=<ABSOLUTE:0xea79>>]>
print_horizontal :: () -> void @ PC range=(<ABSOLUTE:0xe7f3>, <ABSOLUTE:0xe960>)
	<VAR filesno :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0xe7f3> endpc=<ABSOLUTE:0xe960>>]>
	<VAR pos :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xe7f3> endpc=<ABSOLUTE:0xe960>>]>
	<VAR cols :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xe7f3> endpc=<ABSOLUTE:0xe960>>]>
	<VAR line_fmt :: <STRUCT column_info membertypes=3 size=24> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xe7f3> endpc=<ABSOLUTE:0xe960>>]>
	<VAR f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xe7f3> endpc=<ABSOLUTE:0xe960>>]>
	<VAR name_length :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0xe7f3> endpc=<ABSOLUTE:0xe960>>]>
	<VAR max_name_length :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xe7f3> endpc=<ABSOLUTE:0xe960>>]>
	<VAR col :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xe7f3> endpc=<ABSOLUTE:0xe960>>]>
print_many_per_line :: () -> void @ PC range=(<ABSOLUTE:0xe691>, <ABSOLUTE:0xe7f4>)
	<VAR row :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0xe691> endpc=<ABSOLUTE:0xe7f4>>]>
	<VAR cols :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0xe691> endpc=<ABSOLUTE:0xe7f4>>]>
	<VAR line_fmt :: <STRUCT column_info membertypes=3 size=24> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xe691> endpc=<ABSOLUTE:0xe7f4>>]>
	<VAR rows :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xe691> endpc=<ABSOLUTE:0xe7f4>>]>
	<VAR col :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0xe691> endpc=<ABSOLUTE:0xe7f4>>]>
	<VAR filesno :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0xe691> endpc=<ABSOLUTE:0xe7f4>>]>
	<VAR pos :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xe691> endpc=<ABSOLUTE:0xe7f4>>]>
	<VAR f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xe691> endpc=<ABSOLUTE:0xe7f4>>]>
	<VAR name_length :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xe691> endpc=<ABSOLUTE:0xe7f4>>]>
	<VAR max_name_length :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xe691> endpc=<ABSOLUTE:0xe7f4>>]>
length_of_file_name_and_frills :: (<STRUCT fileinfo membertypes=13 size=208> *) -> unsigned int8 @ PC range=(<ABSOLUTE:0xe4b9>, <ABSOLUTE:0xe692>)
	<PARAM f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x2c8> startpc=<ABSOLUTE:0xe4b9> endpc=<ABSOLUTE:0xe692>>]>
	<VAR len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x2b8> startpc=<ABSOLUTE:0xe4b9> endpc=<ABSOLUTE:0xe692>>]>
	<VAR buf :: <ARRAY subtype=char dimensions=(652,) size=652> @ [<AddressLiveRange addr=<STACK:-0x2b0> startpc=<ABSOLUTE:0xe4b9> endpc=<ABSOLUTE:0xe692>>]>
	<VAR c :: char @ [<AddressLiveRange addr=<STACK:-0x2b9> startpc=<ABSOLUTE:0xe4b9> endpc=<ABSOLUTE:0xe692>>]>
put_indicator :: (<STRUCT bin_str membertypes=2 size=16> *) -> void @ PC range=(<ABSOLUTE:0xe453>, <ABSOLUTE:0xe4ba>)
	<PARAM ind :: <STRUCT bin_str membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xe453> endpc=<ABSOLUTE:0xe4ba>>]>
get_color_indicator :: (<STRUCT fileinfo membertypes=13 size=208> *, unsigned char) -> <STRUCT bin_str membertypes=2 size=16> * @ PC range=(<ABSOLUTE:0xe08a>, <ABSOLUTE:0xe454>)
	<PARAM f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xe08a> endpc=<ABSOLUTE:0xe454>>]>
	<PARAM symlink_target :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x4c> startpc=<ABSOLUTE:0xe08a> endpc=<ABSOLUTE:0xe454>>]>
	<VAR type :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x3c> startpc=<ABSOLUTE:0xe08a> endpc=<ABSOLUTE:0xe454>>]>
	<VAR ext :: <STRUCT color_ext_type membertypes=3 size=40> * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xe08a> endpc=<ABSOLUTE:0xe454>>]>
	<VAR len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xe08a> endpc=<ABSOLUTE:0xe454>>]>
	<VAR name :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xe08a> endpc=<ABSOLUTE:0xe454>>]>
	<VAR mode :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xe08a> endpc=<ABSOLUTE:0xe454>>]>
	<VAR linkok :: int4 @ [<AddressLiveRange addr=<STACK:-0x34> startpc=<ABSOLUTE:0xe08a> endpc=<ABSOLUTE:0xe454>>]>
	<VAR s :: <STRUCT bin_str membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xe08a> endpc=<ABSOLUTE:0xe454>>]>
	<VAR filetype_indicator :: <ARRAY subtype=unsigned int4 dimensions=(10,) size=40> @ [<AddressLiveRange addr=<ABSOLUTE:0x2b040> startpc=<ABSOLUTE:0xe08a> endpc=<ABSOLUTE:0xe454>>]>
print_color_indicator :: (<STRUCT bin_str membertypes=2 size=16> *) -> unsigned char @ PC range=(<ABSOLUTE:0xe02c>, <ABSOLUTE:0xe08b>)
	<PARAM ind :: <STRUCT bin_str membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xe02c> endpc=<ABSOLUTE:0xe08b>>]>
print_type_indicator :: (unsigned char, unsigned int4, unsigned int4) -> unsigned char @ PC range=(<ABSOLUTE:0xdfe5>, <ABSOLUTE:0xe02d>)
	<PARAM stat_ok :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0xdfe5> endpc=<ABSOLUTE:0xe02d>>]>
	<PARAM mode :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xdfe5> endpc=<ABSOLUTE:0xe02d>>]>
	<PARAM type :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x2c> startpc=<ABSOLUTE:0xdfe5> endpc=<ABSOLUTE:0xe02d>>]>
	<VAR c :: char @ [<AddressLiveRange addr=<STACK:-0x11> startpc=<ABSOLUTE:0xdfe5> endpc=<ABSOLUTE:0xe02d>>]>
get_type_indicator :: (unsigned char, unsigned int4, unsigned int4) -> char @ PC range=(<ABSOLUTE:0xdeac>, <ABSOLUTE:0xdfe6>)
	<PARAM stat_ok :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0xdeac> endpc=<ABSOLUTE:0xdfe6>>]>
	<PARAM mode :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xdeac> endpc=<ABSOLUTE:0xdfe6>>]>
	<PARAM type :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x2c> startpc=<ABSOLUTE:0xdeac> endpc=<ABSOLUTE:0xdfe6>>]>
	<VAR c :: char @ [<AddressLiveRange addr=<STACK:-0x11> startpc=<ABSOLUTE:0xdeac> endpc=<ABSOLUTE:0xdfe6>>]>
print_file_name_and_frills :: (<STRUCT fileinfo membertypes=13 size=208> *, unsigned int8) -> unsigned int8 @ PC range=(<ABSOLUTE:0xdcc1>, <ABSOLUTE:0xdead>)
	<PARAM f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x2c8> startpc=<ABSOLUTE:0xdcc1> endpc=<ABSOLUTE:0xdead>>]>
	<PARAM start_col :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x2d0> startpc=<ABSOLUTE:0xdcc1> endpc=<ABSOLUTE:0xdead>>]>
	<VAR buf :: <ARRAY subtype=char dimensions=(652,) size=652> @ [<AddressLiveRange addr=<STACK:-0x2b0> startpc=<ABSOLUTE:0xdcc1> endpc=<ABSOLUTE:0xdead>>]>
	<VAR width :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x2b8> startpc=<ABSOLUTE:0xdcc1> endpc=<ABSOLUTE:0xdead>>]>
prep_non_filename_text :: () -> void @ PC range=(<ABSOLUTE:0xdc6c>, <ABSOLUTE:0xdcc2>)
print_name_with_quoting :: (<STRUCT fileinfo membertypes=13 size=208> *, unsigned char, <STRUCT obstack membertypes=13 size=88> *, unsigned int8) -> unsigned int8 @ PC range=(<ABSOLUTE:0xdb1f>, <ABSOLUTE:0xdc6d>)
	<PARAM f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xdb1f> endpc=<ABSOLUTE:0xdc6d>>]>
	<PARAM symlink_target :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x3c> startpc=<ABSOLUTE:0xdb1f> endpc=<ABSOLUTE:0xdc6d>>]>
	<PARAM stack :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xdb1f> endpc=<ABSOLUTE:0xdc6d>>]>
	<PARAM start_col :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0xdb1f> endpc=<ABSOLUTE:0xdc6d>>]>
	<VAR name :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xdb1f> endpc=<ABSOLUTE:0xdc6d>>]>
	<VAR color :: <STRUCT bin_str membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xdb1f> endpc=<ABSOLUTE:0xdc6d>>]>
	<VAR used_color_this_time :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x29> startpc=<ABSOLUTE:0xdb1f> endpc=<ABSOLUTE:0xdc6d>>]>
	<VAR len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xdb1f> endpc=<ABSOLUTE:0xdc6d>>]>
quote_name :: (char *, <STRUCT quoting_options membertypes=0 size=0> *, int4, <STRUCT bin_str membertypes=2 size=16> *, unsigned char, <STRUCT obstack membertypes=13 size=88> *, char *) -> unsigned int8 @ PC range=(<ABSOLUTE:0xd7fe>, <ABSOLUTE:0xdb20>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x2058> startpc=<ABSOLUTE:0xd7fe> endpc=<ABSOLUTE:0xdb20>>]>
	<PARAM options :: <STRUCT quoting_options membertypes=0 size=0> * @ [<AddressLiveRange addr=<STACK:-0x2060> startpc=<ABSOLUTE:0xd7fe> endpc=<ABSOLUTE:0xdb20>>]>
	<PARAM needs_general_quoting :: int4 @ [<AddressLiveRange addr=<STACK:-0x2064> startpc=<ABSOLUTE:0xd7fe> endpc=<ABSOLUTE:0xdb20>>]>
	<PARAM color :: <STRUCT bin_str membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x2070> startpc=<ABSOLUTE:0xd7fe> endpc=<ABSOLUTE:0xdb20>>]>
	<PARAM allow_pad :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x2068> startpc=<ABSOLUTE:0xd7fe> endpc=<ABSOLUTE:0xdb20>>]>
	<PARAM stack :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x2078> startpc=<ABSOLUTE:0xd7fe> endpc=<ABSOLUTE:0xdb20>>]>
	<PARAM absolute_name :: char * @ [<AddressLiveRange addr=<STACK:-0x2080> startpc=<ABSOLUTE:0xd7fe> endpc=<ABSOLUTE:0xdb20>>]>
	<VAR smallbuf :: <ARRAY subtype=char dimensions=(8192,) size=8192> @ [<AddressLiveRange addr=<STACK:-0x2020> startpc=<ABSOLUTE:0xd7fe> endpc=<ABSOLUTE:0xdb20>>]>
	<VAR buf :: char * @ [<AddressLiveRange addr=<STACK:-0x2040> startpc=<ABSOLUTE:0xd7fe> endpc=<ABSOLUTE:0xdb20>>]>
	<VAR len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x2038> startpc=<ABSOLUTE:0xd7fe> endpc=<ABSOLUTE:0xdb20>>]>
	<VAR pad :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x2042> startpc=<ABSOLUTE:0xd7fe> endpc=<ABSOLUTE:0xdb20>>]>
	<VAR skip_quotes :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x2041> startpc=<ABSOLUTE:0xd7fe> endpc=<ABSOLUTE:0xdb20>>]>
	<VAR h :: char * @ [<AddressLiveRange addr=<STACK:-0x2030> startpc=<ABSOLUTE:0xd7fe> endpc=<ABSOLUTE:0xdb20>>]>
	<VAR n :: char * @ [<AddressLiveRange addr=<STACK:-0x2028> startpc=<ABSOLUTE:0xd7fe> endpc=<ABSOLUTE:0xdb20>>]>
file_escape :: (char *, unsigned char) -> char * @ PC range=(<ABSOLUTE:0xd6f4>, <ABSOLUTE:0xd7ff>)
	<PARAM str :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xd6f4> endpc=<ABSOLUTE:0xd7ff>>]>
	<PARAM path :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x2c> startpc=<ABSOLUTE:0xd6f4> endpc=<ABSOLUTE:0xd7ff>>]>
	<VAR esc :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xd6f4> endpc=<ABSOLUTE:0xd7ff>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xd6f4> endpc=<ABSOLUTE:0xd7ff>>]>
quote_name_width :: (char *, <STRUCT quoting_options membertypes=0 size=0> *, int4) -> unsigned int8 @ PC range=(<ABSOLUTE:0xd5f0>, <ABSOLUTE:0xd6f5>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x2048> startpc=<ABSOLUTE:0xd5f0> endpc=<ABSOLUTE:0xd6f5>>]>
	<PARAM options :: <STRUCT quoting_options membertypes=0 size=0> * @ [<AddressLiveRange addr=<STACK:-0x2050> startpc=<ABSOLUTE:0xd5f0> endpc=<ABSOLUTE:0xd6f5>>]>
	<PARAM needs_general_quoting :: int4 @ [<AddressLiveRange addr=<STACK:-0x2054> startpc=<ABSOLUTE:0xd5f0> endpc=<ABSOLUTE:0xd6f5>>]>
	<VAR smallbuf :: <ARRAY subtype=char dimensions=(8192,) size=8192> @ [<AddressLiveRange addr=<STACK:-0x2020> startpc=<ABSOLUTE:0xd5f0> endpc=<ABSOLUTE:0xd6f5>>]>
	<VAR buf :: char * @ [<AddressLiveRange addr=<STACK:-0x2030> startpc=<ABSOLUTE:0xd5f0> endpc=<ABSOLUTE:0xd6f5>>]>
	<VAR width :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x2028> startpc=<ABSOLUTE:0xd5f0> endpc=<ABSOLUTE:0xd6f5>>]>
	<VAR pad :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x2031> startpc=<ABSOLUTE:0xd5f0> endpc=<ABSOLUTE:0xd6f5>>]>
quote_name_buf :: (char * *, unsigned int8, char *, <STRUCT quoting_options membertypes=0 size=0> *, int4, unsigned int8 *, unsigned char *) -> unsigned int8 @ PC range=(<ABSOLUTE:0xd08b>, <ABSOLUTE:0xd5f1>)
	<PARAM inbuf :: char * * @ [<AddressLiveRange addr=<STACK:-0xa8> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<PARAM bufsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0xb0> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0xb8> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<PARAM options :: <STRUCT quoting_options membertypes=0 size=0> * @ [<AddressLiveRange addr=<STACK:-0xc0> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<PARAM needs_general_quoting :: int4 @ [<AddressLiveRange addr=<STACK:-0xc4> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<PARAM width :: unsigned int8 * @ [<AddressLiveRange addr=<STACK:-0xd0> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<PARAM pad :: unsigned char * @ [<AddressLiveRange addr=<STACK:-0xd8> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<VAR buf :: char * @ [<AddressLiveRange addr=<STACK:-0x88> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<VAR displayed_width :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x80> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<VAR len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x78> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<VAR quoted :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x96> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<VAR qs :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x90> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<VAR needs_further_quoting :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x95> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x70> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<VAR plimit :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<VAR q :: char * @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<VAR mbstate :: <STRUCT membertypes=2 size=8> @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<VAR wc :: int4 @ [<AddressLiveRange addr=<STACK:-0x94> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<VAR bytes :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<VAR w :: int4 @ [<AddressLiveRange addr=<STACK:-0x8c> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<VAR plimit :: char * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
	<VAR plimit :: char * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xd08b> endpc=<ABSOLUTE:0xd5f1>>]>
print_long_format :: (<STRUCT fileinfo membertypes=13 size=208> *) -> void @ PC range=(<ABSOLUTE:0xc647>, <ABSOLUTE:0xd08c>)
	<PARAM f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x11d8> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR modebuf :: <ARRAY subtype=char dimensions=(12,) size=12> @ [<AddressLiveRange addr=<STACK:-0x112c> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR buf :: <ARRAY subtype=char dimensions=(3643,) size=3643> @ [<AddressLiveRange addr=<STACK:-0xe70> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR s :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x11b8> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x11b0> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR when_timespec :: <STRUCT timespec membertypes=2 size=16> @ [<AddressLiveRange addr=<STACK:-0x1190> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR when_local :: <STRUCT tm membertypes=11 size=56> @ [<AddressLiveRange addr=<STACK:-0x1170> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR btime_ok :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x11c6> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR w :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x1198> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR hbuf :: <ARRAY subtype=char dimensions=(21,) size=21> @ [<AddressLiveRange addr=<STACK:-0x1100> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR hbuf :: <ARRAY subtype=char dimensions=(652,) size=652> @ [<AddressLiveRange addr=<STACK:-0x1100> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR blocks :: char * @ [<AddressLiveRange addr=<STACK:-0x11a8> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR pad :: int4 @ [<AddressLiveRange addr=<STACK:-0x11c4> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR hbuf :: <ARRAY subtype=char dimensions=(21,) size=21> @ [<AddressLiveRange addr=<STACK:-0x1100> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR majorbuf :: <ARRAY subtype=char dimensions=(21,) size=21> @ [<AddressLiveRange addr=<STACK:-0x1120> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR minorbuf :: <ARRAY subtype=char dimensions=(21,) size=21> @ [<AddressLiveRange addr=<STACK:-0x1100> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR blanks_width :: int4 @ [<AddressLiveRange addr=<STACK:-0x11bc> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR hbuf :: <ARRAY subtype=char dimensions=(652,) size=652> @ [<AddressLiveRange addr=<STACK:-0x1100> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR size :: char * @ [<AddressLiveRange addr=<STACK:-0x11a0> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR pad :: int4 @ [<AddressLiveRange addr=<STACK:-0x11c0> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR six_months_ago :: <STRUCT timespec membertypes=2 size=16> @ [<AddressLiveRange addr=<STACK:-0x1180> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR recent :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x11c5> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
	<VAR hbuf :: <ARRAY subtype=char dimensions=(21,) size=21> @ [<AddressLiveRange addr=<STACK:-0x1100> startpc=<ABSOLUTE:0xc647> endpc=<ABSOLUTE:0xd08c>>]>
format_inode :: (char *, unsigned int8, <STRUCT fileinfo membertypes=13 size=208> *) -> char * @ PC range=(<ABSOLUTE:0xc5c2>, <ABSOLUTE:0xc648>)
	<PARAM buf :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xc5c2> endpc=<ABSOLUTE:0xc648>>]>
	<PARAM buflen :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xc5c2> endpc=<ABSOLUTE:0xc648>>]>
	<PARAM f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xc5c2> endpc=<ABSOLUTE:0xc648>>]>
	<VAR __PRETTY_FUNCTION__ :: <ARRAY subtype=char dimensions=(13,) size=13> @ [<AddressLiveRange addr=<ABSOLUTE:0x233e0> startpc=<ABSOLUTE:0xc5c2> endpc=<ABSOLUTE:0xc648>>]>
format_group_width :: (unsigned int4) -> int4 @ PC range=(<ABSOLUTE:0xc582>, <ABSOLUTE:0xc5c3>)
	<PARAM g :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0xc582> endpc=<ABSOLUTE:0xc5c3>>]>
format_user_width :: (unsigned int4) -> int4 @ PC range=(<ABSOLUTE:0xc542>, <ABSOLUTE:0xc583>)
	<PARAM u :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0xc542> endpc=<ABSOLUTE:0xc583>>]>
format_user_or_group_width :: (char *, unsigned int8) -> int4 @ PC range=(<ABSOLUTE:0xc4dd>, <ABSOLUTE:0xc543>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xc4dd> endpc=<ABSOLUTE:0xc543>>]>
	<PARAM id :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xc4dd> endpc=<ABSOLUTE:0xc543>>]>
	<VAR len :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0xc4dd> endpc=<ABSOLUTE:0xc543>>]>
format_group :: (unsigned int4, int4, unsigned char) -> void @ PC range=(<ABSOLUTE:0xc47d>, <ABSOLUTE:0xc4de>)
	<PARAM g :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0xc47d> endpc=<ABSOLUTE:0xc4de>>]>
	<PARAM width :: int4 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xc47d> endpc=<ABSOLUTE:0xc4de>>]>
	<PARAM stat_ok :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x2c> startpc=<ABSOLUTE:0xc47d> endpc=<ABSOLUTE:0xc4de>>]>
format_user :: (unsigned int4, int4, unsigned char) -> void @ PC range=(<ABSOLUTE:0xc41d>, <ABSOLUTE:0xc47e>)
	<PARAM u :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0xc41d> endpc=<ABSOLUTE:0xc47e>>]>
	<PARAM width :: int4 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xc41d> endpc=<ABSOLUTE:0xc47e>>]>
	<PARAM stat_ok :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x2c> startpc=<ABSOLUTE:0xc41d> endpc=<ABSOLUTE:0xc47e>>]>
format_user_or_group :: (char *, unsigned int8, int4) -> void @ PC range=(<ABSOLUTE:0xc37b>, <ABSOLUTE:0xc41e>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xc37b> endpc=<ABSOLUTE:0xc41e>>]>
	<PARAM id :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xc37b> endpc=<ABSOLUTE:0xc41e>>]>
	<PARAM width :: int4 @ [<AddressLiveRange addr=<STACK:-0x34> startpc=<ABSOLUTE:0xc37b> endpc=<ABSOLUTE:0xc41e>>]>
	<VAR width_gap :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0xc37b> endpc=<ABSOLUTE:0xc41e>>]>
	<VAR pad :: int4 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xc37b> endpc=<ABSOLUTE:0xc41e>>]>
long_time_expected_width :: () -> int4 @ PC range=(<ABSOLUTE:0xc287>, <ABSOLUTE:0xc37c>)
	<VAR width :: int4 @ [<AddressLiveRange addr=<ABSOLUTE:0x2b034> startpc=<ABSOLUTE:0xc287> endpc=<ABSOLUTE:0xc37c>>]>
	<VAR epoch :: int8 @ [<AddressLiveRange addr=<STACK:-0x460> startpc=<ABSOLUTE:0xc287> endpc=<ABSOLUTE:0xc37c>>]>
	<VAR tm :: <STRUCT tm membertypes=11 size=56> @ [<AddressLiveRange addr=<STACK:-0x450> startpc=<ABSOLUTE:0xc287> endpc=<ABSOLUTE:0xc37c>>]>
	<VAR buf :: <ARRAY subtype=char dimensions=(1001,) size=1001> @ [<AddressLiveRange addr=<STACK:-0x410> startpc=<ABSOLUTE:0xc287> endpc=<ABSOLUTE:0xc37c>>]>
	<VAR len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x458> startpc=<ABSOLUTE:0xc287> endpc=<ABSOLUTE:0xc37c>>]>
align_nstrftime :: (char *, unsigned int8, unsigned char, <STRUCT tm membertypes=11 size=56> *, <STRUCT tm_zone membertypes=0 size=0> *, int4) -> unsigned int8 @ PC range=(<ABSOLUTE:0xc1de>, <ABSOLUTE:0xc288>)
	<PARAM buf :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xc1de> endpc=<ABSOLUTE:0xc288>>]>
	<PARAM size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xc1de> endpc=<ABSOLUTE:0xc288>>]>
	<PARAM recent :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x34> startpc=<ABSOLUTE:0xc1de> endpc=<ABSOLUTE:0xc288>>]>
	<PARAM tm :: <STRUCT tm membertypes=11 size=56> * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0xc1de> endpc=<ABSOLUTE:0xc288>>]>
	<PARAM tz :: <STRUCT tm_zone membertypes=0 size=0> * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xc1de> endpc=<ABSOLUTE:0xc288>>]>
	<PARAM ns :: int4 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xc1de> endpc=<ABSOLUTE:0xc288>>]>
	<VAR nfmt :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xc1de> endpc=<ABSOLUTE:0xc288>>]>
print_current_files :: () -> void @ PC range=(<ABSOLUTE:0xc0ac>, <ABSOLUTE:0xc1df>)
	<VAR i :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xc0ac> endpc=<ABSOLUTE:0xc1df>>]>
sort_files :: () -> void @ PC range=(<ABSOLUTE:0xbf44>, <ABSOLUTE:0xc0ad>)
	<VAR use_strcmp :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x11> startpc=<ABSOLUTE:0xbf44> endpc=<ABSOLUTE:0xc0ad>>]>
	<VAR __PRETTY_FUNCTION__ :: <ARRAY subtype=char dimensions=(11,) size=11> @ [<AddressLiveRange addr=<ABSOLUTE:0x233d0> startpc=<ABSOLUTE:0xbf44> endpc=<ABSOLUTE:0xc0ad>>]>
update_current_files_info :: () -> void @ PC range=(<ABSOLUTE:0xbebc>, <ABSOLUTE:0xbf45>)
	<VAR i :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbebc> endpc=<ABSOLUTE:0xbf45>>]>
	<VAR f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbebc> endpc=<ABSOLUTE:0xbf45>>]>
initialize_ordering_vector :: () -> void @ PC range=(<ABSOLUTE:0xbe59>, <ABSOLUTE:0xbebd>)
	<VAR i :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbe59> endpc=<ABSOLUTE:0xbebd>>]>
rev_xstrcoll_df_version :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbe29>, <ABSOLUTE:0xbe5a>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbe29> endpc=<ABSOLUTE:0xbe5a>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbe29> endpc=<ABSOLUTE:0xbe5a>>]>
xstrcoll_df_version :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbdf9>, <ABSOLUTE:0xbe2a>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbdf9> endpc=<ABSOLUTE:0xbe2a>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbdf9> endpc=<ABSOLUTE:0xbe2a>>]>
rev_xstrcoll_version :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbdd0>, <ABSOLUTE:0xbdfa>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbdd0> endpc=<ABSOLUTE:0xbdfa>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbdd0> endpc=<ABSOLUTE:0xbdfa>>]>
xstrcoll_version :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbda7>, <ABSOLUTE:0xbdd1>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbda7> endpc=<ABSOLUTE:0xbdd1>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbda7> endpc=<ABSOLUTE:0xbdd1>>]>
cmp_version :: (<STRUCT fileinfo membertypes=13 size=208> *, <STRUCT fileinfo membertypes=13 size=208> *) -> int4 @ PC range=(<ABSOLUTE:0xbd51>, <ABSOLUTE:0xbda8>)
	<PARAM a :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xbd51> endpc=<ABSOLUTE:0xbda8>>]>
	<PARAM b :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xbd51> endpc=<ABSOLUTE:0xbda8>>]>
	<VAR diff :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0xbd51> endpc=<ABSOLUTE:0xbda8>>]>
rev_strcmp_df_width :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbd21>, <ABSOLUTE:0xbd52>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbd21> endpc=<ABSOLUTE:0xbd52>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbd21> endpc=<ABSOLUTE:0xbd52>>]>
rev_xstrcoll_df_width :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbcf1>, <ABSOLUTE:0xbd22>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbcf1> endpc=<ABSOLUTE:0xbd22>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbcf1> endpc=<ABSOLUTE:0xbd22>>]>
strcmp_df_width :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbcc1>, <ABSOLUTE:0xbcf2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbcc1> endpc=<ABSOLUTE:0xbcf2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbcc1> endpc=<ABSOLUTE:0xbcf2>>]>
xstrcoll_df_width :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbc91>, <ABSOLUTE:0xbcc2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbc91> endpc=<ABSOLUTE:0xbcc2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbc91> endpc=<ABSOLUTE:0xbcc2>>]>
rev_strcmp_width :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbc61>, <ABSOLUTE:0xbc92>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbc61> endpc=<ABSOLUTE:0xbc92>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbc61> endpc=<ABSOLUTE:0xbc92>>]>
rev_xstrcoll_width :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbc31>, <ABSOLUTE:0xbc62>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbc31> endpc=<ABSOLUTE:0xbc62>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbc31> endpc=<ABSOLUTE:0xbc62>>]>
strcmp_width :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbc01>, <ABSOLUTE:0xbc32>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbc01> endpc=<ABSOLUTE:0xbc32>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbc01> endpc=<ABSOLUTE:0xbc32>>]>
xstrcoll_width :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbbd1>, <ABSOLUTE:0xbc02>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbbd1> endpc=<ABSOLUTE:0xbc02>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbbd1> endpc=<ABSOLUTE:0xbc02>>]>
rev_strcmp_df_extension :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbba1>, <ABSOLUTE:0xbbd2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbba1> endpc=<ABSOLUTE:0xbbd2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbba1> endpc=<ABSOLUTE:0xbbd2>>]>
rev_xstrcoll_df_extension :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbb71>, <ABSOLUTE:0xbba2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbb71> endpc=<ABSOLUTE:0xbba2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbb71> endpc=<ABSOLUTE:0xbba2>>]>
strcmp_df_extension :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbb41>, <ABSOLUTE:0xbb72>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbb41> endpc=<ABSOLUTE:0xbb72>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbb41> endpc=<ABSOLUTE:0xbb72>>]>
xstrcoll_df_extension :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbb11>, <ABSOLUTE:0xbb42>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbb11> endpc=<ABSOLUTE:0xbb42>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbb11> endpc=<ABSOLUTE:0xbb42>>]>
rev_strcmp_extension :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbae1>, <ABSOLUTE:0xbb12>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbae1> endpc=<ABSOLUTE:0xbb12>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbae1> endpc=<ABSOLUTE:0xbb12>>]>
rev_xstrcoll_extension :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xbab1>, <ABSOLUTE:0xbae2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xbab1> endpc=<ABSOLUTE:0xbae2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xbab1> endpc=<ABSOLUTE:0xbae2>>]>
strcmp_extension :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xba81>, <ABSOLUTE:0xbab2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xba81> endpc=<ABSOLUTE:0xbab2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xba81> endpc=<ABSOLUTE:0xbab2>>]>
xstrcoll_extension :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xba51>, <ABSOLUTE:0xba82>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xba51> endpc=<ABSOLUTE:0xba82>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xba51> endpc=<ABSOLUTE:0xba82>>]>
rev_strcmp_df_name :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xba21>, <ABSOLUTE:0xba52>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xba21> endpc=<ABSOLUTE:0xba52>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xba21> endpc=<ABSOLUTE:0xba52>>]>
rev_xstrcoll_df_name :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb9f1>, <ABSOLUTE:0xba22>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb9f1> endpc=<ABSOLUTE:0xba22>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb9f1> endpc=<ABSOLUTE:0xba22>>]>
strcmp_df_name :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb9c1>, <ABSOLUTE:0xb9f2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb9c1> endpc=<ABSOLUTE:0xb9f2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb9c1> endpc=<ABSOLUTE:0xb9f2>>]>
xstrcoll_df_name :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb991>, <ABSOLUTE:0xb9c2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb991> endpc=<ABSOLUTE:0xb9c2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb991> endpc=<ABSOLUTE:0xb9c2>>]>
rev_strcmp_name :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb961>, <ABSOLUTE:0xb992>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb961> endpc=<ABSOLUTE:0xb992>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb961> endpc=<ABSOLUTE:0xb992>>]>
rev_xstrcoll_name :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb931>, <ABSOLUTE:0xb962>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb931> endpc=<ABSOLUTE:0xb962>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb931> endpc=<ABSOLUTE:0xb962>>]>
strcmp_name :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb901>, <ABSOLUTE:0xb932>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb901> endpc=<ABSOLUTE:0xb932>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb901> endpc=<ABSOLUTE:0xb932>>]>
xstrcoll_name :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb8d1>, <ABSOLUTE:0xb902>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb8d1> endpc=<ABSOLUTE:0xb902>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb8d1> endpc=<ABSOLUTE:0xb902>>]>
rev_strcmp_df_size :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb8a1>, <ABSOLUTE:0xb8d2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb8a1> endpc=<ABSOLUTE:0xb8d2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb8a1> endpc=<ABSOLUTE:0xb8d2>>]>
rev_xstrcoll_df_size :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb871>, <ABSOLUTE:0xb8a2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb871> endpc=<ABSOLUTE:0xb8a2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb871> endpc=<ABSOLUTE:0xb8a2>>]>
strcmp_df_size :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb841>, <ABSOLUTE:0xb872>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb841> endpc=<ABSOLUTE:0xb872>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb841> endpc=<ABSOLUTE:0xb872>>]>
xstrcoll_df_size :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb811>, <ABSOLUTE:0xb842>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb811> endpc=<ABSOLUTE:0xb842>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb811> endpc=<ABSOLUTE:0xb842>>]>
rev_strcmp_size :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb7e1>, <ABSOLUTE:0xb812>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb7e1> endpc=<ABSOLUTE:0xb812>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb7e1> endpc=<ABSOLUTE:0xb812>>]>
rev_xstrcoll_size :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb7b1>, <ABSOLUTE:0xb7e2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb7b1> endpc=<ABSOLUTE:0xb7e2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb7b1> endpc=<ABSOLUTE:0xb7e2>>]>
strcmp_size :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb781>, <ABSOLUTE:0xb7b2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb781> endpc=<ABSOLUTE:0xb7b2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb781> endpc=<ABSOLUTE:0xb7b2>>]>
xstrcoll_size :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb751>, <ABSOLUTE:0xb782>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb751> endpc=<ABSOLUTE:0xb782>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb751> endpc=<ABSOLUTE:0xb782>>]>
rev_strcmp_df_btime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb721>, <ABSOLUTE:0xb752>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb721> endpc=<ABSOLUTE:0xb752>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb721> endpc=<ABSOLUTE:0xb752>>]>
rev_xstrcoll_df_btime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb6f1>, <ABSOLUTE:0xb722>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb6f1> endpc=<ABSOLUTE:0xb722>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb6f1> endpc=<ABSOLUTE:0xb722>>]>
strcmp_df_btime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb6c1>, <ABSOLUTE:0xb6f2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb6c1> endpc=<ABSOLUTE:0xb6f2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb6c1> endpc=<ABSOLUTE:0xb6f2>>]>
xstrcoll_df_btime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb691>, <ABSOLUTE:0xb6c2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb691> endpc=<ABSOLUTE:0xb6c2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb691> endpc=<ABSOLUTE:0xb6c2>>]>
rev_strcmp_btime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb661>, <ABSOLUTE:0xb692>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb661> endpc=<ABSOLUTE:0xb692>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb661> endpc=<ABSOLUTE:0xb692>>]>
rev_xstrcoll_btime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb631>, <ABSOLUTE:0xb662>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb631> endpc=<ABSOLUTE:0xb662>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb631> endpc=<ABSOLUTE:0xb662>>]>
strcmp_btime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb601>, <ABSOLUTE:0xb632>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb601> endpc=<ABSOLUTE:0xb632>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb601> endpc=<ABSOLUTE:0xb632>>]>
xstrcoll_btime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb5d1>, <ABSOLUTE:0xb602>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb5d1> endpc=<ABSOLUTE:0xb602>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb5d1> endpc=<ABSOLUTE:0xb602>>]>
rev_strcmp_df_atime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb5a1>, <ABSOLUTE:0xb5d2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb5a1> endpc=<ABSOLUTE:0xb5d2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb5a1> endpc=<ABSOLUTE:0xb5d2>>]>
rev_xstrcoll_df_atime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb571>, <ABSOLUTE:0xb5a2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb571> endpc=<ABSOLUTE:0xb5a2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb571> endpc=<ABSOLUTE:0xb5a2>>]>
strcmp_df_atime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb541>, <ABSOLUTE:0xb572>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb541> endpc=<ABSOLUTE:0xb572>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb541> endpc=<ABSOLUTE:0xb572>>]>
xstrcoll_df_atime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb511>, <ABSOLUTE:0xb542>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb511> endpc=<ABSOLUTE:0xb542>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb511> endpc=<ABSOLUTE:0xb542>>]>
rev_strcmp_atime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb4e1>, <ABSOLUTE:0xb512>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb4e1> endpc=<ABSOLUTE:0xb512>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb4e1> endpc=<ABSOLUTE:0xb512>>]>
rev_xstrcoll_atime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb4b1>, <ABSOLUTE:0xb4e2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb4b1> endpc=<ABSOLUTE:0xb4e2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb4b1> endpc=<ABSOLUTE:0xb4e2>>]>
strcmp_atime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb481>, <ABSOLUTE:0xb4b2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb481> endpc=<ABSOLUTE:0xb4b2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb481> endpc=<ABSOLUTE:0xb4b2>>]>
xstrcoll_atime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb451>, <ABSOLUTE:0xb482>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb451> endpc=<ABSOLUTE:0xb482>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb451> endpc=<ABSOLUTE:0xb482>>]>
rev_strcmp_df_mtime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb421>, <ABSOLUTE:0xb452>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb421> endpc=<ABSOLUTE:0xb452>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb421> endpc=<ABSOLUTE:0xb452>>]>
rev_xstrcoll_df_mtime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb3f1>, <ABSOLUTE:0xb422>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb3f1> endpc=<ABSOLUTE:0xb422>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb3f1> endpc=<ABSOLUTE:0xb422>>]>
strcmp_df_mtime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb3c1>, <ABSOLUTE:0xb3f2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb3c1> endpc=<ABSOLUTE:0xb3f2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb3c1> endpc=<ABSOLUTE:0xb3f2>>]>
xstrcoll_df_mtime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb391>, <ABSOLUTE:0xb3c2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb391> endpc=<ABSOLUTE:0xb3c2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb391> endpc=<ABSOLUTE:0xb3c2>>]>
rev_strcmp_mtime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb361>, <ABSOLUTE:0xb392>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb361> endpc=<ABSOLUTE:0xb392>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb361> endpc=<ABSOLUTE:0xb392>>]>
rev_xstrcoll_mtime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb331>, <ABSOLUTE:0xb362>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb331> endpc=<ABSOLUTE:0xb362>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb331> endpc=<ABSOLUTE:0xb362>>]>
strcmp_mtime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb301>, <ABSOLUTE:0xb332>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb301> endpc=<ABSOLUTE:0xb332>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb301> endpc=<ABSOLUTE:0xb332>>]>
xstrcoll_mtime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb2d1>, <ABSOLUTE:0xb302>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb2d1> endpc=<ABSOLUTE:0xb302>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb2d1> endpc=<ABSOLUTE:0xb302>>]>
rev_strcmp_df_ctime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb2a1>, <ABSOLUTE:0xb2d2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb2a1> endpc=<ABSOLUTE:0xb2d2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb2a1> endpc=<ABSOLUTE:0xb2d2>>]>
rev_xstrcoll_df_ctime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb271>, <ABSOLUTE:0xb2a2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb271> endpc=<ABSOLUTE:0xb2a2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb271> endpc=<ABSOLUTE:0xb2a2>>]>
strcmp_df_ctime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb241>, <ABSOLUTE:0xb272>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb241> endpc=<ABSOLUTE:0xb272>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb241> endpc=<ABSOLUTE:0xb272>>]>
xstrcoll_df_ctime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb211>, <ABSOLUTE:0xb242>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb211> endpc=<ABSOLUTE:0xb242>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb211> endpc=<ABSOLUTE:0xb242>>]>
rev_strcmp_ctime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb1e1>, <ABSOLUTE:0xb212>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb1e1> endpc=<ABSOLUTE:0xb212>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb1e1> endpc=<ABSOLUTE:0xb212>>]>
rev_xstrcoll_ctime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb1b1>, <ABSOLUTE:0xb1e2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb1b1> endpc=<ABSOLUTE:0xb1e2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb1b1> endpc=<ABSOLUTE:0xb1e2>>]>
strcmp_ctime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb181>, <ABSOLUTE:0xb1b2>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb181> endpc=<ABSOLUTE:0xb1b2>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb181> endpc=<ABSOLUTE:0xb1b2>>]>
xstrcoll_ctime :: (void *, void *) -> int4 @ PC range=(<ABSOLUTE:0xb151>, <ABSOLUTE:0xb182>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb151> endpc=<ABSOLUTE:0xb182>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xb151> endpc=<ABSOLUTE:0xb182>>]>
cmp_width :: (<STRUCT fileinfo membertypes=13 size=208> *, <STRUCT fileinfo membertypes=13 size=208> *, (char *, char *) -> int4 *) -> int4 @ PC range=(<ABSOLUTE:0xb0ea>, <ABSOLUTE:0xb152>)
	<PARAM a :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xb0ea> endpc=<ABSOLUTE:0xb152>>]>
	<PARAM b :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0xb0ea> endpc=<ABSOLUTE:0xb152>>]>
	<PARAM cmp :: (char *, char *) -> int4 * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xb0ea> endpc=<ABSOLUTE:0xb152>>]>
	<VAR diff :: int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0xb0ea> endpc=<ABSOLUTE:0xb152>>]>
fileinfo_name_width :: (<STRUCT fileinfo membertypes=13 size=208> *) -> unsigned int8 @ PC range=(<ABSOLUTE:0xb098>, <ABSOLUTE:0xb0eb>)
	<PARAM f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xb098> endpc=<ABSOLUTE:0xb0eb>>]>
cmp_extension :: (<STRUCT fileinfo membertypes=13 size=208> *, <STRUCT fileinfo membertypes=13 size=208> *, (char *, char *) -> int4 *) -> int4 @ PC range=(<ABSOLUTE:0xaff2>, <ABSOLUTE:0xb099>)
	<PARAM a :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xaff2> endpc=<ABSOLUTE:0xb099>>]>
	<PARAM b :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0xaff2> endpc=<ABSOLUTE:0xb099>>]>
	<PARAM cmp :: (char *, char *) -> int4 * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xaff2> endpc=<ABSOLUTE:0xb099>>]>
	<VAR base1 :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xaff2> endpc=<ABSOLUTE:0xb099>>]>
	<VAR base2 :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xaff2> endpc=<ABSOLUTE:0xb099>>]>
	<VAR diff :: int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0xaff2> endpc=<ABSOLUTE:0xb099>>]>
cmp_name :: (<STRUCT fileinfo membertypes=13 size=208> *, <STRUCT fileinfo membertypes=13 size=208> *, (char *, char *) -> int4 *) -> int4 @ PC range=(<ABSOLUTE:0xafbe>, <ABSOLUTE:0xaff3>)
	<PARAM a :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xafbe> endpc=<ABSOLUTE:0xaff3>>]>
	<PARAM b :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xafbe> endpc=<ABSOLUTE:0xaff3>>]>
	<PARAM cmp :: (char *, char *) -> int4 * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xafbe> endpc=<ABSOLUTE:0xaff3>>]>
cmp_size :: (<STRUCT fileinfo membertypes=13 size=208> *, <STRUCT fileinfo membertypes=13 size=208> *, (char *, char *) -> int4 *) -> int4 @ PC range=(<ABSOLUTE:0xaf61>, <ABSOLUTE:0xafbf>)
	<PARAM a :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xaf61> endpc=<ABSOLUTE:0xafbf>>]>
	<PARAM b :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xaf61> endpc=<ABSOLUTE:0xafbf>>]>
	<PARAM cmp :: (char *, char *) -> int4 * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xaf61> endpc=<ABSOLUTE:0xafbf>>]>
	<VAR diff :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0xaf61> endpc=<ABSOLUTE:0xafbf>>]>
off_cmp :: (int8, int8) -> int4 @ PC range=(<ABSOLUTE:0xaf30>, <ABSOLUTE:0xaf62>)
	<PARAM a :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xaf30> endpc=<ABSOLUTE:0xaf62>>]>
	<PARAM b :: int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xaf30> endpc=<ABSOLUTE:0xaf62>>]>
cmp_btime :: (<STRUCT fileinfo membertypes=13 size=208> *, <STRUCT fileinfo membertypes=13 size=208> *, (char *, char *) -> int4 *) -> int4 @ PC range=(<ABSOLUTE:0xae9d>, <ABSOLUTE:0xaf31>)
	<PARAM a :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xae9d> endpc=<ABSOLUTE:0xaf31>>]>
	<PARAM b :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0xae9d> endpc=<ABSOLUTE:0xaf31>>]>
	<PARAM cmp :: (char *, char *) -> int4 * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0xae9d> endpc=<ABSOLUTE:0xaf31>>]>
	<VAR diff :: int4 @ [<AddressLiveRange addr=<STACK:-0x34> startpc=<ABSOLUTE:0xae9d> endpc=<ABSOLUTE:0xaf31>>]>
cmp_atime :: (<STRUCT fileinfo membertypes=13 size=208> *, <STRUCT fileinfo membertypes=13 size=208> *, (char *, char *) -> int4 *) -> int4 @ PC range=(<ABSOLUTE:0xae0a>, <ABSOLUTE:0xae9e>)
	<PARAM a :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xae0a> endpc=<ABSOLUTE:0xae9e>>]>
	<PARAM b :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0xae0a> endpc=<ABSOLUTE:0xae9e>>]>
	<PARAM cmp :: (char *, char *) -> int4 * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0xae0a> endpc=<ABSOLUTE:0xae9e>>]>
	<VAR diff :: int4 @ [<AddressLiveRange addr=<STACK:-0x34> startpc=<ABSOLUTE:0xae0a> endpc=<ABSOLUTE:0xae9e>>]>
cmp_mtime :: (<STRUCT fileinfo membertypes=13 size=208> *, <STRUCT fileinfo membertypes=13 size=208> *, (char *, char *) -> int4 *) -> int4 @ PC range=(<ABSOLUTE:0xad77>, <ABSOLUTE:0xae0b>)
	<PARAM a :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xad77> endpc=<ABSOLUTE:0xae0b>>]>
	<PARAM b :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0xad77> endpc=<ABSOLUTE:0xae0b>>]>
	<PARAM cmp :: (char *, char *) -> int4 * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0xad77> endpc=<ABSOLUTE:0xae0b>>]>
	<VAR diff :: int4 @ [<AddressLiveRange addr=<STACK:-0x34> startpc=<ABSOLUTE:0xad77> endpc=<ABSOLUTE:0xae0b>>]>
cmp_ctime :: (<STRUCT fileinfo membertypes=13 size=208> *, <STRUCT fileinfo membertypes=13 size=208> *, (char *, char *) -> int4 *) -> int4 @ PC range=(<ABSOLUTE:0xace4>, <ABSOLUTE:0xad78>)
	<PARAM a :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xace4> endpc=<ABSOLUTE:0xad78>>]>
	<PARAM b :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0xace4> endpc=<ABSOLUTE:0xad78>>]>
	<PARAM cmp :: (char *, char *) -> int4 * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0xace4> endpc=<ABSOLUTE:0xad78>>]>
	<VAR diff :: int4 @ [<AddressLiveRange addr=<STACK:-0x34> startpc=<ABSOLUTE:0xace4> endpc=<ABSOLUTE:0xad78>>]>
dirfirst_check :: (<STRUCT fileinfo membertypes=13 size=208> *, <STRUCT fileinfo membertypes=13 size=208> *, (void *, void *) -> int4 *) -> int4 @ PC range=(<ABSOLUTE:0xac81>, <ABSOLUTE:0xace5>)
	<PARAM a :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xac81> endpc=<ABSOLUTE:0xace5>>]>
	<PARAM b :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0xac81> endpc=<ABSOLUTE:0xace5>>]>
	<PARAM cmp :: (void *, void *) -> int4 * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xac81> endpc=<ABSOLUTE:0xace5>>]>
	<VAR diff :: int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0xac81> endpc=<ABSOLUTE:0xace5>>]>
xstrcoll :: (char *, char *) -> int4 @ PC range=(<ABSOLUTE:0xabb5>, <ABSOLUTE:0xac82>)
	<PARAM a :: char * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xabb5> endpc=<ABSOLUTE:0xac82>>]>
	<PARAM b :: char * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0xabb5> endpc=<ABSOLUTE:0xac82>>]>
	<VAR diff :: int4 @ [<AddressLiveRange addr=<STACK:-0x34> startpc=<ABSOLUTE:0xabb5> endpc=<ABSOLUTE:0xac82>>]>
extract_dirs_from_files :: (char *, unsigned char) -> void @ PC range=(<ABSOLUTE:0xa9e4>, <ABSOLUTE:0xabb6>)
	<PARAM dirname :: char * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xa9e4> endpc=<ABSOLUTE:0xabb6>>]>
	<PARAM command_line_arg :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x4c> startpc=<ABSOLUTE:0xa9e4> endpc=<ABSOLUTE:0xabb6>>]>
	<VAR i :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xa9e4> endpc=<ABSOLUTE:0xabb6>>]>
	<VAR j :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xa9e4> endpc=<ABSOLUTE:0xabb6>>]>
	<VAR ignore_dot_and_dot_dot :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x39> startpc=<ABSOLUTE:0xa9e4> endpc=<ABSOLUTE:0xabb6>>]>
	<VAR f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xa9e4> endpc=<ABSOLUTE:0xabb6>>]>
	<VAR name :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xa9e4> endpc=<ABSOLUTE:0xabb6>>]>
	<VAR f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xa9e4> endpc=<ABSOLUTE:0xabb6>>]>
basename_is_dot_or_dotdot :: (char *) -> unsigned char @ PC range=(<ABSOLUTE:0xa9b6>, <ABSOLUTE:0xa9e5>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xa9b6> endpc=<ABSOLUTE:0xa9e5>>]>
	<VAR base :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xa9b6> endpc=<ABSOLUTE:0xa9e5>>]>
make_link_name :: (char *, char *) -> char * @ PC range=(<ABSOLUTE:0xa8e3>, <ABSOLUTE:0xa9b7>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xa8e3> endpc=<ABSOLUTE:0xa9b7>>]>
	<PARAM linkname :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xa8e3> endpc=<ABSOLUTE:0xa9b7>>]>
	<VAR prefix_len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xa8e3> endpc=<ABSOLUTE:0xa9b7>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xa8e3> endpc=<ABSOLUTE:0xa9b7>>]>
get_link_name :: (char *, <STRUCT fileinfo membertypes=13 size=208> *, unsigned char) -> void @ PC range=(<ABSOLUTE:0xa874>, <ABSOLUTE:0xa8e4>)
	<PARAM filename :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xa874> endpc=<ABSOLUTE:0xa8e4>>]>
	<PARAM f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xa874> endpc=<ABSOLUTE:0xa8e4>>]>
	<PARAM command_line_arg :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0xa874> endpc=<ABSOLUTE:0xa8e4>>]>
is_linked_directory :: (<STRUCT fileinfo membertypes=13 size=208> *) -> unsigned char @ PC range=(<ABSOLUTE:0xa823>, <ABSOLUTE:0xa875>)
	<PARAM f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xa823> endpc=<ABSOLUTE:0xa875>>]>
is_directory :: (<STRUCT fileinfo membertypes=13 size=208> *) -> unsigned char @ PC range=(<ABSOLUTE:0xa7e8>, <ABSOLUTE:0xa824>)
	<PARAM f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xa7e8> endpc=<ABSOLUTE:0xa824>>]>
gobble_file :: (char *, unsigned int4, unsigned int8, unsigned char, char *) -> unsigned int8 @ PC range=(<ABSOLUTE:0x99bf>, <ABSOLUTE:0xa7e9>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x3d8> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<PARAM type :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x3dc> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<PARAM inode :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x3e8> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<PARAM command_line_arg :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x3e0> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<PARAM dirname :: char * @ [<AddressLiveRange addr=<STACK:-0x3f0> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR blocks :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x398> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x388> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR __PRETTY_FUNCTION__ :: <ARRAY subtype=char dimensions=(12,) size=12> @ [<AddressLiveRange addr=<ABSOLUTE:0x233c0> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR full_name :: char * @ [<AddressLiveRange addr=<STACK:-0x390> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR do_deref :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x3cc> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR err :: int4 @ [<AddressLiveRange addr=<STACK:-0x3c8> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR need_lstat :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x3c9> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR have_scontext :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x3cb> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR have_acl :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x3ca> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR attr_len :: int4 @ [<AddressLiveRange addr=<STACK:-0x3c4> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR n :: int4 @ [<AddressLiveRange addr=<STACK:-0x3c0> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR linkstats :: <STRUCT stat membertypes=15 size=144> @ [<AddressLiveRange addr=<STACK:-0x370> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR linkname :: char * @ [<AddressLiveRange addr=<STACK:-0x380> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR buf :: <ARRAY subtype=char dimensions=(652,) size=652> @ [<AddressLiveRange addr=<STACK:-0x2c0> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR len :: int4 @ [<AddressLiveRange addr=<STACK:-0x3bc> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR len :: int4 @ [<AddressLiveRange addr=<STACK:-0x3b8> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR len :: int4 @ [<AddressLiveRange addr=<STACK:-0x3b4> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR len :: int4 @ [<AddressLiveRange addr=<STACK:-0x3b0> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR len :: int4 @ [<AddressLiveRange addr=<STACK:-0x3ac> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR b :: <ARRAY subtype=char dimensions=(21,) size=21> @ [<AddressLiveRange addr=<STACK:-0x2e0> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR b_len :: int4 @ [<AddressLiveRange addr=<STACK:-0x3a8> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR buf :: <ARRAY subtype=char dimensions=(21,) size=21> @ [<AddressLiveRange addr=<STACK:-0x2c0> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR len :: int4 @ [<AddressLiveRange addr=<STACK:-0x3a0> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR buf :: <ARRAY subtype=char dimensions=(652,) size=652> @ [<AddressLiveRange addr=<STACK:-0x2c0> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x378> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR len :: int4 @ [<AddressLiveRange addr=<STACK:-0x3a4> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR buf :: <ARRAY subtype=char dimensions=(21,) size=21> @ [<AddressLiveRange addr=<STACK:-0x2c0> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
	<VAR len :: int4 @ [<AddressLiveRange addr=<STACK:-0x39c> startpc=<ABSOLUTE:0x99bf> endpc=<ABSOLUTE:0xa7e9>>]>
needs_quoting :: (char *) -> unsigned char @ PC range=(<ABSOLUTE:0x9930>, <ABSOLUTE:0x99c0>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x9930> endpc=<ABSOLUTE:0x99c0>>]>
	<VAR test :: <ARRAY subtype=char dimensions=(2,) size=2> @ [<AddressLiveRange addr=<STACK:-0x1a> startpc=<ABSOLUTE:0x9930> endpc=<ABSOLUTE:0x99c0>>]>
	<VAR len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x9930> endpc=<ABSOLUTE:0x99c0>>]>
has_capability_cache :: (char *, <STRUCT fileinfo membertypes=13 size=208> *) -> unsigned char @ PC range=(<ABSOLUTE:0x98b5>, <ABSOLUTE:0x9931>)
	<PARAM file :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x98b5> endpc=<ABSOLUTE:0x9931>>]>
	<PARAM f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x98b5> endpc=<ABSOLUTE:0x9931>>]>
	<VAR unsupported_device :: unsigned int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x2c438> startpc=<ABSOLUTE:0x98b5> endpc=<ABSOLUTE:0x9931>>]>
	<VAR b :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x11> startpc=<ABSOLUTE:0x98b5> endpc=<ABSOLUTE:0x9931>>]>
file_has_acl_cache :: (char *, <STRUCT fileinfo membertypes=13 size=208> *) -> int4 @ PC range=(<ABSOLUTE:0x982a>, <ABSOLUTE:0x98b6>)
	<PARAM file :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x982a> endpc=<ABSOLUTE:0x98b6>>]>
	<PARAM f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x982a> endpc=<ABSOLUTE:0x98b6>>]>
	<VAR unsupported_device :: unsigned int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x2c430> startpc=<ABSOLUTE:0x982a> endpc=<ABSOLUTE:0x98b6>>]>
	<VAR n :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x982a> endpc=<ABSOLUTE:0x98b6>>]>
getfilecon_cache :: (char *, <STRUCT fileinfo membertypes=13 size=208> *, unsigned char) -> int4 @ PC range=(<ABSOLUTE:0x9779>, <ABSOLUTE:0x982b>)
	<PARAM file :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x9779> endpc=<ABSOLUTE:0x982b>>]>
	<PARAM f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x9779> endpc=<ABSOLUTE:0x982b>>]>
	<PARAM deref :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x34> startpc=<ABSOLUTE:0x9779> endpc=<ABSOLUTE:0x982b>>]>
	<VAR unsupported_device :: unsigned int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x2c428> startpc=<ABSOLUTE:0x9779> endpc=<ABSOLUTE:0x982b>>]>
	<VAR r :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x9779> endpc=<ABSOLUTE:0x982b>>]>
errno_unsupported :: (int4) -> unsigned char @ PC range=(<ABSOLUTE:0x973f>, <ABSOLUTE:0x977a>)
	<PARAM err :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x973f> endpc=<ABSOLUTE:0x977a>>]>
clear_files :: () -> void @ PC range=(<ABSOLUTE:0x9672>, <ABSOLUTE:0x9740>)
	<VAR i :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x9672> endpc=<ABSOLUTE:0x9740>>]>
	<VAR f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x9672> endpc=<ABSOLUTE:0x9740>>]>
free_ent :: (<STRUCT fileinfo membertypes=13 size=208> *) -> void @ PC range=(<ABSOLUTE:0x95e8>, <ABSOLUTE:0x9673>)
	<PARAM f :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x95e8> endpc=<ABSOLUTE:0x9673>>]>
has_capability :: (char *) -> unsigned char @ PC range=(<ABSOLUTE:0x95c6>, <ABSOLUTE:0x95e9>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x95c6> endpc=<ABSOLUTE:0x95e9>>]>
unsigned_file_size :: (int8) -> unsigned int8 @ PC range=(<ABSOLUTE:0x95b4>, <ABSOLUTE:0x95c7>)
	<PARAM size :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x95b4> endpc=<ABSOLUTE:0x95c7>>]>
file_ignored :: (char *) -> unsigned char @ PC range=(<ABSOLUTE:0x950c>, <ABSOLUTE:0x95b5>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x950c> endpc=<ABSOLUTE:0x95b5>>]>
patterns_match :: (<STRUCT ignore_pattern membertypes=2 size=16> *, char *) -> unsigned char @ PC range=(<ABSOLUTE:0x94ae>, <ABSOLUTE:0x950d>)
	<PARAM patterns :: <STRUCT ignore_pattern membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x94ae> endpc=<ABSOLUTE:0x950d>>]>
	<PARAM file :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x94ae> endpc=<ABSOLUTE:0x950d>>]>
	<VAR p :: <STRUCT ignore_pattern membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x94ae> endpc=<ABSOLUTE:0x950d>>]>
add_ignore_pattern :: (char *) -> void @ PC range=(<ABSOLUTE:0x9468>, <ABSOLUTE:0x94af>)
	<PARAM pattern :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x9468> endpc=<ABSOLUTE:0x94af>>]>
	<VAR ignore :: <STRUCT ignore_pattern membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x9468> endpc=<ABSOLUTE:0x94af>>]>
print_dir :: (char *, char *, unsigned char) -> void @ PC range=(<ABSOLUTE:0x8e5d>, <ABSOLUTE:0x9469>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x398> startpc=<ABSOLUTE:0x8e5d> endpc=<ABSOLUTE:0x9469>>]>
	<PARAM realname :: char * @ [<AddressLiveRange addr=<STACK:-0x3a0> startpc=<ABSOLUTE:0x8e5d> endpc=<ABSOLUTE:0x9469>>]>
	<PARAM command_line_arg :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x3a4> startpc=<ABSOLUTE:0x8e5d> endpc=<ABSOLUTE:0x9469>>]>
	<VAR dirp :: <STRUCT __dirstream membertypes=0 size=0> * @ [<AddressLiveRange addr=<STACK:-0x370> startpc=<ABSOLUTE:0x8e5d> endpc=<ABSOLUTE:0x9469>>]>
	<VAR next :: <STRUCT dirent membertypes=5 size=280> * @ [<AddressLiveRange addr=<STACK:-0x368> startpc=<ABSOLUTE:0x8e5d> endpc=<ABSOLUTE:0x9469>>]>
	<VAR total_blocks :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x380> startpc=<ABSOLUTE:0x8e5d> endpc=<ABSOLUTE:0x9469>>]>
	<VAR first :: unsigned char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b032> startpc=<ABSOLUTE:0x8e5d> endpc=<ABSOLUTE:0x9469>>]>
	<VAR dir_stat :: <STRUCT stat membertypes=15 size=144> @ [<AddressLiveRange addr=<STACK:-0x350> startpc=<ABSOLUTE:0x8e5d> endpc=<ABSOLUTE:0x9469>>]>
	<VAR fd :: int4 @ [<AddressLiveRange addr=<STACK:-0x384> startpc=<ABSOLUTE:0x8e5d> endpc=<ABSOLUTE:0x9469>>]>
	<VAR absolute_name :: char * @ [<AddressLiveRange addr=<STACK:-0x378> startpc=<ABSOLUTE:0x8e5d> endpc=<ABSOLUTE:0x9469>>]>
	<VAR type :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x388> startpc=<ABSOLUTE:0x8e5d> endpc=<ABSOLUTE:0x9469>>]>
	<VAR buf :: <ARRAY subtype=char dimensions=(654,) size=654> @ [<AddressLiveRange addr=<STACK:-0x2c0> startpc=<ABSOLUTE:0x8e5d> endpc=<ABSOLUTE:0x9469>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x360> startpc=<ABSOLUTE:0x8e5d> endpc=<ABSOLUTE:0x9469>>]>
	<VAR pend :: char * @ [<AddressLiveRange addr=<STACK:-0x358> startpc=<ABSOLUTE:0x8e5d> endpc=<ABSOLUTE:0x9469>>]>
queue_directory :: (char *, char *, unsigned char) -> void @ PC range=(<ABSOLUTE:0x8dc5>, <ABSOLUTE:0x8e5e>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x8dc5> endpc=<ABSOLUTE:0x8e5e>>]>
	<PARAM realname :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x8dc5> endpc=<ABSOLUTE:0x8e5e>>]>
	<PARAM command_line_arg :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x34> startpc=<ABSOLUTE:0x8dc5> endpc=<ABSOLUTE:0x8e5e>>]>
	<VAR new :: <STRUCT pending membertypes=4 size=32> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x8dc5> endpc=<ABSOLUTE:0x8e5e>>]>
file_failure :: (unsigned char, char *, char *) -> void @ PC range=(<ABSOLUTE:0x8d66>, <ABSOLUTE:0x8dc6>)
	<PARAM serious :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0x8d66> endpc=<ABSOLUTE:0x8dc6>>]>
	<PARAM message :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x8d66> endpc=<ABSOLUTE:0x8dc6>>]>
	<PARAM file :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x8d66> endpc=<ABSOLUTE:0x8dc6>>]>
set_exit_status :: (unsigned char) -> void @ PC range=(<ABSOLUTE:0x8d30>, <ABSOLUTE:0x8d67>)
	<PARAM serious :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x8d30> endpc=<ABSOLUTE:0x8d67>>]>
getenv_quoting_style :: () -> int4 @ PC range=(<ABSOLUTE:0x8c7e>, <ABSOLUTE:0x8d31>)
	<VAR q_style :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x8c7e> endpc=<ABSOLUTE:0x8d31>>]>
	<VAR i :: int4 @ [<AddressLiveRange addr=<STACK:-0x2c> startpc=<ABSOLUTE:0x8c7e> endpc=<ABSOLUTE:0x8d31>>]>
parse_ls_color :: () -> void @ PC range=(<ABSOLUTE:0x8836>, <ABSOLUTE:0x8c7f>)
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x8836> endpc=<ABSOLUTE:0x8c7f>>]>
	<VAR buf :: char * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x8836> endpc=<ABSOLUTE:0x8c7f>>]>
	<VAR ind_no :: int4 @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x8836> endpc=<ABSOLUTE:0x8c7f>>]>
	<VAR label :: <ARRAY subtype=char dimensions=(3,) size=3> @ [<AddressLiveRange addr=<STACK:-0x2b> startpc=<ABSOLUTE:0x8836> endpc=<ABSOLUTE:0x8c7f>>]>
	<VAR ext :: <STRUCT color_ext_type membertypes=3 size=40> * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x8836> endpc=<ABSOLUTE:0x8c7f>>]>
	<VAR state :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x64> startpc=<ABSOLUTE:0x8836> endpc=<ABSOLUTE:0x8c7f>>]>
	<VAR colorterm :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x8836> endpc=<ABSOLUTE:0x8c7f>>]>
	<VAR e :: <STRUCT color_ext_type membertypes=3 size=40> * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x8836> endpc=<ABSOLUTE:0x8c7f>>]>
	<VAR e2 :: <STRUCT color_ext_type membertypes=3 size=40> * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x8836> endpc=<ABSOLUTE:0x8c7f>>]>
known_term_type :: () -> unsigned char @ PC range=(<ABSOLUTE:0x8777>, <ABSOLUTE:0x8837>)
	<VAR term :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x8777> endpc=<ABSOLUTE:0x8837>>]>
	<VAR line :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x8777> endpc=<ABSOLUTE:0x8837>>]>
get_funky_string :: (char * *, char * *, unsigned char, unsigned int8 *) -> unsigned char @ PC range=(<ABSOLUTE:0x83ba>, <ABSOLUTE:0x8778>)
	<PARAM dest :: char * * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x83ba> endpc=<ABSOLUTE:0x8778>>]>
	<PARAM src :: char * * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x83ba> endpc=<ABSOLUTE:0x8778>>]>
	<PARAM equals_end :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x44> startpc=<ABSOLUTE:0x83ba> endpc=<ABSOLUTE:0x8778>>]>
	<PARAM output_count :: unsigned int8 * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x83ba> endpc=<ABSOLUTE:0x8778>>]>
	<VAR num :: char @ [<AddressLiveRange addr=<STACK:-0x2d> startpc=<ABSOLUTE:0x83ba> endpc=<ABSOLUTE:0x8778>>]>
	<VAR count :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x83ba> endpc=<ABSOLUTE:0x8778>>]>
	<VAR state :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x2c> startpc=<ABSOLUTE:0x83ba> endpc=<ABSOLUTE:0x8778>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x83ba> endpc=<ABSOLUTE:0x8778>>]>
	<VAR q :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x83ba> endpc=<ABSOLUTE:0x8778>>]>
decode_switches :: (int4, char * *) -> int4 @ PC range=(<ABSOLUTE:0x703a>, <ABSOLUTE:0x83bb>)
	<PARAM argc :: int4 @ [<AddressLiveRange addr=<STACK:-0xd4> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<PARAM argv :: char * * @ [<AddressLiveRange addr=<STACK:-0xe0> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR time_style_option :: char * @ [<AddressLiveRange addr=<STACK:-0xa0> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR kibibytes_specified :: unsigned char @ [<AddressLiveRange addr=<STACK:-0xcd> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR format_opt :: int4 @ [<AddressLiveRange addr=<STACK:-0xcc> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR hide_control_chars_opt :: int4 @ [<AddressLiveRange addr=<STACK:-0xc8> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR quoting_style_opt :: int4 @ [<AddressLiveRange addr=<STACK:-0xc4> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR sort_opt :: int4 @ [<AddressLiveRange addr=<STACK:-0xc0> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR tabsize_opt :: int8 @ [<AddressLiveRange addr=<STACK:-0x98> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR width_opt :: int8 @ [<AddressLiveRange addr=<STACK:-0x90> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR linelen :: int8 @ [<AddressLiveRange addr=<STACK:-0x88> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR qs :: int4 @ [<AddressLiveRange addr=<STACK:-0xb0> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR oi :: int4 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR c :: int4 @ [<AddressLiveRange addr=<STACK:-0xa8> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR i :: int4 @ [<AddressLiveRange addr=<STACK:-0xbc> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR hide :: <STRUCT ignore_pattern membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR i :: int4 @ [<AddressLiveRange addr=<STACK:-0xb8> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR i :: int4 @ [<AddressLiveRange addr=<STACK:-0xb4> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR e :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0xa4> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR ls_block_size :: char * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR ws :: <STRUCT winsize membertypes=4 size=8> @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR tmp :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x80> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR style :: char * @ [<AddressLiveRange addr=<STACK:-0x78> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR posix_prefix :: <ARRAY subtype=char dimensions=(7,) size=7> @ [<AddressLiveRange addr=<ABSOLUTE:0x233b5> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR p0 :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR p1 :: char * @ [<AddressLiveRange addr=<STACK:-0x70> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR res :: int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR p :: char * * @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
	<VAR i :: int4 @ [<AddressLiveRange addr=<STACK:-0xac> startpc=<ABSOLUTE:0x703a> endpc=<ABSOLUTE:0x83bb>>]>
stdout_isatty :: () -> unsigned char @ PC range=(<ABSOLUTE:0x6ff5>, <ABSOLUTE:0x703b>)
	<VAR out_tty :: char @ [<AddressLiveRange addr=<ABSOLUTE:0x2b031> startpc=<ABSOLUTE:0x6ff5> endpc=<ABSOLUTE:0x703b>>]>
decode_line_length :: (char *) -> int8 @ PC range=(<ABSOLUTE:0x6f71>, <ABSOLUTE:0x6ff6>)
	<PARAM spec :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x6f71> endpc=<ABSOLUTE:0x6ff6>>]>
	<VAR val :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x6f71> endpc=<ABSOLUTE:0x6ff6>>]>
main :: (int4, char * *) -> int4 @ PC range=(<ABSOLUTE:0x680d>, <ABSOLUTE:0x6f72>)
	<PARAM argc :: int4 @ [<AddressLiveRange addr=<STACK:-0x54> startpc=<ABSOLUTE:0x680d> endpc=<ABSOLUTE:0x6f72>>]>
	<PARAM argv :: char * * @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x680d> endpc=<ABSOLUTE:0x6f72>>]>
	<VAR i :: int4 @ [<AddressLiveRange addr=<STACK:-0x4c> startpc=<ABSOLUTE:0x680d> endpc=<ABSOLUTE:0x6f72>>]>
	<VAR thispend :: <STRUCT pending membertypes=4 size=32> * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x680d> endpc=<ABSOLUTE:0x6f72>>]>
	<VAR n_files :: int4 @ [<AddressLiveRange addr=<STACK:-0x44> startpc=<ABSOLUTE:0x680d> endpc=<ABSOLUTE:0x6f72>>]>
	<VAR __PRETTY_FUNCTION__ :: <ARRAY subtype=char dimensions=(5,) size=5> @ [<AddressLiveRange addr=<ABSOLUTE:0x233b0> startpc=<ABSOLUTE:0x680d> endpc=<ABSOLUTE:0x6f72>>]>
	<VAR di :: <STRUCT dev_ino membertypes=2 size=16> @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x680d> endpc=<ABSOLUTE:0x6f72>>]>
	<VAR found :: <STRUCT dev_ino membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x680d> endpc=<ABSOLUTE:0x6f72>>]>
	<VAR j :: int4 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x680d> endpc=<ABSOLUTE:0x6f72>>]>
signal_restore :: () -> void @ PC range=(<ABSOLUTE:0x67f8>, <ABSOLUTE:0x680e>)
signal_init :: () -> void @ PC range=(<ABSOLUTE:0x67e3>, <ABSOLUTE:0x67f9>)
signal_setup :: (unsigned char) -> void @ PC range=(<ABSOLUTE:0x651e>, <ABSOLUTE:0x67e4>)
	<PARAM init :: unsigned char @ [<AddressLiveRange addr=<STACK:-0xc4> startpc=<ABSOLUTE:0x651e> endpc=<ABSOLUTE:0x67e4>>]>
	<VAR sig :: <ARRAY subtype=int4 dimensions=(12,) size=48> @ [<AddressLiveRange addr=<ABSOLUTE:0x23380> startpc=<ABSOLUTE:0x651e> endpc=<ABSOLUTE:0x67e4>>]>
	<VAR j :: int4 @ [<AddressLiveRange addr=<STACK:-0xb4> startpc=<ABSOLUTE:0x651e> endpc=<ABSOLUTE:0x67e4>>]>
	<VAR act :: <STRUCT sigaction membertypes=4 size=152> @ [<AddressLiveRange addr=<STACK:-0xb0> startpc=<ABSOLUTE:0x651e> endpc=<ABSOLUTE:0x67e4>>]>
process_signals :: () -> void @ PC range=(<ABSOLUTE:0x6417>, <ABSOLUTE:0x651f>)
	<VAR sig :: int4 @ [<AddressLiveRange addr=<STACK:-0xa8> startpc=<ABSOLUTE:0x6417> endpc=<ABSOLUTE:0x651f>>]>
	<VAR stops :: int4 @ [<AddressLiveRange addr=<STACK:-0xa4> startpc=<ABSOLUTE:0x6417> endpc=<ABSOLUTE:0x651f>>]>
	<VAR oldset :: <STRUCT membertypes=1 size=128> @ [<AddressLiveRange addr=<STACK:-0xa0> startpc=<ABSOLUTE:0x6417> endpc=<ABSOLUTE:0x651f>>]>
stophandler :: (int4) -> void @ PC range=(<ABSOLUTE:0x63f0>, <ABSOLUTE:0x6418>)
	<PARAM sig :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x63f0> endpc=<ABSOLUTE:0x6418>>]>
sighandler :: (int4) -> void @ PC range=(<ABSOLUTE:0x63cf>, <ABSOLUTE:0x63f1>)
	<PARAM sig :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x63cf> endpc=<ABSOLUTE:0x63f1>>]>
set_normal_color :: () -> void @ PC range=(<ABSOLUTE:0x637e>, <ABSOLUTE:0x63d0>)
restore_default_color :: () -> void @ PC range=(<ABSOLUTE:0x6355>, <ABSOLUTE:0x637f>)
is_colored :: (unsigned int4) -> unsigned char @ PC range=(<ABSOLUTE:0x62b5>, <ABSOLUTE:0x6356>)
	<PARAM type :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0x62b5> endpc=<ABSOLUTE:0x6356>>]>
	<VAR len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x62b5> endpc=<ABSOLUTE:0x6356>>]>
	<VAR s :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x62b5> endpc=<ABSOLUTE:0x6356>>]>
free_pending_ent :: (<STRUCT pending membertypes=4 size=32> *) -> void @ PC range=(<ABSOLUTE:0x6277>, <ABSOLUTE:0x62b6>)
	<PARAM p :: <STRUCT pending membertypes=4 size=32> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x6277> endpc=<ABSOLUTE:0x62b6>>]>
visit_dir :: (unsigned int8, unsigned int8) -> unsigned char @ PC range=(<ABSOLUTE:0x61f2>, <ABSOLUTE:0x6278>)
	<PARAM dev :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x61f2> endpc=<ABSOLUTE:0x6278>>]>
	<PARAM ino :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x61f2> endpc=<ABSOLUTE:0x6278>>]>
	<VAR ent :: <STRUCT dev_ino membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x61f2> endpc=<ABSOLUTE:0x6278>>]>
	<VAR ent_from_table :: <STRUCT dev_ino membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x61f2> endpc=<ABSOLUTE:0x6278>>]>
	<VAR found_match :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x21> startpc=<ABSOLUTE:0x61f2> endpc=<ABSOLUTE:0x6278>>]>
dev_ino_free :: (void *) -> void @ PC range=(<ABSOLUTE:0x61d3>, <ABSOLUTE:0x61f3>)
	<PARAM x :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x61d3> endpc=<ABSOLUTE:0x61f3>>]>
dev_ino_compare :: (void *, void *) -> unsigned char @ PC range=(<ABSOLUTE:0x617a>, <ABSOLUTE:0x61d4>)
	<PARAM x :: void * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x617a> endpc=<ABSOLUTE:0x61d4>>]>
	<PARAM y :: void * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x617a> endpc=<ABSOLUTE:0x61d4>>]>
	<VAR a :: <STRUCT dev_ino membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x617a> endpc=<ABSOLUTE:0x61d4>>]>
	<VAR b :: <STRUCT dev_ino membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x617a> endpc=<ABSOLUTE:0x61d4>>]>
dev_ino_hash :: (void *, unsigned int8) -> unsigned int8 @ PC range=(<ABSOLUTE:0x614d>, <ABSOLUTE:0x617b>)
	<PARAM x :: void * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x614d> endpc=<ABSOLUTE:0x617b>>]>
	<PARAM table_size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x614d> endpc=<ABSOLUTE:0x617b>>]>
	<VAR p :: <STRUCT dev_ino membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x614d> endpc=<ABSOLUTE:0x617b>>]>
abformat_init :: () -> void @ PC range=(<ABSOLUTE:0x5ed3>, <ABSOLUTE:0x614e>)
	<VAR pb :: <ARRAY subtype=char * dimensions=(2,) size=16> @ [<AddressLiveRange addr=<STACK:-0x630> startpc=<ABSOLUTE:0x5ed3> endpc=<ABSOLUTE:0x614e>>]>
	<VAR abmon :: <ARRAY subtype=char dimensions=(12, 128) size=1536> @ [<AddressLiveRange addr=<STACK:-0x620> startpc=<ABSOLUTE:0x5ed3> endpc=<ABSOLUTE:0x614e>>]>
	<VAR recent :: int4 @ [<AddressLiveRange addr=<STACK:-0x654> startpc=<ABSOLUTE:0x5ed3> endpc=<ABSOLUTE:0x614e>>]>
	<VAR recent :: int4 @ [<AddressLiveRange addr=<STACK:-0x650> startpc=<ABSOLUTE:0x5ed3> endpc=<ABSOLUTE:0x614e>>]>
	<VAR fmt :: char * @ [<AddressLiveRange addr=<STACK:-0x640> startpc=<ABSOLUTE:0x5ed3> endpc=<ABSOLUTE:0x614e>>]>
	<VAR i :: int4 @ [<AddressLiveRange addr=<STACK:-0x64c> startpc=<ABSOLUTE:0x5ed3> endpc=<ABSOLUTE:0x614e>>]>
	<VAR nfmt :: char * @ [<AddressLiveRange addr=<STACK:-0x638> startpc=<ABSOLUTE:0x5ed3> endpc=<ABSOLUTE:0x614e>>]>
	<VAR nbytes :: int4 @ [<AddressLiveRange addr=<STACK:-0x648> startpc=<ABSOLUTE:0x5ed3> endpc=<ABSOLUTE:0x614e>>]>
	<VAR prefix_len :: int4 @ [<AddressLiveRange addr=<STACK:-0x644> startpc=<ABSOLUTE:0x5ed3> endpc=<ABSOLUTE:0x614e>>]>
abmon_init :: (<ARRAY subtype=char dimensions=(128,) size=128> *) -> unsigned char @ PC range=(<ABSOLUTE:0x5d84>, <ABSOLUTE:0x5ed4>)
	<PARAM abmon :: <ARRAY subtype=char dimensions=(128,) size=128> * @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x5d84> endpc=<ABSOLUTE:0x5ed4>>]>
	<VAR required_mon_width :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x5d84> endpc=<ABSOLUTE:0x5ed4>>]>
	<VAR curr_max_width :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x5d84> endpc=<ABSOLUTE:0x5ed4>>]>
	<VAR i :: int4 @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x5d84> endpc=<ABSOLUTE:0x5ed4>>]>
	<VAR width :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x5d84> endpc=<ABSOLUTE:0x5ed4>>]>
	<VAR abbr :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x5d84> endpc=<ABSOLUTE:0x5ed4>>]>
	<VAR alignment :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x54> startpc=<ABSOLUTE:0x5d84> endpc=<ABSOLUTE:0x5ed4>>]>
	<VAR req :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x5d84> endpc=<ABSOLUTE:0x5ed4>>]>
file_escape_init :: () -> void @ PC range=(<ABSOLUTE:0x5d07>, <ABSOLUTE:0x5d85>)
	<VAR i :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x5d07> endpc=<ABSOLUTE:0x5d85>>]>
first_percent_b :: (char *) -> char * @ PC range=(<ABSOLUTE:0x5cb3>, <ABSOLUTE:0x5d08>)
	<PARAM fmt :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x5cb3> endpc=<ABSOLUTE:0x5d08>>]>
fstat_for_ino :: (int4, <STRUCT stat membertypes=15 size=144> *) -> int4 @ PC range=(<ABSOLUTE:0x5c7e>, <ABSOLUTE:0x5cb4>)
	<PARAM fd :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x5c7e> endpc=<ABSOLUTE:0x5cb4>>]>
	<PARAM st :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x5c7e> endpc=<ABSOLUTE:0x5cb4>>]>
stat_for_ino :: (char *, <STRUCT stat membertypes=15 size=144> *) -> int4 @ PC range=(<ABSOLUTE:0x5c48>, <ABSOLUTE:0x5c7f>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x5c48> endpc=<ABSOLUTE:0x5c7f>>]>
	<PARAM st :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x5c48> endpc=<ABSOLUTE:0x5c7f>>]>
stat_for_mode :: (char *, <STRUCT stat membertypes=15 size=144> *) -> int4 @ PC range=(<ABSOLUTE:0x5c12>, <ABSOLUTE:0x5c49>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x5c12> endpc=<ABSOLUTE:0x5c49>>]>
	<PARAM st :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x5c12> endpc=<ABSOLUTE:0x5c49>>]>
do_lstat :: (char *, <STRUCT stat membertypes=15 size=144> *) -> int4 @ PC range=(<ABSOLUTE:0x5bd8>, <ABSOLUTE:0x5c13>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x5bd8> endpc=<ABSOLUTE:0x5c13>>]>
	<PARAM st :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x5bd8> endpc=<ABSOLUTE:0x5c13>>]>
do_stat :: (char *, <STRUCT stat membertypes=15 size=144> *) -> int4 @ PC range=(<ABSOLUTE:0x5b9e>, <ABSOLUTE:0x5bd9>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x5b9e> endpc=<ABSOLUTE:0x5bd9>>]>
	<PARAM st :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x5b9e> endpc=<ABSOLUTE:0x5bd9>>]>
do_statx :: (int4, char *, <STRUCT stat membertypes=15 size=144> *, int4, unsigned int4) -> int4 @ PC range=(<ABSOLUTE:0x5a62>, <ABSOLUTE:0x5b9f>)
	<PARAM fd :: int4 @ [<AddressLiveRange addr=<STACK:-0x144> startpc=<ABSOLUTE:0x5a62> endpc=<ABSOLUTE:0x5b9f>>]>
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x150> startpc=<ABSOLUTE:0x5a62> endpc=<ABSOLUTE:0x5b9f>>]>
	<PARAM st :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x158> startpc=<ABSOLUTE:0x5a62> endpc=<ABSOLUTE:0x5b9f>>]>
	<PARAM flags :: int4 @ [<AddressLiveRange addr=<STACK:-0x148> startpc=<ABSOLUTE:0x5a62> endpc=<ABSOLUTE:0x5b9f>>]>
	<PARAM mask :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x15c> startpc=<ABSOLUTE:0x5a62> endpc=<ABSOLUTE:0x5b9f>>]>
	<VAR stx :: <STRUCT statx membertypes=21 size=256> @ [<AddressLiveRange addr=<STACK:-0x130> startpc=<ABSOLUTE:0x5a62> endpc=<ABSOLUTE:0x5b9f>>]>
	<VAR want_btime :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x135> startpc=<ABSOLUTE:0x5a62> endpc=<ABSOLUTE:0x5b9f>>]>
	<VAR ret :: int4 @ [<AddressLiveRange addr=<STACK:-0x134> startpc=<ABSOLUTE:0x5a62> endpc=<ABSOLUTE:0x5b9f>>]>
calc_req_mask :: () -> unsigned int4 @ PC range=(<ABSOLUTE:0x599c>, <ABSOLUTE:0x5a63>)
	<VAR mask :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x599c> endpc=<ABSOLUTE:0x5a63>>]>
time_type_to_statx :: () -> unsigned int4 @ PC range=(<ABSOLUTE:0x594e>, <ABSOLUTE:0x599d>)
get_stat_btime :: (<STRUCT stat membertypes=15 size=144> *) -> <STRUCT timespec membertypes=2 size=16> @ PC range=(<ABSOLUTE:0x5920>, <ABSOLUTE:0x594f>)
	<PARAM st :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x5920> endpc=<ABSOLUTE:0x594f>>]>
	<VAR btimespec :: <STRUCT timespec membertypes=2 size=16> @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x5920> endpc=<ABSOLUTE:0x594f>>]>
dired_dump_obstack :: (char *, <STRUCT obstack membertypes=13 size=88> *) -> void @ PC range=(<ABSOLUTE:0x57af>, <ABSOLUTE:0x5921>)
	<PARAM prefix :: char * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x57af> endpc=<ABSOLUTE:0x5921>>]>
	<PARAM os :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x57af> endpc=<ABSOLUTE:0x5921>>]>
	<VAR n_pos :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x57af> endpc=<ABSOLUTE:0x5921>>]>
	<VAR __o :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x57af> endpc=<ABSOLUTE:0x5921>>]>
	<VAR pos :: int8 * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x57af> endpc=<ABSOLUTE:0x5921>>]>
	<VAR __o1 :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x57af> endpc=<ABSOLUTE:0x5921>>]>
	<VAR __value :: void * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x57af> endpc=<ABSOLUTE:0x5921>>]>
	<VAR i :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x57af> endpc=<ABSOLUTE:0x5921>>]>
	<VAR p :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x57af> endpc=<ABSOLUTE:0x5921>>]>
assert_matching_dev_ino :: (char *, <STRUCT dev_ino membertypes=2 size=16>) -> void @ PC range=(<ABSOLUTE:0x566c>, <ABSOLUTE:0x57b0>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0xb8> startpc=<ABSOLUTE:0x566c> endpc=<ABSOLUTE:0x57b0>>]>
	<PARAM di :: <STRUCT dev_ino membertypes=2 size=16> @ [<AddressLiveRange addr=<STACK:-0xd0> startpc=<ABSOLUTE:0x566c> endpc=<ABSOLUTE:0x57b0>>]>
	<VAR sb :: <STRUCT stat membertypes=15 size=144> @ [<AddressLiveRange addr=<STACK:-0xb0> startpc=<ABSOLUTE:0x566c> endpc=<ABSOLUTE:0x57b0>>]>
	<VAR __PRETTY_FUNCTION__ :: <ARRAY subtype=char dimensions=(24,) size=24> @ [<AddressLiveRange addr=<ABSOLUTE:0x23360> startpc=<ABSOLUTE:0x566c> endpc=<ABSOLUTE:0x57b0>>]>
dev_ino_pop :: () -> <STRUCT dev_ino membertypes=2 size=16> @ PC range=(<ABSOLUTE:0x55cd>, <ABSOLUTE:0x566d>)
	<VAR vdi :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x55cd> endpc=<ABSOLUTE:0x566d>>]>
	<VAR di :: <STRUCT dev_ino membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x55cd> endpc=<ABSOLUTE:0x566d>>]>
	<VAR dev_ino_size :: int4 @ [<AddressLiveRange addr=<STACK:-0x2c> startpc=<ABSOLUTE:0x55cd> endpc=<ABSOLUTE:0x566d>>]>
	<VAR __PRETTY_FUNCTION__ :: <ARRAY subtype=char dimensions=(12,) size=12> @ [<AddressLiveRange addr=<ABSOLUTE:0x23348> startpc=<ABSOLUTE:0x55cd> endpc=<ABSOLUTE:0x566d>>]>
	<VAR __o :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x55cd> endpc=<ABSOLUTE:0x566d>>]>
dev_ino_push :: (unsigned int8, unsigned int8) -> void @ PC range=(<ABSOLUTE:0x551e>, <ABSOLUTE:0x55ce>)
	<PARAM dev :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x551e> endpc=<ABSOLUTE:0x55ce>>]>
	<PARAM ino :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x551e> endpc=<ABSOLUTE:0x55ce>>]>
	<VAR vdi :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x551e> endpc=<ABSOLUTE:0x55ce>>]>
	<VAR di :: <STRUCT dev_ino membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x551e> endpc=<ABSOLUTE:0x55ce>>]>
	<VAR dev_ino_size :: int4 @ [<AddressLiveRange addr=<STACK:-0x3c> startpc=<ABSOLUTE:0x551e> endpc=<ABSOLUTE:0x55ce>>]>
	<VAR __o :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x551e> endpc=<ABSOLUTE:0x55ce>>]>
	<VAR __len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x551e> endpc=<ABSOLUTE:0x55ce>>]>
	<VAR __o1 :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x551e> endpc=<ABSOLUTE:0x55ce>>]>
push_current_dired_pos :: (<STRUCT obstack membertypes=13 size=88> *) -> void @ PC range=(<ABSOLUTE:0x5484>, <ABSOLUTE:0x551f>)
	<PARAM obs :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x5484> endpc=<ABSOLUTE:0x551f>>]>
	<VAR __o :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x5484> endpc=<ABSOLUTE:0x551f>>]>
	<VAR __len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x5484> endpc=<ABSOLUTE:0x551f>>]>
	<VAR __o1 :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x5484> endpc=<ABSOLUTE:0x551f>>]>
dired_indent :: () -> void @ PC range=(<ABSOLUTE:0x545f>, <ABSOLUTE:0x5485>)
dired_outstring :: (char *) -> void @ PC range=(<ABSOLUTE:0x542e>, <ABSOLUTE:0x5460>)
	<PARAM s :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x542e> endpc=<ABSOLUTE:0x5460>>]>
dired_outbuf :: (char *, unsigned int8) -> void @ PC range=(<ABSOLUTE:0x53e3>, <ABSOLUTE:0x542f>)
	<PARAM s :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x53e3> endpc=<ABSOLUTE:0x542f>>]>
	<PARAM s_len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x53e3> endpc=<ABSOLUTE:0x542f>>]>
dired_outbyte :: (char) -> void @ PC range=(<ABSOLUTE:0x53b2>, <ABSOLUTE:0x53e4>)
	<PARAM c :: char @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x53b2> endpc=<ABSOLUTE:0x53e4>>]>
file_or_link_mode :: (<STRUCT fileinfo membertypes=13 size=208> *) -> unsigned int4 @ PC range=(<ABSOLUTE:0x5377>, <ABSOLUTE:0x53b3>)
	<PARAM file :: <STRUCT fileinfo membertypes=13 size=208> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x5377> endpc=<ABSOLUTE:0x53b3>>]>
statx_to_stat :: (<STRUCT statx membertypes=21 size=256> *, <STRUCT stat membertypes=15 size=144> *) -> void @ PC range=(<ABSOLUTE:0x5227>, <ABSOLUTE:0x5378>)
	<PARAM stx :: <STRUCT statx membertypes=21 size=256> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x5227> endpc=<ABSOLUTE:0x5378>>]>
	<PARAM stat :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x5227> endpc=<ABSOLUTE:0x5378>>]>
statx_timestamp_to_timespec :: (<STRUCT statx_timestamp membertypes=3 size=16>) -> <STRUCT timespec membertypes=2 size=16> @ PC range=(<ABSOLUTE:0x51f7>, <ABSOLUTE:0x5228>)
	<PARAM tsx :: <STRUCT statx_timestamp membertypes=3 size=16> @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x51f7> endpc=<ABSOLUTE:0x5228>>]>
	<VAR ts :: <STRUCT timespec membertypes=2 size=16> @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x51f7> endpc=<ABSOLUTE:0x5228>>]>
is_smack_enabled :: () -> unsigned char @ PC range=(<ABSOLUTE:0x51ec>, <ABSOLUTE:0x51f8>)
is_ENOTSUP :: (int4) -> unsigned char @ PC range=(<ABSOLUTE:0x51dc>, <ABSOLUTE:0x51ed>)
	<PARAM err :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x51dc> endpc=<ABSOLUTE:0x51ed>>]>
bad_cast :: (char *) -> char * @ PC range=(<ABSOLUTE:0x51ce>, <ABSOLUTE:0x51dd>)
	<PARAM s :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x51ce> endpc=<ABSOLUTE:0x51dd>>]>
timetostr :: (int8, char *) -> char * @ PC range=(<ABSOLUTE:0x51a9>, <ABSOLUTE:0x51cf>)
	<PARAM t :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x51a9> endpc=<ABSOLUTE:0x51cf>>]>
	<PARAM buf :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x51a9> endpc=<ABSOLUTE:0x51cf>>]>
emit_ancillary_info :: (char *) -> void @ PC range=(<ABSOLUTE:0x4f12>, <ABSOLUTE:0x51aa>)
	<PARAM program :: char * @ [<AddressLiveRange addr=<STACK:-0xc8> startpc=<ABSOLUTE:0x4f12> endpc=<ABSOLUTE:0x51aa>>]>
	<VAR infomap :: <ARRAY subtype=<STRUCT infomap membertypes=2 size=16> dimensions=(7,) size=112> @ [<AddressLiveRange addr=<STACK:-0xa0> startpc=<ABSOLUTE:0x4f12> endpc=<ABSOLUTE:0x51aa>>]>
	<VAR node :: char * @ [<AddressLiveRange addr=<STACK:-0xc0> startpc=<ABSOLUTE:0x4f12> endpc=<ABSOLUTE:0x51aa>>]>
	<VAR map_prog :: <STRUCT infomap membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0xb8> startpc=<ABSOLUTE:0x4f12> endpc=<ABSOLUTE:0x51aa>>]>
	<VAR lc_messages :: char * @ [<AddressLiveRange addr=<STACK:-0xb0> startpc=<ABSOLUTE:0x4f12> endpc=<ABSOLUTE:0x51aa>>]>
	<VAR url_program :: char * @ [<AddressLiveRange addr=<STACK:-0xa8> startpc=<ABSOLUTE:0x4f12> endpc=<ABSOLUTE:0x51aa>>]>
emit_size_note :: () -> void @ PC range=(<ABSOLUTE:0x4ee1>, <ABSOLUTE:0x4f13>)
emit_mandatory_arg_note :: () -> void @ PC range=(<ABSOLUTE:0x4eb0>, <ABSOLUTE:0x4ee2>)
dot_or_dotdot :: (char *) -> unsigned char @ PC range=(<ABSOLUTE:0x4e51>, <ABSOLUTE:0x4eb1>)
	<PARAM file_name :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x4e51> endpc=<ABSOLUTE:0x4eb1>>]>
	<VAR sep :: char @ [<AddressLiveRange addr=<STACK:-0x11> startpc=<ABSOLUTE:0x4e51> endpc=<ABSOLUTE:0x4eb1>>]>
to_uchar :: (char) -> unsigned char @ PC range=(<ABSOLUTE:0x4e42>, <ABSOLUTE:0x4e52>)
	<PARAM ch :: char @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x4e42> endpc=<ABSOLUTE:0x4e52>>]>
initialize_exit_failure :: (int4) -> void @ PC range=(<ABSOLUTE:0x4e29>, <ABSOLUTE:0x4e43>)
	<PARAM status :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x4e29> endpc=<ABSOLUTE:0x4e43>>]>
areadlink_with_size :: (char *, unsigned int8) -> char * @ PC range=(<ABSOLUTE:0xf729>, <ABSOLUTE:0xf9f3>)
	<PARAM file :: char * @ [<AddressLiveRange addr=<STACK:-0xf8> startpc=<ABSOLUTE:0xf729> endpc=<ABSOLUTE:0xf9f3>>]>
	<PARAM size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x100> startpc=<ABSOLUTE:0xf729> endpc=<ABSOLUTE:0xf9f3>>]>
	<VAR symlink_max :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0xd0> startpc=<ABSOLUTE:0xf729> endpc=<ABSOLUTE:0xf9f3>>]>
	<VAR INITIAL_LIMIT_BOUND :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0xc8> startpc=<ABSOLUTE:0xf729> endpc=<ABSOLUTE:0xf9f3>>]>
	<VAR initial_limit :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0xc0> startpc=<ABSOLUTE:0xf729> endpc=<ABSOLUTE:0xf9f3>>]>
	<VAR buf_size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0xe8> startpc=<ABSOLUTE:0xf729> endpc=<ABSOLUTE:0xf9f3>>]>
	<VAR r :: int8 @ [<AddressLiveRange addr=<STACK:-0xb8> startpc=<ABSOLUTE:0xf729> endpc=<ABSOLUTE:0xf9f3>>]>
	<VAR link_length :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0xb0> startpc=<ABSOLUTE:0xf729> endpc=<ABSOLUTE:0xf9f3>>]>
	<VAR stackbuf :: <ARRAY subtype=char dimensions=(128,) size=128> @ [<AddressLiveRange addr=<STACK:-0xa0> startpc=<ABSOLUTE:0xf729> endpc=<ABSOLUTE:0xf9f3>>]>
	<VAR buf :: char * @ [<AddressLiveRange addr=<STACK:-0xe0> startpc=<ABSOLUTE:0xf729> endpc=<ABSOLUTE:0xf9f3>>]>
	<VAR buffer :: char * @ [<AddressLiveRange addr=<STACK:-0xd8> startpc=<ABSOLUTE:0xf729> endpc=<ABSOLUTE:0xf9f3>>]>
	<VAR shrinked_buffer :: char * @ [<AddressLiveRange addr=<STACK:-0xa8> startpc=<ABSOLUTE:0xf729> endpc=<ABSOLUTE:0xf9f3>>]>
argmatch_to_argument :: (void *, char * *, void *, unsigned int8) -> char * @ PC range=(<ABSOLUTE:0xfe4f>, <ABSOLUTE:0xfee0>)
	<PARAM value :: void * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xfe4f> endpc=<ABSOLUTE:0xfee0>>]>
	<PARAM arglist :: char * * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xfe4f> endpc=<ABSOLUTE:0xfee0>>]>
	<PARAM vallist :: void * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xfe4f> endpc=<ABSOLUTE:0xfee0>>]>
	<PARAM valsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0xfe4f> endpc=<ABSOLUTE:0xfee0>>]>
	<VAR i :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xfe4f> endpc=<ABSOLUTE:0xfee0>>]>
__xargmatch_internal :: (char *, char *, char * *, void *, unsigned int8, () -> void *, unsigned char) -> int8 @ PC range=(<ABSOLUTE:0xfda0>, <ABSOLUTE:0xfe50>)
	<PARAM context :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xfda0> endpc=<ABSOLUTE:0xfe50>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xfda0> endpc=<ABSOLUTE:0xfe50>>]>
	<PARAM arglist :: char * * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xfda0> endpc=<ABSOLUTE:0xfe50>>]>
	<PARAM vallist :: void * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0xfda0> endpc=<ABSOLUTE:0xfe50>>]>
	<PARAM valsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xfda0> endpc=<ABSOLUTE:0xfe50>>]>
	<PARAM exit_fn :: () -> void * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0xfda0> endpc=<ABSOLUTE:0xfe50>>]>
	<PARAM allow_abbreviation :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x54> startpc=<ABSOLUTE:0xfda0> endpc=<ABSOLUTE:0xfe50>>]>
	<VAR res :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xfda0> endpc=<ABSOLUTE:0xfe50>>]>
argmatch_valid :: (char * *, void *, unsigned int8) -> void @ PC range=(<ABSOLUTE:0xfc49>, <ABSOLUTE:0xfda1>)
	<PARAM arglist :: char * * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xfc49> endpc=<ABSOLUTE:0xfda1>>]>
	<PARAM vallist :: void * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0xfc49> endpc=<ABSOLUTE:0xfda1>>]>
	<PARAM valsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xfc49> endpc=<ABSOLUTE:0xfda1>>]>
	<VAR i :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xfc49> endpc=<ABSOLUTE:0xfda1>>]>
	<VAR last_val :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xfc49> endpc=<ABSOLUTE:0xfda1>>]>
argmatch_invalid :: (char *, char *, int8) -> void @ PC range=(<ABSOLUTE:0xfbb0>, <ABSOLUTE:0xfc4a>)
	<PARAM context :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xfbb0> endpc=<ABSOLUTE:0xfc4a>>]>
	<PARAM value :: char * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0xfbb0> endpc=<ABSOLUTE:0xfc4a>>]>
	<PARAM problem :: int8 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xfbb0> endpc=<ABSOLUTE:0xfc4a>>]>
	<VAR format :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xfbb0> endpc=<ABSOLUTE:0xfc4a>>]>
argmatch_exact :: (char *, char * *) -> int8 @ PC range=(<ABSOLUTE:0xfb3a>, <ABSOLUTE:0xfbb1>)
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xfb3a> endpc=<ABSOLUTE:0xfbb1>>]>
	<PARAM arglist :: char * * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0xfb3a> endpc=<ABSOLUTE:0xfbb1>>]>
	<VAR i :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xfb3a> endpc=<ABSOLUTE:0xfbb1>>]>
argmatch :: (char *, char * *, void *, unsigned int8) -> int8 @ PC range=(<ABSOLUTE:0xfa07>, <ABSOLUTE:0xfb3b>)
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xfa07> endpc=<ABSOLUTE:0xfb3b>>]>
	<PARAM arglist :: char * * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0xfa07> endpc=<ABSOLUTE:0xfb3b>>]>
	<PARAM vallist :: void * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0xfa07> endpc=<ABSOLUTE:0xfb3b>>]>
	<PARAM valsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0xfa07> endpc=<ABSOLUTE:0xfb3b>>]>
	<VAR i :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xfa07> endpc=<ABSOLUTE:0xfb3b>>]>
	<VAR arglen :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xfa07> endpc=<ABSOLUTE:0xfb3b>>]>
	<VAR matchind :: int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xfa07> endpc=<ABSOLUTE:0xfb3b>>]>
	<VAR ambiguous :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x29> startpc=<ABSOLUTE:0xfa07> endpc=<ABSOLUTE:0xfb3b>>]>
__argmatch_die :: () -> void @ PC range=(<ABSOLUTE:0xf9f2>, <ABSOLUTE:0xfa08>)
base_len :: (char *) -> unsigned int8 @ PC range=(<ABSOLUTE:0xff4c>, <ABSOLUTE:0xffa0>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0xff4c> endpc=<ABSOLUTE:0xffa0>>]>
	<VAR len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xff4c> endpc=<ABSOLUTE:0xffa0>>]>
	<VAR prefix_len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xff4c> endpc=<ABSOLUTE:0xffa0>>]>
last_component :: (char *) -> char * @ PC range=(<ABSOLUTE:0xfedf>, <ABSOLUTE:0xff4d>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0xfedf> endpc=<ABSOLUTE:0xff4d>>]>
	<VAR base :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0xfedf> endpc=<ABSOLUTE:0xff4d>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0xfedf> endpc=<ABSOLUTE:0xff4d>>]>
	<VAR last_was_slash :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x21> startpc=<ABSOLUTE:0xfedf> endpc=<ABSOLUTE:0xff4d>>]>
c_toupper :: (int4) -> int4 @ PC range=(<ABSOLUTE:0x1021b>, <ABSOLUTE:0x1023f>)
	<PARAM c :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1021b> endpc=<ABSOLUTE:0x1023f>>]>
c_tolower :: (int4) -> int4 @ PC range=(<ABSOLUTE:0x101f8>, <ABSOLUTE:0x1021c>)
	<PARAM c :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x101f8> endpc=<ABSOLUTE:0x1021c>>]>
c_isxdigit :: (int4) -> unsigned char @ PC range=(<ABSOLUTE:0x101b0>, <ABSOLUTE:0x101f9>)
	<PARAM c :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x101b0> endpc=<ABSOLUTE:0x101f9>>]>
c_isupper :: (int4) -> unsigned char @ PC range=(<ABSOLUTE:0x1018c>, <ABSOLUTE:0x101b1>)
	<PARAM c :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1018c> endpc=<ABSOLUTE:0x101b1>>]>
c_isspace :: (int4) -> unsigned char @ PC range=(<ABSOLUTE:0x1015f>, <ABSOLUTE:0x1018d>)
	<PARAM c :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1015f> endpc=<ABSOLUTE:0x1018d>>]>
c_ispunct :: (int4) -> unsigned char @ PC range=(<ABSOLUTE:0x10115>, <ABSOLUTE:0x10160>)
	<PARAM c :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x10115> endpc=<ABSOLUTE:0x10160>>]>
c_isprint :: (int4) -> unsigned char @ PC range=(<ABSOLUTE:0x100f1>, <ABSOLUTE:0x10116>)
	<PARAM c :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x100f1> endpc=<ABSOLUTE:0x10116>>]>
c_islower :: (int4) -> unsigned char @ PC range=(<ABSOLUTE:0x100cd>, <ABSOLUTE:0x100f2>)
	<PARAM c :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x100cd> endpc=<ABSOLUTE:0x100f2>>]>
c_isgraph :: (int4) -> unsigned char @ PC range=(<ABSOLUTE:0x100a9>, <ABSOLUTE:0x100ce>)
	<PARAM c :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x100a9> endpc=<ABSOLUTE:0x100ce>>]>
c_isdigit :: (int4) -> unsigned char @ PC range=(<ABSOLUTE:0x10085>, <ABSOLUTE:0x100aa>)
	<PARAM c :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x10085> endpc=<ABSOLUTE:0x100aa>>]>
c_iscntrl :: (int4) -> unsigned char @ PC range=(<ABSOLUTE:0x10058>, <ABSOLUTE:0x10086>)
	<PARAM c :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x10058> endpc=<ABSOLUTE:0x10086>>]>
c_isblank :: (int4) -> unsigned char @ PC range=(<ABSOLUTE:0x10030>, <ABSOLUTE:0x10059>)
	<PARAM c :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x10030> endpc=<ABSOLUTE:0x10059>>]>
c_isascii :: (int4) -> unsigned char @ PC range=(<ABSOLUTE:0x1000f>, <ABSOLUTE:0x10031>)
	<PARAM c :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1000f> endpc=<ABSOLUTE:0x10031>>]>
c_isalpha :: (int4) -> unsigned char @ PC range=(<ABSOLUTE:0xffdd>, <ABSOLUTE:0x10010>)
	<PARAM c :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0xffdd> endpc=<ABSOLUTE:0x10010>>]>
c_isalnum :: (int4) -> unsigned char @ PC range=(<ABSOLUTE:0xff9f>, <ABSOLUTE:0xffde>)
	<PARAM c :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0xff9f> endpc=<ABSOLUTE:0xffde>>]>
c_strncasecmp :: (char *, char *, unsigned int8) -> int4 @ PC range=(<ABSOLUTE:0x1023e>, <ABSOLUTE:0x102cd>)
	<PARAM s1 :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1023e> endpc=<ABSOLUTE:0x102cd>>]>
	<PARAM s2 :: char * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x1023e> endpc=<ABSOLUTE:0x102cd>>]>
	<PARAM n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x1023e> endpc=<ABSOLUTE:0x102cd>>]>
	<VAR p1 :: unsigned char * @ [<AddressLiveRange addr=<REGISTER:12> startpc=<ABSOLUTE:0x1023e> endpc=<ABSOLUTE:0x102cd>>]>
	<VAR p2 :: unsigned char * @ [<AddressLiveRange addr=<REGISTER:3> startpc=<ABSOLUTE:0x1023e> endpc=<ABSOLUTE:0x102cd>>]>
	<VAR c1 :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x22> startpc=<ABSOLUTE:0x1023e> endpc=<ABSOLUTE:0x102cd>>]>
	<VAR c2 :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x21> startpc=<ABSOLUTE:0x1023e> endpc=<ABSOLUTE:0x102cd>>]>
canonicalize_filename_mode :: (char *, unsigned int4) -> char * @ PC range=(<ABSOLUTE:0x10f9c>, <ABSOLUTE:0x10ffc>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x438> startpc=<ABSOLUTE:0x10f9c> endpc=<ABSOLUTE:0x10ffc>>]>
	<PARAM can_mode :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x43c> startpc=<ABSOLUTE:0x10f9c> endpc=<ABSOLUTE:0x10ffc>>]>
	<VAR rname_buffer :: <STRUCT scratch_buffer membertypes=3 size=1040> @ [<AddressLiveRange addr=<STACK:-0x430> startpc=<ABSOLUTE:0x10f9c> endpc=<ABSOLUTE:0x10ffc>>]>
canonicalize_filename_mode_stk :: (char *, unsigned int4, <STRUCT scratch_buffer membertypes=3 size=1040> *) -> char * @ PC range=(<ABSOLUTE:0x104ef>, <ABSOLUTE:0x10f9d>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x9a8> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<PARAM can_mode :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x9ac> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<PARAM rname_buf :: <STRUCT scratch_buffer membertypes=3 size=1040> * @ [<AddressLiveRange addr=<STACK:-0x9b8> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR dest :: char * @ [<AddressLiveRange addr=<STACK:-0x988> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR start :: char * @ [<AddressLiveRange addr=<STACK:-0x980> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR end :: char * @ [<AddressLiveRange addr=<STACK:-0x978> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR ht :: <STRUCT hash_table membertypes=0 size=0> * @ [<AddressLiveRange addr=<STACK:-0x990> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR logical :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x999> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR num_links :: int4 @ [<AddressLiveRange addr=<STACK:-0x998> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR can_exist :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x994> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR extra_buffer :: <STRUCT scratch_buffer membertypes=3 size=1040> @ [<AddressLiveRange addr=<STACK:-0x840> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR link_buffer :: <STRUCT scratch_buffer membertypes=3 size=1040> @ [<AddressLiveRange addr=<STACK:-0x430> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR rname_on_stack :: char * @ [<AddressLiveRange addr=<STACK:-0x940> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR rname :: char * @ [<AddressLiveRange addr=<STACK:-0x970> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR end_in_extra_buffer :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x99b> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR failed :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x99a> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR prefix_len :: int8 @ [<AddressLiveRange addr=<STACK:-0x968> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR result :: char * @ [<AddressLiveRange addr=<STACK:-0x910> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR startlen :: int8 @ [<AddressLiveRange addr=<STACK:-0x938> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR buf :: char * @ [<AddressLiveRange addr=<STACK:-0x960> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR n :: int8 @ [<AddressLiveRange addr=<STACK:-0x958> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR dest_offset :: int8 @ [<AddressLiveRange addr=<STACK:-0x918> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR buffer :: <STRUCT scratch_buffer membertypes=3 size=1040> * @ [<AddressLiveRange addr=<STACK:-0x900> startpc=<ABSOLUTE:0x108be> endpc=<ABSOLUTE:0x108d7>>]>
	<VAR bufsize :: int8 @ [<AddressLiveRange addr=<STACK:-0x930> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR buffer :: <STRUCT scratch_buffer membertypes=3 size=1040> * @ [<AddressLiveRange addr=<STACK:-0x8f8> startpc=<ABSOLUTE:0x109f8> endpc=<ABSOLUTE:0x10a11>>]>
	<VAR extra_buf :: char * @ [<AddressLiveRange addr=<STACK:-0x950> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR end_idx :: int8 @ [<AddressLiveRange addr=<STACK:-0x948> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x928> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR st :: <STRUCT stat membertypes=15 size=144> @ [<AddressLiveRange addr=<STACK:-0x8d0> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR pfxlen :: int8 @ [<AddressLiveRange addr=<STACK:-0x920> startpc=<ABSOLUTE:0x104ef> endpc=<ABSOLUTE:0x10f9d>>]>
	<VAR buffer :: <STRUCT scratch_buffer membertypes=3 size=1040> * @ [<AddressLiveRange addr=<STACK:-0x8f0> startpc=<ABSOLUTE:0x10ba9> endpc=<ABSOLUTE:0x10bc2>>]>
	<VAR buffer :: <STRUCT scratch_buffer membertypes=3 size=1040> * @ [<AddressLiveRange addr=<STACK:-0x908> startpc=<ABSOLUTE:0x10659> endpc=<ABSOLUTE:0x10672>>]>
	<VAR size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x8e0> startpc=<ABSOLUTE:0x10f28> endpc=<ABSOLUTE:0x10f6a>>]>
	<VAR buffer :: <STRUCT scratch_buffer membertypes=3 size=1040> * @ [<AddressLiveRange addr=<STACK:-0x8e8> startpc=<ABSOLUTE:0x10f28> endpc=<ABSOLUTE:0x10f6a>>]>
	<VAR r :: void * @ [<AddressLiveRange addr=<STACK:-0x8d8> startpc=<ABSOLUTE:0x10f28> endpc=<ABSOLUTE:0x10f6a>>]>
seen_triple :: (<STRUCT hash_table membertypes=0 size=0> * *, char *, <STRUCT stat membertypes=15 size=144> *) -> unsigned char @ PC range=(<ABSOLUTE:0x10436>, <ABSOLUTE:0x104f0>)
	<PARAM ht :: <STRUCT hash_table membertypes=0 size=0> * * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x10436> endpc=<ABSOLUTE:0x104f0>>]>
	<PARAM filename :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x10436> endpc=<ABSOLUTE:0x104f0>>]>
	<PARAM st :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x10436> endpc=<ABSOLUTE:0x104f0>>]>
	<VAR initial_capacity :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x10436> endpc=<ABSOLUTE:0x104f0>>]>
multiple_bits_set :: (unsigned int4) -> unsigned char @ PC range=(<ABSOLUTE:0x1041b>, <ABSOLUTE:0x10437>)
	<PARAM i :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1041b> endpc=<ABSOLUTE:0x10437>>]>
dir_check :: (char *, char *) -> unsigned char @ PC range=(<ABSOLUTE:0x103eb>, <ABSOLUTE:0x1041c>)
	<PARAM dir :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x103eb> endpc=<ABSOLUTE:0x1041c>>]>
	<PARAM dirend :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x103eb> endpc=<ABSOLUTE:0x1041c>>]>
suffix_requires_dir_check :: (char *) -> unsigned char @ PC range=(<ABSOLUTE:0x10356>, <ABSOLUTE:0x103ec>)
	<PARAM end :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x10356> endpc=<ABSOLUTE:0x103ec>>]>
file_accessible :: (char *) -> unsigned char @ PC range=(<ABSOLUTE:0x10324>, <ABSOLUTE:0x10357>)
	<PARAM file :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x10324> endpc=<ABSOLUTE:0x10357>>]>
scratch_buffer_free :: (<STRUCT scratch_buffer membertypes=3 size=1040> *) -> void @ PC range=(<ABSOLUTE:0x102f2>, <ABSOLUTE:0x10325>)
	<PARAM buffer :: <STRUCT scratch_buffer membertypes=3 size=1040> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x102f2> endpc=<ABSOLUTE:0x10325>>]>
scratch_buffer_init :: (<STRUCT scratch_buffer membertypes=3 size=1040> *) -> void @ PC range=(<ABSOLUTE:0x102cc>, <ABSOLUTE:0x102f3>)
	<PARAM buffer :: <STRUCT scratch_buffer membertypes=3 size=1040> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x102cc> endpc=<ABSOLUTE:0x102f3>>]>
close_stdout :: () -> void @ PC range=(<ABSOLUTE:0x1102f>, <ABSOLUTE:0x11128>)
	<VAR write_error :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1102f> endpc=<ABSOLUTE:0x11128>>]>
close_stdout_set_ignore_EPIPE :: (unsigned char) -> void @ PC range=(<ABSOLUTE:0x11015>, <ABSOLUTE:0x11030>)
	<PARAM ignore :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x11015> endpc=<ABSOLUTE:0x11030>>]>
close_stdout_set_file_name :: (char *) -> void @ PC range=(<ABSOLUTE:0x10ffb>, <ABSOLUTE:0x11016>)
	<PARAM file :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x10ffb> endpc=<ABSOLUTE:0x11016>>]>
mdir_name :: (char *) -> char * @ PC range=(<ABSOLUTE:0x111ac>, <ABSOLUTE:0x11248>)
	<PARAM file :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x111ac> endpc=<ABSOLUTE:0x11248>>]>
	<VAR length :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x111ac> endpc=<ABSOLUTE:0x11248>>]>
	<VAR append_dot :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x21> startpc=<ABSOLUTE:0x111ac> endpc=<ABSOLUTE:0x11248>>]>
	<VAR dir :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x111ac> endpc=<ABSOLUTE:0x11248>>]>
dir_len :: (char *) -> unsigned int8 @ PC range=(<ABSOLUTE:0x11127>, <ABSOLUTE:0x111ad>)
	<PARAM file :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x11127> endpc=<ABSOLUTE:0x111ad>>]>
	<VAR prefix_length :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x11127> endpc=<ABSOLUTE:0x111ad>>]>
	<VAR length :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x11127> endpc=<ABSOLUTE:0x111ad>>]>
file_has_acl :: (char *, <STRUCT stat membertypes=15 size=144> *) -> int4 @ PC range=(<ABSOLUTE:0x11247>, <ABSOLUTE:0x1125f>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x11247> endpc=<ABSOLUTE:0x1125f>>]>
	<PARAM sb :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x11247> endpc=<ABSOLUTE:0x1125f>>]>
seen_file :: (<STRUCT hash_table membertypes=0 size=0> *, char *, <STRUCT stat membertypes=15 size=144> *) -> unsigned char @ PC range=(<ABSOLUTE:0x112fe>, <ABSOLUTE:0x11382>)
	<PARAM ht :: <STRUCT hash_table membertypes=0 size=0> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x112fe> endpc=<ABSOLUTE:0x11382>>]>
	<PARAM file :: char * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x112fe> endpc=<ABSOLUTE:0x11382>>]>
	<PARAM stats :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x112fe> endpc=<ABSOLUTE:0x11382>>]>
	<VAR new_ent :: <STRUCT F_triple membertypes=3 size=24> @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x112fe> endpc=<ABSOLUTE:0x11382>>]>
record_file :: (<STRUCT hash_table membertypes=0 size=0> *, char *, <STRUCT stat membertypes=15 size=144> *) -> void @ PC range=(<ABSOLUTE:0x1125e>, <ABSOLUTE:0x112ff>)
	<PARAM ht :: <STRUCT hash_table membertypes=0 size=0> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1125e> endpc=<ABSOLUTE:0x112ff>>]>
	<PARAM file :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1125e> endpc=<ABSOLUTE:0x112ff>>]>
	<PARAM stats :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1125e> endpc=<ABSOLUTE:0x112ff>>]>
	<VAR ent :: <STRUCT F_triple membertypes=3 size=24> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1125e> endpc=<ABSOLUTE:0x112ff>>]>
	<VAR ent_from_table :: <STRUCT F_triple membertypes=3 size=24> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1125e> endpc=<ABSOLUTE:0x112ff>>]>
filemodestring :: (<STRUCT stat membertypes=15 size=144> *, char *) -> void @ PC range=(<ABSOLUTE:0x115fc>, <ABSOLUTE:0x11629>)
	<PARAM statp :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x115fc> endpc=<ABSOLUTE:0x11629>>]>
	<PARAM str :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x115fc> endpc=<ABSOLUTE:0x11629>>]>
strmode :: (unsigned int4, char *) -> void @ PC range=(<ABSOLUTE:0x11430>, <ABSOLUTE:0x115fd>)
	<PARAM mode :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x11430> endpc=<ABSOLUTE:0x115fd>>]>
	<PARAM str :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x11430> endpc=<ABSOLUTE:0x115fd>>]>
ftypelet :: (unsigned int4) -> char @ PC range=(<ABSOLUTE:0x11381>, <ABSOLUTE:0x11431>)
	<PARAM bits :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x11381> endpc=<ABSOLUTE:0x11431>>]>
file_name_concat :: (char *, char *, char * *) -> char * @ PC range=(<ABSOLUTE:0x11628>, <ABSOLUTE:0x1166e>)
	<PARAM dir :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x11628> endpc=<ABSOLUTE:0x1166e>>]>
	<PARAM base :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x11628> endpc=<ABSOLUTE:0x1166e>>]>
	<PARAM base_in_result :: char * * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x11628> endpc=<ABSOLUTE:0x1166e>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x11628> endpc=<ABSOLUTE:0x1166e>>]>
mfile_name_concat :: (char *, char *, char * *) -> char * @ PC range=(<ABSOLUTE:0x1166d>, <ABSOLUTE:0x117b0>)
	<PARAM dir :: char * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x1166d> endpc=<ABSOLUTE:0x117b0>>]>
	<PARAM base :: char * @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x1166d> endpc=<ABSOLUTE:0x117b0>>]>
	<PARAM base_in_result :: char * * @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x1166d> endpc=<ABSOLUTE:0x117b0>>]>
	<VAR dirbase :: char * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x1166d> endpc=<ABSOLUTE:0x117b0>>]>
	<VAR dirbaselen :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1166d> endpc=<ABSOLUTE:0x117b0>>]>
	<VAR dirlen :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1166d> endpc=<ABSOLUTE:0x117b0>>]>
	<VAR baselen :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1166d> endpc=<ABSOLUTE:0x117b0>>]>
	<VAR sep :: char @ [<AddressLiveRange addr=<STACK:-0x41> startpc=<ABSOLUTE:0x1166d> endpc=<ABSOLUTE:0x117b0>>]>
	<VAR p_concat :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1166d> endpc=<ABSOLUTE:0x117b0>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1166d> endpc=<ABSOLUTE:0x117b0>>]>
filenvercmp :: (char *, int8, char *, int8) -> int4 @ PC range=(<ABSOLUTE:0x11bb9>, <ABSOLUTE:0x11e45>)
	<PARAM a :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x11bb9> endpc=<ABSOLUTE:0x11e45>>]>
	<PARAM alen :: int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x11bb9> endpc=<ABSOLUTE:0x11e45>>]>
	<PARAM b :: char * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x11bb9> endpc=<ABSOLUTE:0x11e45>>]>
	<PARAM blen :: int8 @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x11bb9> endpc=<ABSOLUTE:0x11e45>>]>
	<VAR aempty :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x2b> startpc=<ABSOLUTE:0x11bb9> endpc=<ABSOLUTE:0x11e45>>]>
	<VAR bempty :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x2a> startpc=<ABSOLUTE:0x11bb9> endpc=<ABSOLUTE:0x11e45>>]>
	<VAR aprefixlen :: int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x11bb9> endpc=<ABSOLUTE:0x11e45>>]>
	<VAR bprefixlen :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x11bb9> endpc=<ABSOLUTE:0x11e45>>]>
	<VAR one_pass_only :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x25> startpc=<ABSOLUTE:0x11bb9> endpc=<ABSOLUTE:0x11e45>>]>
	<VAR result :: int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0x11bb9> endpc=<ABSOLUTE:0x11e45>>]>
	<VAR adot :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x29> startpc=<ABSOLUTE:0x11bb9> endpc=<ABSOLUTE:0x11e45>>]>
	<VAR bdot :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x11bb9> endpc=<ABSOLUTE:0x11e45>>]>
	<VAR adotdot :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x27> startpc=<ABSOLUTE:0x11bb9> endpc=<ABSOLUTE:0x11e45>>]>
	<VAR bdotdot :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x26> startpc=<ABSOLUTE:0x11bb9> endpc=<ABSOLUTE:0x11e45>>]>
filevercmp :: (char *, char *) -> int4 @ PC range=(<ABSOLUTE:0x11b85>, <ABSOLUTE:0x11bba>)
	<PARAM s1 :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x11b85> endpc=<ABSOLUTE:0x11bba>>]>
	<PARAM s2 :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x11b85> endpc=<ABSOLUTE:0x11bba>>]>
verrevcmp :: (char *, int8, char *, int8) -> int4 @ PC range=(<ABSOLUTE:0x1194d>, <ABSOLUTE:0x11b86>)
	<PARAM s1 :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1194d> endpc=<ABSOLUTE:0x11b86>>]>
	<PARAM s1_len :: int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x1194d> endpc=<ABSOLUTE:0x11b86>>]>
	<PARAM s2 :: char * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x1194d> endpc=<ABSOLUTE:0x11b86>>]>
	<PARAM s2_len :: int8 @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x1194d> endpc=<ABSOLUTE:0x11b86>>]>
	<VAR s1_pos :: int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1194d> endpc=<ABSOLUTE:0x11b86>>]>
	<VAR s2_pos :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1194d> endpc=<ABSOLUTE:0x11b86>>]>
	<VAR first_diff :: int4 @ [<AddressLiveRange addr=<STACK:-0x2c> startpc=<ABSOLUTE:0x1194d> endpc=<ABSOLUTE:0x11b86>>]>
	<VAR s1_c :: int4 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1194d> endpc=<ABSOLUTE:0x11b86>>]>
	<VAR s2_c :: int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0x1194d> endpc=<ABSOLUTE:0x11b86>>]>
order :: (char *, int8, int8) -> int4 @ PC range=(<ABSOLUTE:0x118d0>, <ABSOLUTE:0x1194e>)
	<PARAM s :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x118d0> endpc=<ABSOLUTE:0x1194e>>]>
	<PARAM pos :: int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x118d0> endpc=<ABSOLUTE:0x1194e>>]>
	<PARAM len :: int8 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x118d0> endpc=<ABSOLUTE:0x1194e>>]>
	<VAR c :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x11> startpc=<ABSOLUTE:0x118d0> endpc=<ABSOLUTE:0x1194e>>]>
file_prefixlen :: (char *, int8 *) -> int8 @ PC range=(<ABSOLUTE:0x117af>, <ABSOLUTE:0x118d1>)
	<PARAM s :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x117af> endpc=<ABSOLUTE:0x118d1>>]>
	<PARAM len :: int8 * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x117af> endpc=<ABSOLUTE:0x118d1>>]>
	<VAR n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x117af> endpc=<ABSOLUTE:0x118d1>>]>
	<VAR i :: int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x117af> endpc=<ABSOLUTE:0x118d1>>]>
	<VAR prefixlen :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x117af> endpc=<ABSOLUTE:0x118d1>>]>
rpl_free :: (void *) -> void @ PC range=(<ABSOLUTE:0x11e44>, <ABSOLUTE:0x11ec8>)
	<PARAM p :: void * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x11e44> endpc=<ABSOLUTE:0x11ec8>>]>
	<VAR err :: <ARRAY subtype=int4 dimensions=(2,) size=8> @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x11e44> endpc=<ABSOLUTE:0x11ec8>>]>
current_timespec :: () -> <STRUCT timespec membertypes=2 size=16> @ PC range=(<ABSOLUTE:0x11eeb>, <ABSOLUTE:0x11f31>)
	<VAR ts :: <STRUCT timespec membertypes=2 size=16> @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x11eeb> endpc=<ABSOLUTE:0x11f31>>]>
gettime :: (<STRUCT timespec membertypes=2 size=16> *) -> void @ PC range=(<ABSOLUTE:0x11ec7>, <ABSOLUTE:0x11eec>)
	<PARAM ts :: <STRUCT timespec membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x11ec7> endpc=<ABSOLUTE:0x11eec>>]>
hard_locale :: (int4) -> unsigned char @ PC range=(<ABSOLUTE:0x11f30>, <ABSOLUTE:0x11fdb>)
	<PARAM category :: int4 @ [<AddressLiveRange addr=<STACK:-0x124> startpc=<ABSOLUTE:0x11f30> endpc=<ABSOLUTE:0x11fdb>>]>
	<VAR locale :: <ARRAY subtype=char dimensions=(257,) size=257> @ [<AddressLiveRange addr=<STACK:-0x120> startpc=<ABSOLUTE:0x11f30> endpc=<ABSOLUTE:0x11fdb>>]>
hash_delete :: (<STRUCT hash_table membertypes=10 size=80> *, void *) -> void * @ PC range=(<ABSOLUTE:0x13a4a>, <ABSOLUTE:0x13a74>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x13a4a> endpc=<ABSOLUTE:0x13a74>>]>
	<PARAM entry :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x13a4a> endpc=<ABSOLUTE:0x13a74>>]>
hash_remove :: (<STRUCT hash_table membertypes=10 size=80> *, void *) -> void * @ PC range=(<ABSOLUTE:0x13744>, <ABSOLUTE:0x13a4b>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x13744> endpc=<ABSOLUTE:0x13a4b>>]>
	<PARAM entry :: void * @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x13744> endpc=<ABSOLUTE:0x13a4b>>]>
	<VAR data :: void * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x13744> endpc=<ABSOLUTE:0x13a4b>>]>
	<VAR bucket :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x13744> endpc=<ABSOLUTE:0x13a4b>>]>
	<VAR tuning :: <STRUCT hash_tuning membertypes=5 size=20> * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x13744> endpc=<ABSOLUTE:0x13a4b>>]>
	<VAR candidate :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x13744> endpc=<ABSOLUTE:0x13a4b>>]>
	<VAR cursor :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x13744> endpc=<ABSOLUTE:0x13a4b>>]>
	<VAR next :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x13744> endpc=<ABSOLUTE:0x13a4b>>]>
hash_insert :: (<STRUCT hash_table membertypes=10 size=80> *, void *) -> void * @ PC range=(<ABSOLUTE:0x136d4>, <ABSOLUTE:0x13745>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x136d4> endpc=<ABSOLUTE:0x13745>>]>
	<PARAM entry :: void * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x136d4> endpc=<ABSOLUTE:0x13745>>]>
	<VAR matched_ent :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x136d4> endpc=<ABSOLUTE:0x13745>>]>
	<VAR err :: int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0x136d4> endpc=<ABSOLUTE:0x13745>>]>
hash_insert_if_absent :: (<STRUCT hash_table membertypes=10 size=80> *, void *, void * *) -> int4 @ PC range=(<ABSOLUTE:0x13363>, <ABSOLUTE:0x136d5>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x13363> endpc=<ABSOLUTE:0x136d5>>]>
	<PARAM entry :: void * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x13363> endpc=<ABSOLUTE:0x136d5>>]>
	<PARAM matched_ent :: void * * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x13363> endpc=<ABSOLUTE:0x136d5>>]>
	<VAR data :: void * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x13363> endpc=<ABSOLUTE:0x136d5>>]>
	<VAR bucket :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x13363> endpc=<ABSOLUTE:0x136d5>>]>
	<VAR tuning :: <STRUCT hash_tuning membertypes=5 size=20> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x13363> endpc=<ABSOLUTE:0x136d5>>]>
	<VAR candidate :: float4 @ [<AddressLiveRange addr=<STACK:-0x3c> startpc=<ABSOLUTE:0x13363> endpc=<ABSOLUTE:0x136d5>>]>
	<VAR new_entry :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x13363> endpc=<ABSOLUTE:0x136d5>>]>
hash_rehash :: (<STRUCT hash_table membertypes=10 size=80> *, unsigned int8) -> unsigned char @ PC range=(<ABSOLUTE:0x13138>, <ABSOLUTE:0x13364>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x88> startpc=<ABSOLUTE:0x13138> endpc=<ABSOLUTE:0x13364>>]>
	<PARAM candidate :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x90> startpc=<ABSOLUTE:0x13138> endpc=<ABSOLUTE:0x13364>>]>
	<VAR storage :: <STRUCT hash_table membertypes=10 size=80> @ [<AddressLiveRange addr=<STACK:-0x70> startpc=<ABSOLUTE:0x13138> endpc=<ABSOLUTE:0x13364>>]>
	<VAR new_table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x78> startpc=<ABSOLUTE:0x13138> endpc=<ABSOLUTE:0x13364>>]>
	<VAR new_size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x80> startpc=<ABSOLUTE:0x13138> endpc=<ABSOLUTE:0x13364>>]>
transfer_entries :: (<STRUCT hash_table membertypes=10 size=80> *, <STRUCT hash_table membertypes=10 size=80> *, unsigned char) -> unsigned char @ PC range=(<ABSOLUTE:0x12f64>, <ABSOLUTE:0x13139>)
	<PARAM dst :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x12f64> endpc=<ABSOLUTE:0x13139>>]>
	<PARAM src :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x12f64> endpc=<ABSOLUTE:0x13139>>]>
	<PARAM safe :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x54> startpc=<ABSOLUTE:0x12f64> endpc=<ABSOLUTE:0x13139>>]>
	<VAR bucket :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x12f64> endpc=<ABSOLUTE:0x13139>>]>
	<VAR cursor :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x12f64> endpc=<ABSOLUTE:0x13139>>]>
	<VAR next :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x12f64> endpc=<ABSOLUTE:0x13139>>]>
	<VAR data :: void * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x12f64> endpc=<ABSOLUTE:0x13139>>]>
	<VAR new_bucket :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x12f64> endpc=<ABSOLUTE:0x13139>>]>
	<VAR new_entry :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x12f64> endpc=<ABSOLUTE:0x13139>>]>
hash_find_entry :: (<STRUCT hash_table membertypes=10 size=80> *, void *, <STRUCT hash_entry membertypes=2 size=16> * *, unsigned char) -> void * @ PC range=(<ABSOLUTE:0x12dcb>, <ABSOLUTE:0x12f65>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x12dcb> endpc=<ABSOLUTE:0x12f65>>]>
	<PARAM entry :: void * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x12dcb> endpc=<ABSOLUTE:0x12f65>>]>
	<PARAM bucket_head :: <STRUCT hash_entry membertypes=2 size=16> * * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x12dcb> endpc=<ABSOLUTE:0x12f65>>]>
	<PARAM delete :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x5c> startpc=<ABSOLUTE:0x12dcb> endpc=<ABSOLUTE:0x12f65>>]>
	<VAR bucket :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x12dcb> endpc=<ABSOLUTE:0x12f65>>]>
	<VAR cursor :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x12dcb> endpc=<ABSOLUTE:0x12f65>>]>
	<VAR data :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x12dcb> endpc=<ABSOLUTE:0x12f65>>]>
	<VAR next :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x12dcb> endpc=<ABSOLUTE:0x12f65>>]>
	<VAR data :: void * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x12dcb> endpc=<ABSOLUTE:0x12f65>>]>
	<VAR next :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x12dcb> endpc=<ABSOLUTE:0x12f65>>]>
free_entry :: (<STRUCT hash_table membertypes=10 size=80> *, <STRUCT hash_entry membertypes=2 size=16> *) -> void @ PC range=(<ABSOLUTE:0x12d91>, <ABSOLUTE:0x12dcc>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x12d91> endpc=<ABSOLUTE:0x12dcc>>]>
	<PARAM entry :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x12d91> endpc=<ABSOLUTE:0x12dcc>>]>
allocate_entry :: (<STRUCT hash_table membertypes=10 size=80> *) -> <STRUCT hash_entry membertypes=2 size=16> * @ PC range=(<ABSOLUTE:0x12d42>, <ABSOLUTE:0x12d92>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x12d42> endpc=<ABSOLUTE:0x12d92>>]>
	<VAR new :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x12d42> endpc=<ABSOLUTE:0x12d92>>]>
hash_free :: (<STRUCT hash_table membertypes=10 size=80> *) -> void @ PC range=(<ABSOLUTE:0x12c13>, <ABSOLUTE:0x12d43>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x12c13> endpc=<ABSOLUTE:0x12d43>>]>
	<VAR bucket :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x12c13> endpc=<ABSOLUTE:0x12d43>>]>
	<VAR cursor :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x12c13> endpc=<ABSOLUTE:0x12d43>>]>
	<VAR next :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x12c13> endpc=<ABSOLUTE:0x12d43>>]>
hash_clear :: (<STRUCT hash_table membertypes=10 size=80> *) -> void @ PC range=(<ABSOLUTE:0x12b08>, <ABSOLUTE:0x12c14>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x12b08> endpc=<ABSOLUTE:0x12c14>>]>
	<VAR bucket :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x12b08> endpc=<ABSOLUTE:0x12c14>>]>
	<VAR cursor :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x12b08> endpc=<ABSOLUTE:0x12c14>>]>
	<VAR next :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x12b08> endpc=<ABSOLUTE:0x12c14>>]>
hash_initialize :: (unsigned int8, <STRUCT hash_tuning membertypes=5 size=20> *, (void *, unsigned int8) -> unsigned int8 *, (void *, void *) -> unsigned char *, (void *) -> void *) -> <STRUCT hash_table membertypes=10 size=80> * @ PC range=(<ABSOLUTE:0x12993>, <ABSOLUTE:0x12b09>)
	<PARAM candidate :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x12993> endpc=<ABSOLUTE:0x12b09>>]>
	<PARAM tuning :: <STRUCT hash_tuning membertypes=5 size=20> * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x12993> endpc=<ABSOLUTE:0x12b09>>]>
	<PARAM hasher :: (void *, unsigned int8) -> unsigned int8 * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x12993> endpc=<ABSOLUTE:0x12b09>>]>
	<PARAM comparator :: (void *, void *) -> unsigned char * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x12993> endpc=<ABSOLUTE:0x12b09>>]>
	<PARAM data_freer :: (void *) -> void * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x12993> endpc=<ABSOLUTE:0x12b09>>]>
	<VAR table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x12993> endpc=<ABSOLUTE:0x12b09>>]>
compute_bucket_size :: (unsigned int8, <STRUCT hash_tuning membertypes=5 size=20> *) -> unsigned int8 @ PC range=(<ABSOLUTE:0x1287a>, <ABSOLUTE:0x12994>)
	<PARAM candidate :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1287a> endpc=<ABSOLUTE:0x12994>>]>
	<PARAM tuning :: <STRUCT hash_tuning membertypes=5 size=20> * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1287a> endpc=<ABSOLUTE:0x12994>>]>
	<VAR new_candidate :: float4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1287a> endpc=<ABSOLUTE:0x12994>>]>
check_tuning :: (<STRUCT hash_table membertypes=10 size=80> *) -> unsigned char @ PC range=(<ABSOLUTE:0x1276d>, <ABSOLUTE:0x1287b>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1276d> endpc=<ABSOLUTE:0x1287b>>]>
	<VAR tuning :: <STRUCT hash_tuning membertypes=5 size=20> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1276d> endpc=<ABSOLUTE:0x1287b>>]>
	<VAR epsilon :: float4 @ [<AddressLiveRange addr=<STACK:-0x1c> startpc=<ABSOLUTE:0x1276d> endpc=<ABSOLUTE:0x1287b>>]>
raw_comparator :: (void *, void *) -> unsigned char @ PC range=(<ABSOLUTE:0x12750>, <ABSOLUTE:0x1276e>)
	<PARAM a :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x12750> endpc=<ABSOLUTE:0x1276e>>]>
	<PARAM b :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x12750> endpc=<ABSOLUTE:0x1276e>>]>
raw_hasher :: (void *, unsigned int8) -> unsigned int8 @ PC range=(<ABSOLUTE:0x12715>, <ABSOLUTE:0x12751>)
	<PARAM data :: void * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x12715> endpc=<ABSOLUTE:0x12751>>]>
	<PARAM n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x12715> endpc=<ABSOLUTE:0x12751>>]>
	<VAR val :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x12715> endpc=<ABSOLUTE:0x12751>>]>
hash_reset_tuning :: (<STRUCT hash_tuning membertypes=5 size=20> *) -> void @ PC range=(<ABSOLUTE:0x126bf>, <ABSOLUTE:0x12716>)
	<PARAM tuning :: <STRUCT hash_tuning membertypes=5 size=20> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x126bf> endpc=<ABSOLUTE:0x12716>>]>
next_prime :: (unsigned int8) -> unsigned int8 @ PC range=(<ABSOLUTE:0x12674>, <ABSOLUTE:0x126c0>)
	<PARAM candidate :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x12674> endpc=<ABSOLUTE:0x126c0>>]>
is_prime :: (unsigned int8) -> unsigned char @ PC range=(<ABSOLUTE:0x12605>, <ABSOLUTE:0x12675>)
	<PARAM candidate :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x12605> endpc=<ABSOLUTE:0x12675>>]>
	<VAR divisor :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x12605> endpc=<ABSOLUTE:0x12675>>]>
	<VAR square :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x12605> endpc=<ABSOLUTE:0x12675>>]>
hash_string :: (char *, unsigned int8) -> unsigned int8 @ PC range=(<ABSOLUTE:0x125ab>, <ABSOLUTE:0x12606>)
	<PARAM string :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x125ab> endpc=<ABSOLUTE:0x12606>>]>
	<PARAM n_buckets :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x125ab> endpc=<ABSOLUTE:0x12606>>]>
	<VAR value :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x125ab> endpc=<ABSOLUTE:0x12606>>]>
	<VAR ch :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x19> startpc=<ABSOLUTE:0x125ab> endpc=<ABSOLUTE:0x12606>>]>
hash_do_for_each :: (<STRUCT hash_table membertypes=10 size=80> *, (void *, void *) -> unsigned char *, void *) -> unsigned int8 @ PC range=(<ABSOLUTE:0x12513>, <ABSOLUTE:0x125ac>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x12513> endpc=<ABSOLUTE:0x125ac>>]>
	<PARAM processor :: (void *, void *) -> unsigned char * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x12513> endpc=<ABSOLUTE:0x125ac>>]>
	<PARAM processor_data :: void * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x12513> endpc=<ABSOLUTE:0x125ac>>]>
	<VAR counter :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x12513> endpc=<ABSOLUTE:0x125ac>>]>
	<VAR bucket :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x12513> endpc=<ABSOLUTE:0x125ac>>]>
	<VAR cursor :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x12513> endpc=<ABSOLUTE:0x125ac>>]>
hash_get_entries :: (<STRUCT hash_table membertypes=10 size=80> *, void * *, unsigned int8) -> unsigned int8 @ PC range=(<ABSOLUTE:0x12473>, <ABSOLUTE:0x12514>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x12473> endpc=<ABSOLUTE:0x12514>>]>
	<PARAM buffer :: void * * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x12473> endpc=<ABSOLUTE:0x12514>>]>
	<PARAM buffer_size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x12473> endpc=<ABSOLUTE:0x12514>>]>
	<VAR counter :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x12473> endpc=<ABSOLUTE:0x12514>>]>
	<VAR bucket :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x12473> endpc=<ABSOLUTE:0x12514>>]>
	<VAR cursor :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x12473> endpc=<ABSOLUTE:0x12514>>]>
hash_get_next :: (<STRUCT hash_table membertypes=10 size=80> *, void *) -> void * @ PC range=(<ABSOLUTE:0x123d5>, <ABSOLUTE:0x12474>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x123d5> endpc=<ABSOLUTE:0x12474>>]>
	<PARAM entry :: void * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x123d5> endpc=<ABSOLUTE:0x12474>>]>
	<VAR bucket :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x123d5> endpc=<ABSOLUTE:0x12474>>]>
	<VAR cursor :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x123d5> endpc=<ABSOLUTE:0x12474>>]>
hash_get_first :: (<STRUCT hash_table membertypes=10 size=80> *) -> void * @ PC range=(<ABSOLUTE:0x12375>, <ABSOLUTE:0x123d6>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x12375> endpc=<ABSOLUTE:0x123d6>>]>
	<VAR bucket :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x12375> endpc=<ABSOLUTE:0x123d6>>]>
hash_lookup :: (<STRUCT hash_table membertypes=10 size=80> *, void *) -> void * @ PC range=(<ABSOLUTE:0x122de>, <ABSOLUTE:0x12376>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x122de> endpc=<ABSOLUTE:0x12376>>]>
	<PARAM entry :: void * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x122de> endpc=<ABSOLUTE:0x12376>>]>
	<VAR bucket :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x122de> endpc=<ABSOLUTE:0x12376>>]>
	<VAR cursor :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x122de> endpc=<ABSOLUTE:0x12376>>]>
safe_hasher :: (<STRUCT hash_table membertypes=10 size=80> *, void *) -> <STRUCT hash_entry membertypes=2 size=16> * @ PC range=(<ABSOLUTE:0x12283>, <ABSOLUTE:0x122df>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x12283> endpc=<ABSOLUTE:0x122df>>]>
	<PARAM key :: void * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x12283> endpc=<ABSOLUTE:0x122df>>]>
	<VAR n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x12283> endpc=<ABSOLUTE:0x122df>>]>
hash_print_statistics :: (<STRUCT hash_table membertypes=10 size=80> *, <STRUCT _IO_FILE membertypes=29 size=216> *) -> void @ PC range=(<ABSOLUTE:0x1213c>, <ABSOLUTE:0x12284>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1213c> endpc=<ABSOLUTE:0x12284>>]>
	<PARAM stream :: <STRUCT _IO_FILE membertypes=29 size=216> * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x1213c> endpc=<ABSOLUTE:0x12284>>]>
	<VAR n_entries :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1213c> endpc=<ABSOLUTE:0x12284>>]>
	<VAR n_buckets :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1213c> endpc=<ABSOLUTE:0x12284>>]>
	<VAR n_buckets_used :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1213c> endpc=<ABSOLUTE:0x12284>>]>
	<VAR max_bucket_length :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1213c> endpc=<ABSOLUTE:0x12284>>]>
hash_table_ok :: (<STRUCT hash_table membertypes=10 size=80> *) -> unsigned char @ PC range=(<ABSOLUTE:0x1209e>, <ABSOLUTE:0x1213d>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1209e> endpc=<ABSOLUTE:0x1213d>>]>
	<VAR bucket :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1209e> endpc=<ABSOLUTE:0x1213d>>]>
	<VAR n_buckets_used :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1209e> endpc=<ABSOLUTE:0x1213d>>]>
	<VAR n_entries :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1209e> endpc=<ABSOLUTE:0x1213d>>]>
	<VAR cursor :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1209e> endpc=<ABSOLUTE:0x1213d>>]>
hash_get_max_bucket_length :: (<STRUCT hash_table membertypes=10 size=80> *) -> unsigned int8 @ PC range=(<ABSOLUTE:0x1201c>, <ABSOLUTE:0x1209f>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1201c> endpc=<ABSOLUTE:0x1209f>>]>
	<VAR bucket :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1201c> endpc=<ABSOLUTE:0x1209f>>]>
	<VAR max_bucket_length :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1201c> endpc=<ABSOLUTE:0x1209f>>]>
	<VAR cursor :: <STRUCT hash_entry membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1201c> endpc=<ABSOLUTE:0x1209f>>]>
	<VAR bucket_length :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1201c> endpc=<ABSOLUTE:0x1209f>>]>
hash_get_n_entries :: (<STRUCT hash_table membertypes=10 size=80> *) -> unsigned int8 @ PC range=(<ABSOLUTE:0x12006>, <ABSOLUTE:0x1201d>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x12006> endpc=<ABSOLUTE:0x1201d>>]>
hash_get_n_buckets_used :: (<STRUCT hash_table membertypes=10 size=80> *) -> unsigned int8 @ PC range=(<ABSOLUTE:0x11ff0>, <ABSOLUTE:0x12007>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x11ff0> endpc=<ABSOLUTE:0x12007>>]>
hash_get_n_buckets :: (<STRUCT hash_table membertypes=10 size=80> *) -> unsigned int8 @ PC range=(<ABSOLUTE:0x11fda>, <ABSOLUTE:0x11ff1>)
	<PARAM table :: <STRUCT hash_table membertypes=10 size=80> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x11fda> endpc=<ABSOLUTE:0x11ff1>>]>
triple_free :: (void *) -> void @ PC range=(<ABSOLUTE:0x13b3f>, <ABSOLUTE:0x13b76>)
	<PARAM x :: void * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x13b3f> endpc=<ABSOLUTE:0x13b76>>]>
	<VAR a :: <STRUCT F_triple membertypes=3 size=24> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x13b3f> endpc=<ABSOLUTE:0x13b76>>]>
triple_compare_ino_str :: (void *, void *) -> unsigned char @ PC range=(<ABSOLUTE:0x13ac3>, <ABSOLUTE:0x13b40>)
	<PARAM x :: void * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x13ac3> endpc=<ABSOLUTE:0x13b40>>]>
	<PARAM y :: void * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x13ac3> endpc=<ABSOLUTE:0x13b40>>]>
	<VAR a :: <STRUCT F_triple membertypes=3 size=24> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x13ac3> endpc=<ABSOLUTE:0x13b40>>]>
	<VAR b :: <STRUCT F_triple membertypes=3 size=24> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x13ac3> endpc=<ABSOLUTE:0x13b40>>]>
triple_hash :: (void *, unsigned int8) -> unsigned int8 @ PC range=(<ABSOLUTE:0x13a73>, <ABSOLUTE:0x13ac4>)
	<PARAM x :: void * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x13a73> endpc=<ABSOLUTE:0x13ac4>>]>
	<PARAM table_size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x13a73> endpc=<ABSOLUTE:0x13ac4>>]>
	<VAR p :: <STRUCT F_triple membertypes=3 size=24> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x13a73> endpc=<ABSOLUTE:0x13ac4>>]>
	<VAR tmp :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x13a73> endpc=<ABSOLUTE:0x13ac4>>]>
human_options :: (char *, int4 *, unsigned int8 *) -> unsigned int4 @ PC range=(<ABSOLUTE:0x14a01>, <ABSOLUTE:0x14a58>)
	<PARAM spec :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x14a01> endpc=<ABSOLUTE:0x14a58>>]>
	<PARAM opts :: int4 * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x14a01> endpc=<ABSOLUTE:0x14a58>>]>
	<PARAM block_size :: unsigned int8 * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x14a01> endpc=<ABSOLUTE:0x14a58>>]>
	<VAR e :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x14a01> endpc=<ABSOLUTE:0x14a58>>]>
humblock :: (char *, unsigned int8 *, int4 *) -> unsigned int4 @ PC range=(<ABSOLUTE:0x14859>, <ABSOLUTE:0x14a02>)
	<PARAM spec :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x14859> endpc=<ABSOLUTE:0x14a02>>]>
	<PARAM block_size :: unsigned int8 * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x14859> endpc=<ABSOLUTE:0x14a02>>]>
	<PARAM options :: int4 * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x14859> endpc=<ABSOLUTE:0x14a02>>]>
	<VAR i :: int4 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x14859> endpc=<ABSOLUTE:0x14a02>>]>
	<VAR opts :: int4 @ [<AddressLiveRange addr=<STACK:-0x2c> startpc=<ABSOLUTE:0x14859> endpc=<ABSOLUTE:0x14a02>>]>
	<VAR ptr :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x14859> endpc=<ABSOLUTE:0x14a02>>]>
	<VAR e :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0x14859> endpc=<ABSOLUTE:0x14a02>>]>
default_block_size :: () -> unsigned int8 @ PC range=(<ABSOLUTE:0x1482f>, <ABSOLUTE:0x1485a>)
human_readable :: (unsigned int8, char *, int4, unsigned int8, unsigned int8) -> char * @ PC range=(<ABSOLUTE:0x13d95>, <ABSOLUTE:0x14830>)
	<PARAM n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0xf8> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<PARAM buf :: char * @ [<AddressLiveRange addr=<STACK:-0x100> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<PARAM opts :: int4 @ [<AddressLiveRange addr=<STACK:-0x104> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<PARAM from_block_size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x110> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<PARAM to_block_size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x118> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR inexact_style :: int4 @ [<AddressLiveRange addr=<STACK:-0xe0> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR base :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0xdc> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR amt :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0xc8> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR tenths :: int4 @ [<AddressLiveRange addr=<STACK:-0xec> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR exponent :: int4 @ [<AddressLiveRange addr=<STACK:-0xe8> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR exponent_max :: int4 @ [<AddressLiveRange addr=<STACK:-0xd8> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0xc0> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR psuffix :: char * @ [<AddressLiveRange addr=<STACK:-0xb8> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR integerlim :: char * @ [<AddressLiveRange addr=<STACK:-0xb0> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR rounding :: int4 @ [<AddressLiveRange addr=<STACK:-0xe4> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR decimal_point :: char * @ [<AddressLiveRange addr=<STACK:-0xa8> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR decimal_pointlen :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0xa0> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR grouping :: char * @ [<AddressLiveRange addr=<STACK:-0x78> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR thousands_sep :: char * @ [<AddressLiveRange addr=<STACK:-0x98> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR l :: <STRUCT lconv membertypes=24 size=96> * @ [<AddressLiveRange addr=<STACK:-0x70> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR pointlen :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR multiplier :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR divisor :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR r10 :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR r2 :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR dto_block_size :: float16 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR damt :: float16 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR buflen :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x90> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR nonintegerlen :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x88> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR e :: float16 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR r10 :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0xd4> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR r2 :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0xd0> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR digit :: int4 @ [<AddressLiveRange addr=<STACK:-0xcc> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
	<VAR power :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x80> startpc=<ABSOLUTE:0x13d95> endpc=<ABSOLUTE:0x14830>>]>
group_number :: (char *, unsigned int8, char *, char *) -> char * @ PC range=(<ABSOLUTE:0x13c5e>, <ABSOLUTE:0x13d96>)
	<PARAM number :: char * @ [<AddressLiveRange addr=<STACK:-0x88> startpc=<ABSOLUTE:0x13c5e> endpc=<ABSOLUTE:0x13d96>>]>
	<PARAM numberlen :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x90> startpc=<ABSOLUTE:0x13c5e> endpc=<ABSOLUTE:0x13d96>>]>
	<PARAM grouping :: char * @ [<AddressLiveRange addr=<STACK:-0x98> startpc=<ABSOLUTE:0x13c5e> endpc=<ABSOLUTE:0x13d96>>]>
	<PARAM thousands_sep :: char * @ [<AddressLiveRange addr=<STACK:-0xa0> startpc=<ABSOLUTE:0x13c5e> endpc=<ABSOLUTE:0x13d96>>]>
	<VAR d :: char * @ [<AddressLiveRange addr=<REGISTER:3> startpc=<ABSOLUTE:0x13c5e> endpc=<ABSOLUTE:0x13d96>>]>
	<VAR grouplen :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x78> startpc=<ABSOLUTE:0x13c5e> endpc=<ABSOLUTE:0x13d96>>]>
	<VAR thousands_seplen :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x13c5e> endpc=<ABSOLUTE:0x13d96>>]>
	<VAR i :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x70> startpc=<ABSOLUTE:0x13c5e> endpc=<ABSOLUTE:0x13d96>>]>
	<VAR buf :: <ARRAY subtype=char dimensions=(41,) size=41> @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x13c5e> endpc=<ABSOLUTE:0x13d96>>]>
	<VAR g :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x79> startpc=<ABSOLUTE:0x13c5e> endpc=<ABSOLUTE:0x13d96>>]>
adjust_value :: (int4, float16) -> float16 @ PC range=(<ABSOLUTE:0x13b75>, <ABSOLUTE:0x13c5f>)
	<PARAM inexact_style :: int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0x13b75> endpc=<ABSOLUTE:0x13c5f>>]>
	<PARAM value :: float16 @ [<AddressLiveRange addr=<STACK:0x0> startpc=<ABSOLUTE:0x13b75> endpc=<ABSOLUTE:0x13c5f>>]>
	<VAR u :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x13b75> endpc=<ABSOLUTE:0x13c5f>>]>
getgidbyname :: (char *) -> unsigned int4 * @ PC range=(<ABSOLUTE:0x14da0>, <ABSOLUTE:0x14efc>)
	<PARAM group :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x14da0> endpc=<ABSOLUTE:0x14efc>>]>
	<VAR tail :: <STRUCT userid membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x14da0> endpc=<ABSOLUTE:0x14efc>>]>
	<VAR grent :: <STRUCT group membertypes=4 size=32> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x14da0> endpc=<ABSOLUTE:0x14efc>>]>
getgroup :: (unsigned int4) -> char * @ PC range=(<ABSOLUTE:0x14ca9>, <ABSOLUTE:0x14da1>)
	<PARAM gid :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x34> startpc=<ABSOLUTE:0x14ca9> endpc=<ABSOLUTE:0x14da1>>]>
	<VAR tail :: <STRUCT userid membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x14ca9> endpc=<ABSOLUTE:0x14da1>>]>
	<VAR match :: <STRUCT userid membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x14ca9> endpc=<ABSOLUTE:0x14da1>>]>
	<VAR grent :: <STRUCT group membertypes=4 size=32> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x14ca9> endpc=<ABSOLUTE:0x14da1>>]>
	<VAR name :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x14ca9> endpc=<ABSOLUTE:0x14da1>>]>
getuidbyname :: (char *) -> unsigned int4 * @ PC range=(<ABSOLUTE:0x14b4e>, <ABSOLUTE:0x14caa>)
	<PARAM user :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x14b4e> endpc=<ABSOLUTE:0x14caa>>]>
	<VAR tail :: <STRUCT userid membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x14b4e> endpc=<ABSOLUTE:0x14caa>>]>
	<VAR pwent :: <STRUCT passwd membertypes=7 size=48> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x14b4e> endpc=<ABSOLUTE:0x14caa>>]>
getuser :: (unsigned int4) -> char * @ PC range=(<ABSOLUTE:0x14a57>, <ABSOLUTE:0x14b4f>)
	<PARAM uid :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x34> startpc=<ABSOLUTE:0x14a57> endpc=<ABSOLUTE:0x14b4f>>]>
	<VAR tail :: <STRUCT userid membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x14a57> endpc=<ABSOLUTE:0x14b4f>>]>
	<VAR match :: <STRUCT userid membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x14a57> endpc=<ABSOLUTE:0x14b4f>>]>
	<VAR pwent :: <STRUCT passwd membertypes=7 size=48> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x14a57> endpc=<ABSOLUTE:0x14b4f>>]>
	<VAR name :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x14a57> endpc=<ABSOLUTE:0x14b4f>>]>
imaxtostr :: (int8, char *) -> char * @ PC range=(<ABSOLUTE:0x14efb>, <ABSOLUTE:0x1503a>)
	<PARAM i :: int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x14efb> endpc=<ABSOLUTE:0x1503a>>]>
	<PARAM buf :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x14efb> endpc=<ABSOLUTE:0x1503a>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x14efb> endpc=<ABSOLUTE:0x1503a>>]>
umaxtostr :: (unsigned int8, char *) -> char * @ PC range=(<ABSOLUTE:0x15039>, <ABSOLUTE:0x150c3>)
	<PARAM i :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x15039> endpc=<ABSOLUTE:0x150c3>>]>
	<PARAM buf :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x15039> endpc=<ABSOLUTE:0x150c3>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x15039> endpc=<ABSOLUTE:0x150c3>>]>
rpl_mbrtowc :: (int4 *, char *, unsigned int8, <STRUCT membertypes=2 size=8> *) -> unsigned int8 @ PC range=(<ABSOLUTE:0x150c2>, <ABSOLUTE:0x1516d>)
	<PARAM pwc :: int4 * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x150c2> endpc=<ABSOLUTE:0x1516d>>]>
	<PARAM s :: char * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x150c2> endpc=<ABSOLUTE:0x1516d>>]>
	<PARAM n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x150c2> endpc=<ABSOLUTE:0x1516d>>]>
	<PARAM ps :: <STRUCT membertypes=2 size=8> * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x150c2> endpc=<ABSOLUTE:0x1516d>>]>
	<VAR ret :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x150c2> endpc=<ABSOLUTE:0x1516d>>]>
	<VAR wc :: int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0x150c2> endpc=<ABSOLUTE:0x1516d>>]>
	<VAR uc :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x25> startpc=<ABSOLUTE:0x150c2> endpc=<ABSOLUTE:0x1516d>>]>
ambsalign :: (char *, unsigned int8 *, unsigned int4, int4) -> char * @ PC range=(<ABSOLUTE:0x15660>, <ABSOLUTE:0x15753>)
	<PARAM src :: char * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x15660> endpc=<ABSOLUTE:0x15753>>]>
	<PARAM width :: unsigned int8 * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x15660> endpc=<ABSOLUTE:0x15753>>]>
	<PARAM align :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x54> startpc=<ABSOLUTE:0x15660> endpc=<ABSOLUTE:0x15753>>]>
	<PARAM flags :: int4 @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x15660> endpc=<ABSOLUTE:0x15753>>]>
	<VAR orig_width :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x15660> endpc=<ABSOLUTE:0x15753>>]>
	<VAR size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x15660> endpc=<ABSOLUTE:0x15753>>]>
	<VAR req :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x15660> endpc=<ABSOLUTE:0x15753>>]>
	<VAR buf :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x15660> endpc=<ABSOLUTE:0x15753>>]>
	<VAR nbuf :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x15660> endpc=<ABSOLUTE:0x15753>>]>
mbsalign :: (char *, char *, unsigned int8, unsigned int8 *, unsigned int4, int4) -> unsigned int8 @ PC range=(<ABSOLUTE:0x15295>, <ABSOLUTE:0x15661>)
	<PARAM src :: char * @ [<AddressLiveRange addr=<STACK:-0x88> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<PARAM dest :: char * @ [<AddressLiveRange addr=<STACK:-0x90> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<PARAM dest_size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x98> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<PARAM width :: unsigned int8 * @ [<AddressLiveRange addr=<STACK:-0xa0> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<PARAM align :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0xa4> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<PARAM flags :: int4 @ [<AddressLiveRange addr=<STACK:-0xa8> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<VAR ret :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x78> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<VAR src_size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x70> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<VAR newstr :: char * @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<VAR str_wc :: int4 * @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<VAR str_to_print :: char * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<VAR n_cols :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<VAR n_used_bytes :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<VAR n_spaces :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<VAR conversion :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x7a> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<VAR wc_enabled :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x79> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<VAR src_chars :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<VAR start_spaces :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<VAR end_spaces :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<VAR space_left :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
	<VAR dest_end :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x15295> endpc=<ABSOLUTE:0x15661>>]>
mbs_align_pad :: (char *, char *, unsigned int8) -> char * @ PC range=(<ABSOLUTE:0x15248>, <ABSOLUTE:0x15296>)
	<PARAM dest :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x15248> endpc=<ABSOLUTE:0x15296>>]>
	<PARAM dest_end :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x15248> endpc=<ABSOLUTE:0x15296>>]>
	<PARAM n_spaces :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x15248> endpc=<ABSOLUTE:0x15296>>]>
wc_truncate :: (int4 *, unsigned int8) -> unsigned int8 @ PC range=(<ABSOLUTE:0x151be>, <ABSOLUTE:0x15249>)
	<PARAM wc :: int4 * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x151be> endpc=<ABSOLUTE:0x15249>>]>
	<PARAM width :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x151be> endpc=<ABSOLUTE:0x15249>>]>
	<VAR cells :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x151be> endpc=<ABSOLUTE:0x15249>>]>
	<VAR next_cells :: int4 @ [<AddressLiveRange addr=<STACK:-0x1c> startpc=<ABSOLUTE:0x151be> endpc=<ABSOLUTE:0x15249>>]>
wc_ensure_printable :: (int4 *) -> unsigned char @ PC range=(<ABSOLUTE:0x1516c>, <ABSOLUTE:0x151bf>)
	<PARAM wchars :: int4 * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1516c> endpc=<ABSOLUTE:0x151bf>>]>
	<VAR replaced :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x19> startpc=<ABSOLUTE:0x1516c> endpc=<ABSOLUTE:0x151bf>>]>
	<VAR wc :: int4 * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1516c> endpc=<ABSOLUTE:0x151bf>>]>
mbsnwidth :: (char *, unsigned int8, int4) -> int4 @ PC range=(<ABSOLUTE:0x15788>, <ABSOLUTE:0x15a11>)
	<PARAM string :: char * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x15788> endpc=<ABSOLUTE:0x15a11>>]>
	<PARAM nbytes :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x15788> endpc=<ABSOLUTE:0x15a11>>]>
	<PARAM flags :: int4 @ [<AddressLiveRange addr=<STACK:-0x64> startpc=<ABSOLUTE:0x15788> endpc=<ABSOLUTE:0x15a11>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x15788> endpc=<ABSOLUTE:0x15a11>>]>
	<VAR plimit :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x15788> endpc=<ABSOLUTE:0x15a11>>]>
	<VAR width :: int4 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x15788> endpc=<ABSOLUTE:0x15a11>>]>
	<VAR mbstate :: <STRUCT membertypes=2 size=8> @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x15788> endpc=<ABSOLUTE:0x15a11>>]>
	<VAR wc :: int4 @ [<AddressLiveRange addr=<STACK:-0x44> startpc=<ABSOLUTE:0x15788> endpc=<ABSOLUTE:0x15a11>>]>
	<VAR bytes :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x15788> endpc=<ABSOLUTE:0x15a11>>]>
	<VAR w :: int4 @ [<AddressLiveRange addr=<STACK:-0x3c> startpc=<ABSOLUTE:0x15788> endpc=<ABSOLUTE:0x15a11>>]>
	<VAR c :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x45> startpc=<ABSOLUTE:0x15788> endpc=<ABSOLUTE:0x15a11>>]>
gnu_mbswidth :: (char *, int4) -> int4 @ PC range=(<ABSOLUTE:0x15752>, <ABSOLUTE:0x15789>)
	<PARAM string :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x15752> endpc=<ABSOLUTE:0x15789>>]>
	<PARAM flags :: int4 @ [<AddressLiveRange addr=<STACK:-0x1c> startpc=<ABSOLUTE:0x15752> endpc=<ABSOLUTE:0x15789>>]>
mpsort :: (void * *, unsigned int8, (void *, void *) -> int4 *) -> void @ PC range=(<ABSOLUTE:0x15e00>, <ABSOLUTE:0x15e4a>)
	<PARAM base :: void * * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x15e00> endpc=<ABSOLUTE:0x15e4a>>]>
	<PARAM n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x15e00> endpc=<ABSOLUTE:0x15e4a>>]>
	<PARAM cmp :: (void *, void *) -> int4 * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x15e00> endpc=<ABSOLUTE:0x15e4a>>]>
mpsort_with_tmp :: (void * *, unsigned int8, void * *, (void *, void *) -> int4 *) -> void @ PC range=(<ABSOLUTE:0x15bb6>, <ABSOLUTE:0x15e01>)
	<PARAM base :: void * * @ [<AddressLiveRange addr=<STACK:-0x78> startpc=<ABSOLUTE:0x15bb6> endpc=<ABSOLUTE:0x15e01>>]>
	<PARAM n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x80> startpc=<ABSOLUTE:0x15bb6> endpc=<ABSOLUTE:0x15e01>>]>
	<PARAM tmp :: void * * @ [<AddressLiveRange addr=<STACK:-0x88> startpc=<ABSOLUTE:0x15bb6> endpc=<ABSOLUTE:0x15e01>>]>
	<PARAM cmp :: (void *, void *) -> int4 * @ [<AddressLiveRange addr=<STACK:-0x90> startpc=<ABSOLUTE:0x15bb6> endpc=<ABSOLUTE:0x15e01>>]>
	<VAR p0 :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x15bb6> endpc=<ABSOLUTE:0x15e01>>]>
	<VAR p1 :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x15bb6> endpc=<ABSOLUTE:0x15e01>>]>
	<VAR n1 :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x15bb6> endpc=<ABSOLUTE:0x15e01>>]>
	<VAR n2 :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x15bb6> endpc=<ABSOLUTE:0x15e01>>]>
	<VAR i :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x15bb6> endpc=<ABSOLUTE:0x15e01>>]>
	<VAR t :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x15bb6> endpc=<ABSOLUTE:0x15e01>>]>
	<VAR tlim :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x15bb6> endpc=<ABSOLUTE:0x15e01>>]>
	<VAR b :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x15bb6> endpc=<ABSOLUTE:0x15e01>>]>
	<VAR blim :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x15bb6> endpc=<ABSOLUTE:0x15e01>>]>
	<VAR bb :: void * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x15bb6> endpc=<ABSOLUTE:0x15e01>>]>
	<VAR tt :: void * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x15bb6> endpc=<ABSOLUTE:0x15e01>>]>
mpsort_into_tmp :: (void * *, unsigned int8, void * *, (void *, void *) -> int4 *) -> void @ PC range=(<ABSOLUTE:0x15a10>, <ABSOLUTE:0x15bb7>)
	<PARAM base :: void * * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x15a10> endpc=<ABSOLUTE:0x15bb7>>]>
	<PARAM n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x15a10> endpc=<ABSOLUTE:0x15bb7>>]>
	<PARAM tmp :: void * * @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x15a10> endpc=<ABSOLUTE:0x15bb7>>]>
	<PARAM cmp :: (void *, void *) -> int4 * @ [<AddressLiveRange addr=<STACK:-0x70> startpc=<ABSOLUTE:0x15a10> endpc=<ABSOLUTE:0x15bb7>>]>
	<VAR n1 :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x15a10> endpc=<ABSOLUTE:0x15bb7>>]>
	<VAR n2 :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x15a10> endpc=<ABSOLUTE:0x15bb7>>]>
	<VAR a :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x15a10> endpc=<ABSOLUTE:0x15bb7>>]>
	<VAR alim :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x15a10> endpc=<ABSOLUTE:0x15bb7>>]>
	<VAR b :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x15a10> endpc=<ABSOLUTE:0x15bb7>>]>
	<VAR blim :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x15a10> endpc=<ABSOLUTE:0x15bb7>>]>
	<VAR ba :: void * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x15a10> endpc=<ABSOLUTE:0x15bb7>>]>
	<VAR bb :: void * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x15a10> endpc=<ABSOLUTE:0x15bb7>>]>
__strftime_internal :: (char *, unsigned int8, char *, <STRUCT tm membertypes=11 size=56> *, unsigned char, int4, int4, unsigned char *, <STRUCT tm_zone membertypes=3 size=16> *, int4) -> unsigned int8 @ PC range=(<ABSOLUTE:0x15fcc>, <ABSOLUTE:0x1884a>)
	<PARAM s :: char * @ [<AddressLiveRange addr=<STACK:-0x6d8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<PARAM maxsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x6e0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<PARAM format :: char * @ [<AddressLiveRange addr=<STACK:-0x6e8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<PARAM tp :: <STRUCT tm membertypes=11 size=56> * @ [<AddressLiveRange addr=<STACK:-0x6f0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<PARAM upcase :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x6f4> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<PARAM yr_spec :: int4 @ [<AddressLiveRange addr=<STACK:-0x6f8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<PARAM width :: int4 @ [<AddressLiveRange addr=<STACK:0x0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<PARAM tzset_called :: unsigned char * @ [<AddressLiveRange addr=<STACK:-0x700> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<PARAM tz :: <STRUCT tm_zone membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x708> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<PARAM ns :: int4 @ [<AddressLiveRange addr=<STACK:0x18> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR saved_errno :: int4 @ [<AddressLiveRange addr=<STACK:-0x688> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR hour12 :: int4 @ [<AddressLiveRange addr=<STACK:-0x6c4> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR zone :: char * @ [<AddressLiveRange addr=<STACK:-0x650> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR i :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x648> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR p :: char * @ [<AddressLiveRange addr=<STACK:-0x640> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR f :: char * @ [<AddressLiveRange addr=<STACK:-0x638> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR pad :: int4 @ [<AddressLiveRange addr=<STACK:-0x6c0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR modifier :: int4 @ [<AddressLiveRange addr=<STACK:-0x6bc> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR digits :: int4 @ [<AddressLiveRange addr=<STACK:-0x6b8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR number_value :: int4 @ [<AddressLiveRange addr=<STACK:-0x6b4> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR u_number_value :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x6b0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR negative_number :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x6cc> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR always_output_a_sign :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x6cb> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR tz_colon_mask :: int4 @ [<AddressLiveRange addr=<STACK:-0x6ac> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR subfmt :: char * @ [<AddressLiveRange addr=<STACK:-0x630> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR bufp :: char * @ [<AddressLiveRange addr=<STACK:-0x628> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR buf :: <ARRAY subtype=char dimensions=(23,) size=23> @ [<AddressLiveRange addr=<STACK:-0x430> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR to_lowcase :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x6ca> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR to_uppcase :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x6c9> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR colons :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x620> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR change_case :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x6c8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR format_char :: int4 @ [<AddressLiveRange addr=<STACK:-0x6a8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR subwidth :: int4 @ [<AddressLiveRange addr=<STACK:-0x6a4> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR percent :: char * @ [<AddressLiveRange addr=<STACK:-0x608> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x490> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _w :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x488> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _incr :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x480> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _delta :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x478> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x4d0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _w :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x4c8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _incr :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x4c0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _delta :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x4b8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x560> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x558> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _w :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x550> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _incr :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x548> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _delta :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x540> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR ufmt :: <ARRAY subtype=char dimensions=(5,) size=5> @ [<AddressLiveRange addr=<STACK:-0x435> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR u :: char * @ [<AddressLiveRange addr=<STACK:-0x618> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR ubuf :: <ARRAY subtype=char dimensions=(1024,) size=1024> @ [<AddressLiveRange addr=<STACK:-0x430> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x4f8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x4f0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _w :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x4e8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _incr :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x4e0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _delta :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x4d8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR negative_year :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x6c7> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR zero_thru_1899 :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x6c6> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR century :: int4 @ [<AddressLiveRange addr=<STACK:-0x670> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR sign_char :: char @ [<AddressLiveRange addr=<STACK:-0x6c5> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR numlen :: int4 @ [<AddressLiveRange addr=<STACK:-0x65c> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR shortage :: int4 @ [<AddressLiveRange addr=<STACK:-0x658> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR padding :: int4 @ [<AddressLiveRange addr=<STACK:-0x654> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x538> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _w :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x530> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _incr :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x528> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _delta :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x520> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x518> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _w :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x510> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _incr :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x508> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _delta :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x500> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR n :: int4 @ [<AddressLiveRange addr=<STACK:-0x6a0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR ns_digits :: int4 @ [<AddressLiveRange addr=<STACK:-0x680> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR ndigs :: int4 @ [<AddressLiveRange addr=<STACK:-0x69c> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR j :: int4 @ [<AddressLiveRange addr=<STACK:-0x698> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x5a0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _w :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x598> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _incr :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x590> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _delta :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x588> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x580> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _w :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x578> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _incr :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x570> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _delta :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x568> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x5e0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _w :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x5d8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _incr :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x5d0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _delta :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x5c8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR ltm :: <STRUCT tm membertypes=11 size=56> @ [<AddressLiveRange addr=<STACK:-0x470> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR t :: int8 @ [<AddressLiveRange addr=<STACK:-0x610> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR d :: int4 @ [<AddressLiveRange addr=<STACK:-0x684> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x600> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _w :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x5f8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _incr :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x5f0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _delta :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x5e8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR year :: int4 @ [<AddressLiveRange addr=<STACK:-0x67c> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR year_adjust :: int4 @ [<AddressLiveRange addr=<STACK:-0x694> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR days :: int4 @ [<AddressLiveRange addr=<STACK:-0x690> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR d :: int4 @ [<AddressLiveRange addr=<STACK:-0x678> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR yy :: int4 @ [<AddressLiveRange addr=<STACK:-0x674> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR yy :: int4 @ [<AddressLiveRange addr=<STACK:-0x68c> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x5c0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _w :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x5b8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _incr :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x5b0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _delta :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x5a8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR diff :: int4 @ [<AddressLiveRange addr=<STACK:-0x66c> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR hour_diff :: int4 @ [<AddressLiveRange addr=<STACK:-0x668> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR min_diff :: int4 @ [<AddressLiveRange addr=<STACK:-0x664> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR sec_diff :: int4 @ [<AddressLiveRange addr=<STACK:-0x660> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x4b0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _w :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x4a8> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _incr :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x4a0> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
	<VAR _delta :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x498> startpc=<ABSOLUTE:0x15fcc> endpc=<ABSOLUTE:0x1884a>>]>
nstrftime :: (char *, unsigned int8, char *, <STRUCT tm membertypes=11 size=56> *, <STRUCT tm_zone membertypes=3 size=16> *, int4) -> unsigned int8 @ PC range=(<ABSOLUTE:0x15f49>, <ABSOLUTE:0x15fcd>)
	<PARAM s :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x15f49> endpc=<ABSOLUTE:0x15fcd>>]>
	<PARAM maxsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x15f49> endpc=<ABSOLUTE:0x15fcd>>]>
	<PARAM format :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x15f49> endpc=<ABSOLUTE:0x15fcd>>]>
	<PARAM tp :: <STRUCT tm membertypes=11 size=56> * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x15f49> endpc=<ABSOLUTE:0x15fcd>>]>
	<PARAM tz :: <STRUCT tm_zone membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x15f49> endpc=<ABSOLUTE:0x15fcd>>]>
	<PARAM ns :: int4 @ [<AddressLiveRange addr=<STACK:-0x4c> startpc=<ABSOLUTE:0x15f49> endpc=<ABSOLUTE:0x15fcd>>]>
	<VAR tzset_called :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x19> startpc=<ABSOLUTE:0x15f49> endpc=<ABSOLUTE:0x15fcd>>]>
iso_week_days :: (int4, int4) -> int4 @ PC range=(<ABSOLUTE:0x15ef9>, <ABSOLUTE:0x15f4a>)
	<PARAM yday :: int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0x15ef9> endpc=<ABSOLUTE:0x15f4a>>]>
	<PARAM wday :: int4 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x15ef9> endpc=<ABSOLUTE:0x15f4a>>]>
	<VAR big_enough_multiple_of_7 :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x15ef9> endpc=<ABSOLUTE:0x15f4a>>]>
memcpy_uppcase :: (char *, char *, unsigned int8) -> char * @ PC range=(<ABSOLUTE:0x15ea1>, <ABSOLUTE:0x15efa>)
	<PARAM dest :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x15ea1> endpc=<ABSOLUTE:0x15efa>>]>
	<PARAM src :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x15ea1> endpc=<ABSOLUTE:0x15efa>>]>
	<PARAM len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x15ea1> endpc=<ABSOLUTE:0x15efa>>]>
memcpy_lowcase :: (char *, char *, unsigned int8) -> char * @ PC range=(<ABSOLUTE:0x15e49>, <ABSOLUTE:0x15ea2>)
	<PARAM dest :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x15e49> endpc=<ABSOLUTE:0x15ea2>>]>
	<PARAM src :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x15e49> endpc=<ABSOLUTE:0x15ea2>>]>
	<PARAM len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x15e49> endpc=<ABSOLUTE:0x15ea2>>]>
print_and_abort :: () -> void @ PC range=(<ABSOLUTE:0x18e48>, <ABSOLUTE:0x18e8e>)
_obstack_memory_used :: (<STRUCT obstack membertypes=13 size=88> *) -> unsigned int8 @ PC range=(<ABSOLUTE:0x18dfe>, <ABSOLUTE:0x18e49>)
	<PARAM h :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x18dfe> endpc=<ABSOLUTE:0x18e49>>]>
	<VAR lp :: <STRUCT _obstack_chunk membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x18dfe> endpc=<ABSOLUTE:0x18e49>>]>
	<VAR nbytes :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x18dfe> endpc=<ABSOLUTE:0x18e49>>]>
_obstack_free :: (<STRUCT obstack membertypes=13 size=88> *, void *) -> void @ PC range=(<ABSOLUTE:0x18d3a>, <ABSOLUTE:0x18dff>)
	<PARAM h :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x18d3a> endpc=<ABSOLUTE:0x18dff>>]>
	<PARAM obj :: void * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x18d3a> endpc=<ABSOLUTE:0x18dff>>]>
	<VAR lp :: <STRUCT _obstack_chunk membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x18d3a> endpc=<ABSOLUTE:0x18dff>>]>
	<VAR plp :: <STRUCT _obstack_chunk membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x18d3a> endpc=<ABSOLUTE:0x18dff>>]>
_obstack_allocated_p :: (<STRUCT obstack membertypes=13 size=88> *, void *) -> int4 @ PC range=(<ABSOLUTE:0x18cdd>, <ABSOLUTE:0x18d3b>)
	<PARAM h :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x18cdd> endpc=<ABSOLUTE:0x18d3b>>]>
	<PARAM obj :: void * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x18cdd> endpc=<ABSOLUTE:0x18d3b>>]>
	<VAR lp :: <STRUCT _obstack_chunk membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x18cdd> endpc=<ABSOLUTE:0x18d3b>>]>
	<VAR plp :: <STRUCT _obstack_chunk membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x18cdd> endpc=<ABSOLUTE:0x18d3b>>]>
_obstack_newchunk :: (<STRUCT obstack membertypes=13 size=88> *, unsigned int8) -> void @ PC range=(<ABSOLUTE:0x18ae6>, <ABSOLUTE:0x18cde>)
	<PARAM h :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x18ae6> endpc=<ABSOLUTE:0x18cde>>]>
	<PARAM length :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x18ae6> endpc=<ABSOLUTE:0x18cde>>]>
	<VAR old_chunk :: <STRUCT _obstack_chunk membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x18ae6> endpc=<ABSOLUTE:0x18cde>>]>
	<VAR new_chunk :: <STRUCT _obstack_chunk membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x18ae6> endpc=<ABSOLUTE:0x18cde>>]>
	<VAR obj_size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x18ae6> endpc=<ABSOLUTE:0x18cde>>]>
	<VAR object_base :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x18ae6> endpc=<ABSOLUTE:0x18cde>>]>
	<VAR sum1 :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x18ae6> endpc=<ABSOLUTE:0x18cde>>]>
	<VAR sum2 :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x18ae6> endpc=<ABSOLUTE:0x18cde>>]>
	<VAR new_size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x18ae6> endpc=<ABSOLUTE:0x18cde>>]>
_obstack_begin_1 :: (<STRUCT obstack membertypes=13 size=88> *, unsigned int8, unsigned int8, (void *, unsigned int8) -> void * *, (void *, void *) -> void *, void *) -> int4 @ PC range=(<ABSOLUTE:0x18a77>, <ABSOLUTE:0x18ae7>)
	<PARAM h :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x18a77> endpc=<ABSOLUTE:0x18ae7>>]>
	<PARAM size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x18a77> endpc=<ABSOLUTE:0x18ae7>>]>
	<PARAM alignment :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x18a77> endpc=<ABSOLUTE:0x18ae7>>]>
	<PARAM chunkfun :: (void *, unsigned int8) -> void * * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x18a77> endpc=<ABSOLUTE:0x18ae7>>]>
	<PARAM freefun :: (void *, void *) -> void * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x18a77> endpc=<ABSOLUTE:0x18ae7>>]>
	<PARAM arg :: void * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x18a77> endpc=<ABSOLUTE:0x18ae7>>]>
_obstack_begin :: (<STRUCT obstack membertypes=13 size=88> *, unsigned int8, unsigned int8, (unsigned int8) -> void * *, (void *) -> void *) -> int4 @ PC range=(<ABSOLUTE:0x18a18>, <ABSOLUTE:0x18a78>)
	<PARAM h :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x18a18> endpc=<ABSOLUTE:0x18a78>>]>
	<PARAM size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x18a18> endpc=<ABSOLUTE:0x18a78>>]>
	<PARAM alignment :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x18a18> endpc=<ABSOLUTE:0x18a78>>]>
	<PARAM chunkfun :: (unsigned int8) -> void * * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x18a18> endpc=<ABSOLUTE:0x18a78>>]>
	<PARAM freefun :: (void *) -> void * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x18a18> endpc=<ABSOLUTE:0x18a78>>]>
_obstack_begin_worker :: (<STRUCT obstack membertypes=13 size=88> *, unsigned int8, unsigned int8) -> int4 @ PC range=(<ABSOLUTE:0x188f2>, <ABSOLUTE:0x18a19>)
	<PARAM h :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x188f2> endpc=<ABSOLUTE:0x18a19>>]>
	<PARAM size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x188f2> endpc=<ABSOLUTE:0x18a19>>]>
	<PARAM alignment :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x188f2> endpc=<ABSOLUTE:0x18a19>>]>
	<VAR chunk :: <STRUCT _obstack_chunk membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x188f2> endpc=<ABSOLUTE:0x18a19>>]>
	<VAR extra :: int4 @ [<AddressLiveRange addr=<STACK:-0x1c> startpc=<ABSOLUTE:0x188f2> endpc=<ABSOLUTE:0x18a19>>]>
call_freefun :: (<STRUCT obstack membertypes=13 size=88> *, void *) -> void @ PC range=(<ABSOLUTE:0x1889d>, <ABSOLUTE:0x188f3>)
	<PARAM h :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1889d> endpc=<ABSOLUTE:0x188f3>>]>
	<PARAM old_chunk :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1889d> endpc=<ABSOLUTE:0x188f3>>]>
call_chunkfun :: (<STRUCT obstack membertypes=13 size=88> *, unsigned int8) -> void * @ PC range=(<ABSOLUTE:0x18849>, <ABSOLUTE:0x1889e>)
	<PARAM h :: <STRUCT obstack membertypes=13 size=88> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x18849> endpc=<ABSOLUTE:0x1889e>>]>
	<PARAM size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x18849> endpc=<ABSOLUTE:0x1889e>>]>
set_program_name :: (char *) -> void @ PC range=(<ABSOLUTE:0x18e8d>, <ABSOLUTE:0x18f83>)
	<PARAM argv0 :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x18e8d> endpc=<ABSOLUTE:0x18f83>>]>
	<VAR slash :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x18e8d> endpc=<ABSOLUTE:0x18f83>>]>
	<VAR base :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x18e8d> endpc=<ABSOLUTE:0x18f83>>]>
quote :: (char *) -> char * @ PC range=(<ABSOLUTE:0x1aed8>, <ABSOLUTE:0x1aefc>)
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1aed8> endpc=<ABSOLUTE:0x1aefc>>]>
quote_n :: (int4, char *) -> char * @ PC range=(<ABSOLUTE:0x1aeab>, <ABSOLUTE:0x1aed9>)
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1aeab> endpc=<ABSOLUTE:0x1aed9>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1aeab> endpc=<ABSOLUTE:0x1aed9>>]>
quote_mem :: (char *, unsigned int8) -> char * @ PC range=(<ABSOLUTE:0x1ae80>, <ABSOLUTE:0x1aeac>)
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1ae80> endpc=<ABSOLUTE:0x1aeac>>]>
	<PARAM argsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1ae80> endpc=<ABSOLUTE:0x1aeac>>]>
quote_n_mem :: (int4, char *, unsigned int8) -> char * @ PC range=(<ABSOLUTE:0x1ae4e>, <ABSOLUTE:0x1ae81>)
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1ae4e> endpc=<ABSOLUTE:0x1ae81>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1ae4e> endpc=<ABSOLUTE:0x1ae81>>]>
	<PARAM argsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1ae4e> endpc=<ABSOLUTE:0x1ae81>>]>
quotearg_custom_mem :: (char *, char *, char *, unsigned int8) -> char * @ PC range=(<ABSOLUTE:0x1ae10>, <ABSOLUTE:0x1ae4f>)
	<PARAM left_quote :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1ae10> endpc=<ABSOLUTE:0x1ae4f>>]>
	<PARAM right_quote :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1ae10> endpc=<ABSOLUTE:0x1ae4f>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1ae10> endpc=<ABSOLUTE:0x1ae4f>>]>
	<PARAM argsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1ae10> endpc=<ABSOLUTE:0x1ae4f>>]>
quotearg_custom :: (char *, char *, char *) -> char * @ PC range=(<ABSOLUTE:0x1addd>, <ABSOLUTE:0x1ae11>)
	<PARAM left_quote :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1addd> endpc=<ABSOLUTE:0x1ae11>>]>
	<PARAM right_quote :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1addd> endpc=<ABSOLUTE:0x1ae11>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1addd> endpc=<ABSOLUTE:0x1ae11>>]>
quotearg_n_custom_mem :: (int4, char *, char *, char *, unsigned int8) -> char * @ PC range=(<ABSOLUTE:0x1ad1f>, <ABSOLUTE:0x1adde>)
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x54> startpc=<ABSOLUTE:0x1ad1f> endpc=<ABSOLUTE:0x1adde>>]>
	<PARAM left_quote :: char * @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x1ad1f> endpc=<ABSOLUTE:0x1adde>>]>
	<PARAM right_quote :: char * @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x1ad1f> endpc=<ABSOLUTE:0x1adde>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x70> startpc=<ABSOLUTE:0x1ad1f> endpc=<ABSOLUTE:0x1adde>>]>
	<PARAM argsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x78> startpc=<ABSOLUTE:0x1ad1f> endpc=<ABSOLUTE:0x1adde>>]>
	<VAR o :: <STRUCT quoting_options membertypes=5 size=56> @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x1ad1f> endpc=<ABSOLUTE:0x1adde>>]>
quotearg_n_custom :: (int4, char *, char *, char *) -> char * @ PC range=(<ABSOLUTE:0x1ace5>, <ABSOLUTE:0x1ad20>)
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1ace5> endpc=<ABSOLUTE:0x1ad20>>]>
	<PARAM left_quote :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1ace5> endpc=<ABSOLUTE:0x1ad20>>]>
	<PARAM right_quote :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1ace5> endpc=<ABSOLUTE:0x1ad20>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1ace5> endpc=<ABSOLUTE:0x1ad20>>]>
quotearg_n_style_colon :: (int4, unsigned int4, char *) -> char * @ PC range=(<ABSOLUTE:0x1ac23>, <ABSOLUTE:0x1ace6>)
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x54> startpc=<ABSOLUTE:0x1ac23> endpc=<ABSOLUTE:0x1ace6>>]>
	<PARAM s :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x1ac23> endpc=<ABSOLUTE:0x1ace6>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x1ac23> endpc=<ABSOLUTE:0x1ace6>>]>
	<VAR options :: <STRUCT quoting_options membertypes=5 size=56> @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x1ac23> endpc=<ABSOLUTE:0x1ace6>>]>
quotearg_colon_mem :: (char *, unsigned int8) -> char * @ PC range=(<ABSOLUTE:0x1abf5>, <ABSOLUTE:0x1ac24>)
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1abf5> endpc=<ABSOLUTE:0x1ac24>>]>
	<PARAM argsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1abf5> endpc=<ABSOLUTE:0x1ac24>>]>
quotearg_colon :: (char *) -> char * @ PC range=(<ABSOLUTE:0x1abd2>, <ABSOLUTE:0x1abf6>)
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1abd2> endpc=<ABSOLUTE:0x1abf6>>]>
quotearg_char :: (char *, char) -> char * @ PC range=(<ABSOLUTE:0x1aba4>, <ABSOLUTE:0x1abd3>)
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1aba4> endpc=<ABSOLUTE:0x1abd3>>]>
	<PARAM ch :: char @ [<AddressLiveRange addr=<STACK:-0x1c> startpc=<ABSOLUTE:0x1aba4> endpc=<ABSOLUTE:0x1abd3>>]>
quotearg_char_mem :: (char *, unsigned int8, char) -> char * @ PC range=(<ABSOLUTE:0x1aae9>, <ABSOLUTE:0x1aba5>)
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x1aae9> endpc=<ABSOLUTE:0x1aba5>>]>
	<PARAM argsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x1aae9> endpc=<ABSOLUTE:0x1aba5>>]>
	<PARAM ch :: char @ [<AddressLiveRange addr=<STACK:-0x64> startpc=<ABSOLUTE:0x1aae9> endpc=<ABSOLUTE:0x1aba5>>]>
	<VAR options :: <STRUCT quoting_options membertypes=5 size=56> @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x1aae9> endpc=<ABSOLUTE:0x1aba5>>]>
quotearg_style_mem :: (unsigned int4, char *, unsigned int8) -> char * @ PC range=(<ABSOLUTE:0x1aab9>, <ABSOLUTE:0x1aaea>)
	<PARAM s :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1aab9> endpc=<ABSOLUTE:0x1aaea>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1aab9> endpc=<ABSOLUTE:0x1aaea>>]>
	<PARAM argsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1aab9> endpc=<ABSOLUTE:0x1aaea>>]>
quotearg_style :: (unsigned int4, char *) -> char * @ PC range=(<ABSOLUTE:0x1aa91>, <ABSOLUTE:0x1aaba>)
	<PARAM s :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1aa91> endpc=<ABSOLUTE:0x1aaba>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1aa91> endpc=<ABSOLUTE:0x1aaba>>]>
quotearg_n_style_mem :: (int4, unsigned int4, char *, unsigned int8) -> char * @ PC range=(<ABSOLUTE:0x1aa2b>, <ABSOLUTE:0x1aa92>)
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x54> startpc=<ABSOLUTE:0x1aa2b> endpc=<ABSOLUTE:0x1aa92>>]>
	<PARAM s :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x1aa2b> endpc=<ABSOLUTE:0x1aa92>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x1aa2b> endpc=<ABSOLUTE:0x1aa92>>]>
	<PARAM argsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x1aa2b> endpc=<ABSOLUTE:0x1aa92>>]>
	<VAR o :: <STRUCT quoting_options membertypes=5 size=56> @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x1aa2b> endpc=<ABSOLUTE:0x1aa92>>]>
quotearg_n_style :: (int4, unsigned int4, char *) -> char * @ PC range=(<ABSOLUTE:0x1a9c3>, <ABSOLUTE:0x1aa2c>)
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x54> startpc=<ABSOLUTE:0x1a9c3> endpc=<ABSOLUTE:0x1aa2c>>]>
	<PARAM s :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x1a9c3> endpc=<ABSOLUTE:0x1aa2c>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x1a9c3> endpc=<ABSOLUTE:0x1aa2c>>]>
	<VAR o :: <STRUCT quoting_options membertypes=5 size=56> @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x1a9c3> endpc=<ABSOLUTE:0x1aa2c>>]>
quotearg_mem :: (char *, unsigned int8) -> char * @ PC range=(<ABSOLUTE:0x1a998>, <ABSOLUTE:0x1a9c4>)
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1a998> endpc=<ABSOLUTE:0x1a9c4>>]>
	<PARAM argsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1a998> endpc=<ABSOLUTE:0x1a9c4>>]>
quotearg :: (char *) -> char * @ PC range=(<ABSOLUTE:0x1a975>, <ABSOLUTE:0x1a999>)
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1a975> endpc=<ABSOLUTE:0x1a999>>]>
quotearg_n_mem :: (int4, char *, unsigned int8) -> char * @ PC range=(<ABSOLUTE:0x1a943>, <ABSOLUTE:0x1a976>)
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1a943> endpc=<ABSOLUTE:0x1a976>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1a943> endpc=<ABSOLUTE:0x1a976>>]>
	<PARAM argsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1a943> endpc=<ABSOLUTE:0x1a976>>]>
quotearg_n :: (int4, char *) -> char * @ PC range=(<ABSOLUTE:0x1a90f>, <ABSOLUTE:0x1a944>)
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1a90f> endpc=<ABSOLUTE:0x1a944>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1a90f> endpc=<ABSOLUTE:0x1a944>>]>
quotearg_n_options :: (int4, char *, unsigned int8, <STRUCT quoting_options membertypes=5 size=56> *) -> char * @ PC range=(<ABSOLUTE:0x1a660>, <ABSOLUTE:0x1a910>)
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x54> startpc=<ABSOLUTE:0x1a660> endpc=<ABSOLUTE:0x1a910>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x1a660> endpc=<ABSOLUTE:0x1a910>>]>
	<PARAM argsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x1a660> endpc=<ABSOLUTE:0x1a910>>]>
	<PARAM options :: <STRUCT quoting_options membertypes=5 size=56> * @ [<AddressLiveRange addr=<STACK:-0x70> startpc=<ABSOLUTE:0x1a660> endpc=<ABSOLUTE:0x1a910>>]>
	<VAR e :: int4 @ [<AddressLiveRange addr=<STACK:-0x4c> startpc=<ABSOLUTE:0x1a660> endpc=<ABSOLUTE:0x1a910>>]>
	<VAR sv :: <STRUCT slotvec membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1a660> endpc=<ABSOLUTE:0x1a910>>]>
	<VAR nslots_max :: int4 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x1a660> endpc=<ABSOLUTE:0x1a910>>]>
	<VAR preallocated :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x4d> startpc=<ABSOLUTE:0x1a660> endpc=<ABSOLUTE:0x1a910>>]>
	<VAR new_nslots :: int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x1a660> endpc=<ABSOLUTE:0x1a910>>]>
	<VAR size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1a660> endpc=<ABSOLUTE:0x1a910>>]>
	<VAR val :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1a660> endpc=<ABSOLUTE:0x1a910>>]>
	<VAR flags :: int4 @ [<AddressLiveRange addr=<STACK:-0x44> startpc=<ABSOLUTE:0x1a660> endpc=<ABSOLUTE:0x1a910>>]>
	<VAR qsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1a660> endpc=<ABSOLUTE:0x1a910>>]>
quotearg_free :: () -> void @ PC range=(<ABSOLUTE:0x1a5a1>, <ABSOLUTE:0x1a661>)
	<VAR sv :: <STRUCT slotvec membertypes=2 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1a5a1> endpc=<ABSOLUTE:0x1a661>>]>
	<VAR i :: int4 @ [<AddressLiveRange addr=<STACK:-0x1c> startpc=<ABSOLUTE:0x1a5a1> endpc=<ABSOLUTE:0x1a661>>]>
quotearg_alloc_mem :: (char *, unsigned int8, unsigned int8 *, <STRUCT quoting_options membertypes=5 size=56> *) -> char * @ PC range=(<ABSOLUTE:0x1a475>, <ABSOLUTE:0x1a5a2>)
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1a475> endpc=<ABSOLUTE:0x1a5a2>>]>
	<PARAM argsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x1a475> endpc=<ABSOLUTE:0x1a5a2>>]>
	<PARAM size :: unsigned int8 * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x1a475> endpc=<ABSOLUTE:0x1a5a2>>]>
	<PARAM o :: <STRUCT quoting_options membertypes=5 size=56> * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x1a475> endpc=<ABSOLUTE:0x1a5a2>>]>
	<VAR p :: <STRUCT quoting_options membertypes=5 size=56> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1a475> endpc=<ABSOLUTE:0x1a5a2>>]>
	<VAR e :: int4 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1a475> endpc=<ABSOLUTE:0x1a5a2>>]>
	<VAR flags :: int4 @ [<AddressLiveRange addr=<STACK:-0x2c> startpc=<ABSOLUTE:0x1a475> endpc=<ABSOLUTE:0x1a5a2>>]>
	<VAR bufsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1a475> endpc=<ABSOLUTE:0x1a5a2>>]>
	<VAR buf :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1a475> endpc=<ABSOLUTE:0x1a5a2>>]>
quotearg_alloc :: (char *, unsigned int8, <STRUCT quoting_options membertypes=5 size=56> *) -> char * @ PC range=(<ABSOLUTE:0x1a43f>, <ABSOLUTE:0x1a476>)
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1a43f> endpc=<ABSOLUTE:0x1a476>>]>
	<PARAM argsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1a43f> endpc=<ABSOLUTE:0x1a476>>]>
	<PARAM o :: <STRUCT quoting_options membertypes=5 size=56> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1a43f> endpc=<ABSOLUTE:0x1a476>>]>
quotearg_buffer :: (char *, unsigned int8, char *, unsigned int8, <STRUCT quoting_options membertypes=5 size=56> *) -> unsigned int8 @ PC range=(<ABSOLUTE:0x1a397>, <ABSOLUTE:0x1a440>)
	<PARAM buffer :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1a397> endpc=<ABSOLUTE:0x1a440>>]>
	<PARAM buffersize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x1a397> endpc=<ABSOLUTE:0x1a440>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x1a397> endpc=<ABSOLUTE:0x1a440>>]>
	<PARAM argsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x1a397> endpc=<ABSOLUTE:0x1a440>>]>
	<PARAM o :: <STRUCT quoting_options membertypes=5 size=56> * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x1a397> endpc=<ABSOLUTE:0x1a440>>]>
	<VAR p :: <STRUCT quoting_options membertypes=5 size=56> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1a397> endpc=<ABSOLUTE:0x1a440>>]>
	<VAR e :: int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0x1a397> endpc=<ABSOLUTE:0x1a440>>]>
	<VAR r :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1a397> endpc=<ABSOLUTE:0x1a440>>]>
quotearg_buffer_restyled :: (char *, unsigned int8, char *, unsigned int8, unsigned int4, int4, unsigned int4 *, char *, char *) -> unsigned int8 @ PC range=(<ABSOLUTE:0x192d6>, <ABSOLUTE:0x1a398>)
	<PARAM buffer :: char * @ [<AddressLiveRange addr=<STACK:-0x98> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<PARAM buffersize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0xa0> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0xa8> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<PARAM argsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0xb0> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<PARAM quoting_style :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0xb4> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<PARAM flags :: int4 @ [<AddressLiveRange addr=<STACK:-0xb8> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<PARAM quote_these_too :: unsigned int4 * @ [<AddressLiveRange addr=<STACK:-0xc0> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<PARAM left_quote :: char * @ [<AddressLiveRange addr=<STACK:-0xc8> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<PARAM right_quote :: char * @ [<AddressLiveRange addr=<STACK:-0xd0> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR i :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x78> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x70> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR orig_buffersize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR quote_string :: char * @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR quote_string_len :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR backslash_escapes :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x88> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR unibyte_locale :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x7d> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR elide_outer_quotes :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x87> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR pending_shell_escape_end :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x86> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR encountered_single_quote :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x85> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR all_c_and_shell_quote_compat :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x84> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR c :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x83> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR esc :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x82> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR is_right_quote :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x81> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR escaping :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x80> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR c_and_shell_quote_compat :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x7f> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR m :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR printable :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x7e> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR mbstate :: <STRUCT membertypes=2 size=8> @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR w :: int4 @ [<AddressLiveRange addr=<STACK:-0x7c> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR bytes :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR j :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
	<VAR ilim :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x192d6> endpc=<ABSOLUTE:0x1a398>>]>
gettext_quote :: (char *, unsigned int4) -> char * @ PC range=(<ABSOLUTE:0x19211>, <ABSOLUTE:0x192d7>)
	<PARAM msgid :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x19211> endpc=<ABSOLUTE:0x192d7>>]>
	<PARAM s :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x2c> startpc=<ABSOLUTE:0x19211> endpc=<ABSOLUTE:0x192d7>>]>
	<VAR translation :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x19211> endpc=<ABSOLUTE:0x192d7>>]>
	<VAR locale_code :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x19211> endpc=<ABSOLUTE:0x192d7>>]>
quoting_options_from_style :: (unsigned int4) -> <STRUCT quoting_options membertypes=5 size=56> @ PC range=(<ABSOLUTE:0x1914c>, <ABSOLUTE:0x19212>)
	<PARAM style :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x6c> startpc=<ABSOLUTE:0x1914c> endpc=<ABSOLUTE:0x19212>>]>
	<VAR o :: <STRUCT quoting_options membertypes=5 size=56> @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x1914c> endpc=<ABSOLUTE:0x19212>>]>
set_custom_quoting :: (<STRUCT quoting_options membertypes=5 size=56> *, char *, char *) -> void @ PC range=(<ABSOLUTE:0x190ea>, <ABSOLUTE:0x1914d>)
	<PARAM o :: <STRUCT quoting_options membertypes=5 size=56> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x190ea> endpc=<ABSOLUTE:0x1914d>>]>
	<PARAM left_quote :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x190ea> endpc=<ABSOLUTE:0x1914d>>]>
	<PARAM right_quote :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x190ea> endpc=<ABSOLUTE:0x1914d>>]>
set_quoting_flags :: (<STRUCT quoting_options membertypes=5 size=56> *, int4) -> int4 @ PC range=(<ABSOLUTE:0x190b0>, <ABSOLUTE:0x190eb>)
	<PARAM o :: <STRUCT quoting_options membertypes=5 size=56> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x190b0> endpc=<ABSOLUTE:0x190eb>>]>
	<PARAM i :: int4 @ [<AddressLiveRange addr=<STACK:-0x2c> startpc=<ABSOLUTE:0x190b0> endpc=<ABSOLUTE:0x190eb>>]>
	<VAR r :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x190b0> endpc=<ABSOLUTE:0x190eb>>]>
set_char_quoting :: (<STRUCT quoting_options membertypes=5 size=56> *, char, int4) -> int4 @ PC range=(<ABSOLUTE:0x19020>, <ABSOLUTE:0x190b1>)
	<PARAM o :: <STRUCT quoting_options membertypes=5 size=56> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x19020> endpc=<ABSOLUTE:0x190b1>>]>
	<PARAM c :: char @ [<AddressLiveRange addr=<STACK:-0x3c> startpc=<ABSOLUTE:0x19020> endpc=<ABSOLUTE:0x190b1>>]>
	<PARAM i :: int4 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x19020> endpc=<ABSOLUTE:0x190b1>>]>
	<VAR uc :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x21> startpc=<ABSOLUTE:0x19020> endpc=<ABSOLUTE:0x190b1>>]>
	<VAR p :: unsigned int4 * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x19020> endpc=<ABSOLUTE:0x190b1>>]>
	<VAR shift :: int4 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x19020> endpc=<ABSOLUTE:0x190b1>>]>
	<VAR r :: int4 @ [<AddressLiveRange addr=<STACK:-0x1c> startpc=<ABSOLUTE:0x19020> endpc=<ABSOLUTE:0x190b1>>]>
set_quoting_style :: (<STRUCT quoting_options membertypes=5 size=56> *, unsigned int4) -> void @ PC range=(<ABSOLUTE:0x18ff5>, <ABSOLUTE:0x19021>)
	<PARAM o :: <STRUCT quoting_options membertypes=5 size=56> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x18ff5> endpc=<ABSOLUTE:0x19021>>]>
	<PARAM s :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x1c> startpc=<ABSOLUTE:0x18ff5> endpc=<ABSOLUTE:0x19021>>]>
get_quoting_style :: (<STRUCT quoting_options membertypes=5 size=56> *) -> unsigned int4 @ PC range=(<ABSOLUTE:0x18fd1>, <ABSOLUTE:0x18ff6>)
	<PARAM o :: <STRUCT quoting_options membertypes=5 size=56> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x18fd1> endpc=<ABSOLUTE:0x18ff6>>]>
clone_quoting_options :: (<STRUCT quoting_options membertypes=5 size=56> *) -> <STRUCT quoting_options membertypes=5 size=56> * @ PC range=(<ABSOLUTE:0x18f82>, <ABSOLUTE:0x18fd2>)
	<PARAM o :: <STRUCT quoting_options membertypes=5 size=56> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x18f82> endpc=<ABSOLUTE:0x18fd2>>]>
	<VAR e :: int4 @ [<AddressLiveRange addr=<STACK:-0x1c> startpc=<ABSOLUTE:0x18f82> endpc=<ABSOLUTE:0x18fd2>>]>
	<VAR p :: <STRUCT quoting_options membertypes=5 size=56> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x18f82> endpc=<ABSOLUTE:0x18fd2>>]>
gl_scratch_buffer_dupfree :: (<STRUCT scratch_buffer membertypes=3 size=1040> *, unsigned int8) -> void * @ PC range=(<ABSOLUTE:0x1aefb>, <ABSOLUTE:0x1af8a>)
	<PARAM buffer :: <STRUCT scratch_buffer membertypes=3 size=1040> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1aefb> endpc=<ABSOLUTE:0x1af8a>>]>
	<PARAM size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x1aefb> endpc=<ABSOLUTE:0x1af8a>>]>
	<VAR data :: void * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1aefb> endpc=<ABSOLUTE:0x1af8a>>]>
	<VAR copy :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1aefb> endpc=<ABSOLUTE:0x1af8a>>]>
	<VAR copy :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1aefb> endpc=<ABSOLUTE:0x1af8a>>]>
gl_scratch_buffer_grow :: (<STRUCT scratch_buffer membertypes=3 size=1040> *) -> unsigned char @ PC range=(<ABSOLUTE:0x1afe1>, <ABSOLUTE:0x1b08a>)
	<PARAM buffer :: <STRUCT scratch_buffer membertypes=3 size=1040> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1afe1> endpc=<ABSOLUTE:0x1b08a>>]>
	<VAR new_ptr :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1afe1> endpc=<ABSOLUTE:0x1b08a>>]>
	<VAR new_length :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1afe1> endpc=<ABSOLUTE:0x1b08a>>]>
scratch_buffer_free :: (<STRUCT scratch_buffer membertypes=3 size=1040> *) -> void @ PC range=(<ABSOLUTE:0x1afaf>, <ABSOLUTE:0x1afe2>)
	<PARAM buffer :: <STRUCT scratch_buffer membertypes=3 size=1040> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1afaf> endpc=<ABSOLUTE:0x1afe2>>]>
scratch_buffer_init :: (<STRUCT scratch_buffer membertypes=3 size=1040> *) -> void @ PC range=(<ABSOLUTE:0x1af89>, <ABSOLUTE:0x1afb0>)
	<PARAM buffer :: <STRUCT scratch_buffer membertypes=3 size=1040> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1af89> endpc=<ABSOLUTE:0x1afb0>>]>
gl_scratch_buffer_grow_preserve :: (<STRUCT scratch_buffer membertypes=3 size=1040> *) -> unsigned char @ PC range=(<ABSOLUTE:0x1b0af>, <ABSOLUTE:0x1b1bb>)
	<PARAM buffer :: <STRUCT scratch_buffer membertypes=3 size=1040> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1b0af> endpc=<ABSOLUTE:0x1b1bb>>]>
	<VAR new_length :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b0af> endpc=<ABSOLUTE:0x1b1bb>>]>
	<VAR new_ptr :: void * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1b0af> endpc=<ABSOLUTE:0x1b1bb>>]>
scratch_buffer_init :: (<STRUCT scratch_buffer membertypes=3 size=1040> *) -> void @ PC range=(<ABSOLUTE:0x1b089>, <ABSOLUTE:0x1b0b0>)
	<PARAM buffer :: <STRUCT scratch_buffer membertypes=3 size=1040> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b089> endpc=<ABSOLUTE:0x1b0b0>>]>
matchpathcon_init_prefix :: (char *, char *) -> int4 @ PC range=(<ABSOLUTE:0x1b3f2>, <ABSOLUTE:0x1b419>)
	<PARAM path :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b3f2> endpc=<ABSOLUTE:0x1b419>>]>
	<PARAM prefix :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1b3f2> endpc=<ABSOLUTE:0x1b419>>]>
string_to_security_class :: (char *) -> unsigned int2 @ PC range=(<ABSOLUTE:0x1b3d0>, <ABSOLUTE:0x1b3f3>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b3d0> endpc=<ABSOLUTE:0x1b3f3>>]>
security_compute_create :: (char *, char *, unsigned int2, char * *) -> int4 @ PC range=(<ABSOLUTE:0x1b3a0>, <ABSOLUTE:0x1b3d1>)
	<PARAM scon :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b3a0> endpc=<ABSOLUTE:0x1b3d1>>]>
	<PARAM tcon :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1b3a0> endpc=<ABSOLUTE:0x1b3d1>>]>
	<PARAM tclass :: unsigned int2 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0x1b3a0> endpc=<ABSOLUTE:0x1b3d1>>]>
	<PARAM newcon :: char * * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1b3a0> endpc=<ABSOLUTE:0x1b3d1>>]>
setexeccon :: (char *) -> int4 @ PC range=(<ABSOLUTE:0x1b37e>, <ABSOLUTE:0x1b3a1>)
	<PARAM con :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b37e> endpc=<ABSOLUTE:0x1b3a1>>]>
security_check_context_raw :: (char *) -> int4 @ PC range=(<ABSOLUTE:0x1b35c>, <ABSOLUTE:0x1b37f>)
	<PARAM con :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b35c> endpc=<ABSOLUTE:0x1b37f>>]>
security_check_context :: (char *) -> int4 @ PC range=(<ABSOLUTE:0x1b33a>, <ABSOLUTE:0x1b35d>)
	<PARAM con :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b33a> endpc=<ABSOLUTE:0x1b35d>>]>
fsetfilecon :: (int4, char *) -> int4 @ PC range=(<ABSOLUTE:0x1b315>, <ABSOLUTE:0x1b33b>)
	<PARAM fd :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1b315> endpc=<ABSOLUTE:0x1b33b>>]>
	<PARAM con :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1b315> endpc=<ABSOLUTE:0x1b33b>>]>
lsetfilecon :: (char *, char *) -> int4 @ PC range=(<ABSOLUTE:0x1b2ef>, <ABSOLUTE:0x1b316>)
	<PARAM file :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b2ef> endpc=<ABSOLUTE:0x1b316>>]>
	<PARAM con :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1b2ef> endpc=<ABSOLUTE:0x1b316>>]>
setfilecon :: (char *, char *) -> int4 @ PC range=(<ABSOLUTE:0x1b2c9>, <ABSOLUTE:0x1b2f0>)
	<PARAM file :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b2c9> endpc=<ABSOLUTE:0x1b2f0>>]>
	<PARAM con :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1b2c9> endpc=<ABSOLUTE:0x1b2f0>>]>
fgetfilecon :: (int4, char * *) -> int4 @ PC range=(<ABSOLUTE:0x1b2a4>, <ABSOLUTE:0x1b2ca>)
	<PARAM fd :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1b2a4> endpc=<ABSOLUTE:0x1b2ca>>]>
	<PARAM con :: char * * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1b2a4> endpc=<ABSOLUTE:0x1b2ca>>]>
lgetfilecon :: (char *, char * *) -> int4 @ PC range=(<ABSOLUTE:0x1b27e>, <ABSOLUTE:0x1b2a5>)
	<PARAM file :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b27e> endpc=<ABSOLUTE:0x1b2a5>>]>
	<PARAM con :: char * * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1b27e> endpc=<ABSOLUTE:0x1b2a5>>]>
getfilecon :: (char *, char * *) -> int4 @ PC range=(<ABSOLUTE:0x1b258>, <ABSOLUTE:0x1b27f>)
	<PARAM file :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b258> endpc=<ABSOLUTE:0x1b27f>>]>
	<PARAM con :: char * * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1b258> endpc=<ABSOLUTE:0x1b27f>>]>
matchpathcon :: (char *, unsigned int4, char * *) -> int4 @ PC range=(<ABSOLUTE:0x1b22f>, <ABSOLUTE:0x1b259>)
	<PARAM file :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b22f> endpc=<ABSOLUTE:0x1b259>>]>
	<PARAM m :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x1c> startpc=<ABSOLUTE:0x1b22f> endpc=<ABSOLUTE:0x1b259>>]>
	<PARAM con :: char * * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1b22f> endpc=<ABSOLUTE:0x1b259>>]>
setfscreatecon :: (char *) -> int4 @ PC range=(<ABSOLUTE:0x1b20d>, <ABSOLUTE:0x1b230>)
	<PARAM con :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b20d> endpc=<ABSOLUTE:0x1b230>>]>
getfscreatecon :: (char * *) -> int4 @ PC range=(<ABSOLUTE:0x1b1eb>, <ABSOLUTE:0x1b20e>)
	<PARAM con :: char * * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b1eb> endpc=<ABSOLUTE:0x1b20e>>]>
freecon :: (char *) -> void @ PC range=(<ABSOLUTE:0x1b1dc>, <ABSOLUTE:0x1b1ec>)
	<PARAM con :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b1dc> endpc=<ABSOLUTE:0x1b1ec>>]>
getcon :: (char * *) -> int4 @ PC range=(<ABSOLUTE:0x1b1ba>, <ABSOLUTE:0x1b1dd>)
	<PARAM con :: char * * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b1ba> endpc=<ABSOLUTE:0x1b1dd>>]>
setlocale_null :: (int4) -> char * @ PC range=(<ABSOLUTE:0x1b526>, <ABSOLUTE:0x1b542>)
	<PARAM category :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1b526> endpc=<ABSOLUTE:0x1b542>>]>
setlocale_null_r :: (int4, char *, unsigned int8) -> int4 @ PC range=(<ABSOLUTE:0x1b4f8>, <ABSOLUTE:0x1b527>)
	<PARAM category :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1b4f8> endpc=<ABSOLUTE:0x1b527>>]>
	<PARAM buf :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1b4f8> endpc=<ABSOLUTE:0x1b527>>]>
	<PARAM bufsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1b4f8> endpc=<ABSOLUTE:0x1b527>>]>
setlocale_null_unlocked :: (int4, char *, unsigned int8) -> int4 @ PC range=(<ABSOLUTE:0x1b440>, <ABSOLUTE:0x1b4f9>)
	<PARAM category :: int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0x1b440> endpc=<ABSOLUTE:0x1b4f9>>]>
	<PARAM buf :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1b440> endpc=<ABSOLUTE:0x1b4f9>>]>
	<PARAM bufsize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1b440> endpc=<ABSOLUTE:0x1b4f9>>]>
	<VAR result :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1b440> endpc=<ABSOLUTE:0x1b4f9>>]>
	<VAR length :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b440> endpc=<ABSOLUTE:0x1b4f9>>]>
setlocale_null_androidfix :: (int4) -> char * @ PC range=(<ABSOLUTE:0x1b418>, <ABSOLUTE:0x1b441>)
	<PARAM category :: int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0x1b418> endpc=<ABSOLUTE:0x1b441>>]>
	<VAR result :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b418> endpc=<ABSOLUTE:0x1b441>>]>
stat_time_normalize :: (int4, <STRUCT stat membertypes=15 size=144> *) -> int4 @ PC range=(<ABSOLUTE:0x1b60a>, <ABSOLUTE:0x1b61f>)
	<PARAM result :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1b60a> endpc=<ABSOLUTE:0x1b61f>>]>
	<PARAM st :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1b60a> endpc=<ABSOLUTE:0x1b61f>>]>
get_stat_birthtime :: (<STRUCT stat membertypes=15 size=144> *) -> <STRUCT timespec membertypes=2 size=16> @ PC range=(<ABSOLUTE:0x1b5e4>, <ABSOLUTE:0x1b60b>)
	<PARAM st :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1b5e4> endpc=<ABSOLUTE:0x1b60b>>]>
	<VAR t :: <STRUCT timespec membertypes=2 size=16> @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1b5e4> endpc=<ABSOLUTE:0x1b60b>>]>
get_stat_mtime :: (<STRUCT stat membertypes=15 size=144> *) -> <STRUCT timespec membertypes=2 size=16> @ PC range=(<ABSOLUTE:0x1b5ca>, <ABSOLUTE:0x1b5e5>)
	<PARAM st :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b5ca> endpc=<ABSOLUTE:0x1b5e5>>]>
get_stat_ctime :: (<STRUCT stat membertypes=15 size=144> *) -> <STRUCT timespec membertypes=2 size=16> @ PC range=(<ABSOLUTE:0x1b5b0>, <ABSOLUTE:0x1b5cb>)
	<PARAM st :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b5b0> endpc=<ABSOLUTE:0x1b5cb>>]>
get_stat_atime :: (<STRUCT stat membertypes=15 size=144> *) -> <STRUCT timespec membertypes=2 size=16> @ PC range=(<ABSOLUTE:0x1b596>, <ABSOLUTE:0x1b5b1>)
	<PARAM st :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b596> endpc=<ABSOLUTE:0x1b5b1>>]>
get_stat_birthtime_ns :: (<STRUCT stat membertypes=15 size=144> *) -> int8 @ PC range=(<ABSOLUTE:0x1b583>, <ABSOLUTE:0x1b597>)
	<PARAM st :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b583> endpc=<ABSOLUTE:0x1b597>>]>
get_stat_mtime_ns :: (<STRUCT stat membertypes=15 size=144> *) -> int8 @ PC range=(<ABSOLUTE:0x1b56d>, <ABSOLUTE:0x1b584>)
	<PARAM st :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b56d> endpc=<ABSOLUTE:0x1b584>>]>
get_stat_ctime_ns :: (<STRUCT stat membertypes=15 size=144> *) -> int8 @ PC range=(<ABSOLUTE:0x1b557>, <ABSOLUTE:0x1b56e>)
	<PARAM st :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b557> endpc=<ABSOLUTE:0x1b56e>>]>
get_stat_atime_ns :: (<STRUCT stat membertypes=15 size=144> *) -> int8 @ PC range=(<ABSOLUTE:0x1b541>, <ABSOLUTE:0x1b558>)
	<PARAM st :: <STRUCT stat membertypes=15 size=144> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b541> endpc=<ABSOLUTE:0x1b558>>]>
mktime_z :: (<STRUCT tm_zone membertypes=3 size=16> *, <STRUCT tm membertypes=11 size=56> *) -> int8 @ PC range=(<ABSOLUTE:0x1bb8e>, <ABSOLUTE:0x1bcf5>)
	<PARAM tz :: <STRUCT tm_zone membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x88> startpc=<ABSOLUTE:0x1bb8e> endpc=<ABSOLUTE:0x1bcf5>>]>
	<PARAM tm :: <STRUCT tm membertypes=11 size=56> * @ [<AddressLiveRange addr=<STACK:-0x90> startpc=<ABSOLUTE:0x1bb8e> endpc=<ABSOLUTE:0x1bcf5>>]>
	<VAR old_tz :: <STRUCT tm_zone membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x70> startpc=<ABSOLUTE:0x1bb8e> endpc=<ABSOLUTE:0x1bcf5>>]>
	<VAR tm_1 :: <STRUCT tm membertypes=11 size=56> @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x1bb8e> endpc=<ABSOLUTE:0x1bcf5>>]>
	<VAR t :: int8 @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x1bb8e> endpc=<ABSOLUTE:0x1bcf5>>]>
	<VAR ok :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x71> startpc=<ABSOLUTE:0x1bb8e> endpc=<ABSOLUTE:0x1bcf5>>]>
localtime_rz :: (<STRUCT tm_zone membertypes=3 size=16> *, int8 *, <STRUCT tm membertypes=11 size=56> *) -> <STRUCT tm membertypes=11 size=56> * @ PC range=(<ABSOLUTE:0x1bade>, <ABSOLUTE:0x1bb8f>)
	<PARAM tz :: <STRUCT tm_zone membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1bade> endpc=<ABSOLUTE:0x1bb8f>>]>
	<PARAM t :: int8 * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1bade> endpc=<ABSOLUTE:0x1bb8f>>]>
	<PARAM tm :: <STRUCT tm membertypes=11 size=56> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1bade> endpc=<ABSOLUTE:0x1bb8f>>]>
	<VAR old_tz :: <STRUCT tm_zone membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1bade> endpc=<ABSOLUTE:0x1bb8f>>]>
	<VAR abbr_saved :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x19> startpc=<ABSOLUTE:0x1bade> endpc=<ABSOLUTE:0x1bb8f>>]>
revert_tz :: (<STRUCT tm_zone membertypes=3 size=16> *) -> unsigned char @ PC range=(<ABSOLUTE:0x1ba72>, <ABSOLUTE:0x1badf>)
	<PARAM tz :: <STRUCT tm_zone membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1ba72> endpc=<ABSOLUTE:0x1badf>>]>
	<VAR saved_errno :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1ba72> endpc=<ABSOLUTE:0x1badf>>]>
	<VAR ok :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x15> startpc=<ABSOLUTE:0x1ba72> endpc=<ABSOLUTE:0x1badf>>]>
set_tz :: (<STRUCT tm_zone membertypes=3 size=16> *) -> <STRUCT tm_zone membertypes=3 size=16> * @ PC range=(<ABSOLUTE:0x1b9a5>, <ABSOLUTE:0x1ba73>)
	<PARAM tz :: <STRUCT tm_zone membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1b9a5> endpc=<ABSOLUTE:0x1ba73>>]>
	<VAR env_tz :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1b9a5> endpc=<ABSOLUTE:0x1ba73>>]>
	<VAR old_tz :: <STRUCT tm_zone membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b9a5> endpc=<ABSOLUTE:0x1ba73>>]>
	<VAR saved_errno :: int4 @ [<AddressLiveRange addr=<STACK:-0x24> startpc=<ABSOLUTE:0x1b9a5> endpc=<ABSOLUTE:0x1ba73>>]>
change_env :: (<STRUCT tm_zone membertypes=3 size=16> *) -> unsigned char @ PC range=(<ABSOLUTE:0x1b95b>, <ABSOLUTE:0x1b9a6>)
	<PARAM tz :: <STRUCT tm_zone membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b95b> endpc=<ABSOLUTE:0x1b9a6>>]>
setenv_TZ :: (char *) -> int4 @ PC range=(<ABSOLUTE:0x1b916>, <ABSOLUTE:0x1b95c>)
	<PARAM tz :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b916> endpc=<ABSOLUTE:0x1b95c>>]>
getenv_TZ :: () -> char * @ PC range=(<ABSOLUTE:0x1b8fd>, <ABSOLUTE:0x1b917>)
tzfree :: (<STRUCT tm_zone membertypes=3 size=16> *) -> void @ PC range=(<ABSOLUTE:0x1b8b7>, <ABSOLUTE:0x1b8fe>)
	<PARAM tz :: <STRUCT tm_zone membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1b8b7> endpc=<ABSOLUTE:0x1b8fe>>]>
	<VAR next :: <STRUCT tm_zone membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b8b7> endpc=<ABSOLUTE:0x1b8fe>>]>
save_abbr :: (<STRUCT tm_zone membertypes=3 size=16> *, <STRUCT tm membertypes=11 size=56> *) -> unsigned char @ PC range=(<ABSOLUTE:0x1b713>, <ABSOLUTE:0x1b8b8>)
	<PARAM tz :: <STRUCT tm_zone membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1b713> endpc=<ABSOLUTE:0x1b8b8>>]>
	<PARAM tm :: <STRUCT tm membertypes=11 size=56> * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x1b713> endpc=<ABSOLUTE:0x1b8b8>>]>
	<VAR zone :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1b713> endpc=<ABSOLUTE:0x1b8b8>>]>
	<VAR zone_copy :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1b713> endpc=<ABSOLUTE:0x1b8b8>>]>
	<VAR zone_size :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b713> endpc=<ABSOLUTE:0x1b8b8>>]>
tzalloc :: (char *) -> <STRUCT tm_zone membertypes=3 size=16> * @ PC range=(<ABSOLUTE:0x1b65e>, <ABSOLUTE:0x1b714>)
	<PARAM name :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1b65e> endpc=<ABSOLUTE:0x1b714>>]>
	<VAR name_size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1b65e> endpc=<ABSOLUTE:0x1b714>>]>
	<VAR abbr_size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1b65e> endpc=<ABSOLUTE:0x1b714>>]>
	<VAR tz :: <STRUCT tm_zone membertypes=3 size=16> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b65e> endpc=<ABSOLUTE:0x1b714>>]>
extend_abbrs :: (char *, char *, unsigned int8) -> void @ PC range=(<ABSOLUTE:0x1b61e>, <ABSOLUTE:0x1b65f>)
	<PARAM abbrs :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1b61e> endpc=<ABSOLUTE:0x1b65f>>]>
	<PARAM abbr :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1b61e> endpc=<ABSOLUTE:0x1b65f>>]>
	<PARAM abbr_size :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1b61e> endpc=<ABSOLUTE:0x1b65f>>]>
rpl_timegm :: (<STRUCT tm membertypes=11 size=56> *) -> int8 @ PC range=(<ABSOLUTE:0x1bcf4>, <ABSOLUTE:0x1bd2f>)
	<PARAM tmp :: <STRUCT tm membertypes=11 size=56> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1bcf4> endpc=<ABSOLUTE:0x1bd2f>>]>
	<VAR gmtime_offset :: int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x2c5c0> startpc=<ABSOLUTE:0x1bcf4> endpc=<ABSOLUTE:0x1bd2f>>]>
timespectod :: (<STRUCT timespec membertypes=2 size=16>) -> float8 @ PC range=(<ABSOLUTE:0x1be20>, <ABSOLUTE:0x1be70>)
	<PARAM a :: <STRUCT timespec membertypes=2 size=16> @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1be20> endpc=<ABSOLUTE:0x1be70>>]>
timespec_sign :: (<STRUCT timespec membertypes=2 size=16>) -> int4 @ PC range=(<ABSOLUTE:0x1bdce>, <ABSOLUTE:0x1be21>)
	<PARAM a :: <STRUCT timespec membertypes=2 size=16> @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1bdce> endpc=<ABSOLUTE:0x1be21>>]>
timespec_cmp :: (<STRUCT timespec membertypes=2 size=16>, <STRUCT timespec membertypes=2 size=16>) -> int4 @ PC range=(<ABSOLUTE:0x1bd58>, <ABSOLUTE:0x1bdcf>)
	<PARAM a :: <STRUCT timespec membertypes=2 size=16> @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1bd58> endpc=<ABSOLUTE:0x1bdcf>>]>
	<PARAM b :: <STRUCT timespec membertypes=2 size=16> @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1bd58> endpc=<ABSOLUTE:0x1bdcf>>]>
make_timespec :: (int8, int8) -> <STRUCT timespec membertypes=2 size=16> @ PC range=(<ABSOLUTE:0x1bd2e>, <ABSOLUTE:0x1bd59>)
	<PARAM s :: int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1bd2e> endpc=<ABSOLUTE:0x1bd59>>]>
	<PARAM ns :: int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1bd2e> endpc=<ABSOLUTE:0x1bd59>>]>
	<VAR r :: <STRUCT timespec membertypes=2 size=16> @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1bd2e> endpc=<ABSOLUTE:0x1bd59>>]>
emit_bug_reporting_address :: () -> void @ PC range=(<ABSOLUTE:0x1c6be>, <ABSOLUTE:0x1c763>)
version_etc :: (<STRUCT _IO_FILE membertypes=29 size=216> *, char *, char *, char *[...]) -> void @ PC range=(<ABSOLUTE:0x1c5da>, <ABSOLUTE:0x1c6bf>)
	<PARAM stream :: <STRUCT _IO_FILE membertypes=29 size=216> * @ [<AddressLiveRange addr=<STACK:-0xe8> startpc=<ABSOLUTE:0x1c5da> endpc=<ABSOLUTE:0x1c6bf>>]>
	<PARAM command_name :: char * @ [<AddressLiveRange addr=<STACK:-0xf0> startpc=<ABSOLUTE:0x1c5da> endpc=<ABSOLUTE:0x1c6bf>>]>
	<PARAM package :: char * @ [<AddressLiveRange addr=<STACK:-0xf8> startpc=<ABSOLUTE:0x1c5da> endpc=<ABSOLUTE:0x1c6bf>>]>
	<PARAM version :: char * @ [<AddressLiveRange addr=<STACK:-0x100> startpc=<ABSOLUTE:0x1c5da> endpc=<ABSOLUTE:0x1c6bf>>]>
	<VAR authors :: <ARRAY subtype=<STRUCT __va_list_tag membertypes=4 size=24> dimensions=(1,) size=24> @ [<AddressLiveRange addr=<STACK:-0xe0> startpc=<ABSOLUTE:0x1c5da> endpc=<ABSOLUTE:0x1c6bf>>]>
version_etc_va :: (<STRUCT _IO_FILE membertypes=29 size=216> *, char *, char *, char *, <STRUCT __va_list_tag membertypes=4 size=24> *) -> void @ PC range=(<ABSOLUTE:0x1c4d4>, <ABSOLUTE:0x1c5db>)
	<PARAM stream :: <STRUCT _IO_FILE membertypes=29 size=216> * @ [<AddressLiveRange addr=<STACK:-0x88> startpc=<ABSOLUTE:0x1c4d4> endpc=<ABSOLUTE:0x1c5db>>]>
	<PARAM command_name :: char * @ [<AddressLiveRange addr=<STACK:-0x90> startpc=<ABSOLUTE:0x1c4d4> endpc=<ABSOLUTE:0x1c5db>>]>
	<PARAM package :: char * @ [<AddressLiveRange addr=<STACK:-0x98> startpc=<ABSOLUTE:0x1c4d4> endpc=<ABSOLUTE:0x1c5db>>]>
	<PARAM version :: char * @ [<AddressLiveRange addr=<STACK:-0xa0> startpc=<ABSOLUTE:0x1c4d4> endpc=<ABSOLUTE:0x1c5db>>]>
	<PARAM authors :: <STRUCT __va_list_tag membertypes=4 size=24> * @ [<AddressLiveRange addr=<STACK:-0xa8> startpc=<ABSOLUTE:0x1c4d4> endpc=<ABSOLUTE:0x1c5db>>]>
	<VAR n_authors :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x78> startpc=<ABSOLUTE:0x1c4d4> endpc=<ABSOLUTE:0x1c5db>>]>
	<VAR authtab :: <ARRAY subtype=char * dimensions=(10,) size=80> @ [<AddressLiveRange addr=<STACK:-0x70> startpc=<ABSOLUTE:0x1c4d4> endpc=<ABSOLUTE:0x1c5db>>]>
version_etc_ar :: (<STRUCT _IO_FILE membertypes=29 size=216> *, char *, char *, char *, char * *) -> void @ PC range=(<ABSOLUTE:0x1c461>, <ABSOLUTE:0x1c4d5>)
	<PARAM stream :: <STRUCT _IO_FILE membertypes=29 size=216> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1c461> endpc=<ABSOLUTE:0x1c4d5>>]>
	<PARAM command_name :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1c461> endpc=<ABSOLUTE:0x1c4d5>>]>
	<PARAM package :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1c461> endpc=<ABSOLUTE:0x1c4d5>>]>
	<PARAM version :: char * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x1c461> endpc=<ABSOLUTE:0x1c4d5>>]>
	<PARAM authors :: char * * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x1c461> endpc=<ABSOLUTE:0x1c4d5>>]>
	<VAR n_authors :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1c461> endpc=<ABSOLUTE:0x1c4d5>>]>
version_etc_arn :: (<STRUCT _IO_FILE membertypes=29 size=216> *, char *, char *, char *, char * *, unsigned int8) -> void @ PC range=(<ABSOLUTE:0x1be6f>, <ABSOLUTE:0x1c462>)
	<PARAM stream :: <STRUCT _IO_FILE membertypes=29 size=216> * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x1be6f> endpc=<ABSOLUTE:0x1c462>>]>
	<PARAM command_name :: char * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x1be6f> endpc=<ABSOLUTE:0x1c462>>]>
	<PARAM package :: char * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x1be6f> endpc=<ABSOLUTE:0x1c462>>]>
	<PARAM version :: char * @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x1be6f> endpc=<ABSOLUTE:0x1c462>>]>
	<PARAM authors :: char * * @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x1be6f> endpc=<ABSOLUTE:0x1c462>>]>
	<PARAM n_authors :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x70> startpc=<ABSOLUTE:0x1be6f> endpc=<ABSOLUTE:0x1c462>>]>
xstrdup :: (char *) -> char * @ PC range=(<ABSOLUTE:0x1cdbc>, <ABSOLUTE:0x1cdee>)
	<PARAM string :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1cdbc> endpc=<ABSOLUTE:0x1cdee>>]>
ximemdup0 :: (void *, int8) -> char * @ PC range=(<ABSOLUTE:0x1cd6d>, <ABSOLUTE:0x1cdbd>)
	<PARAM p :: void * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1cd6d> endpc=<ABSOLUTE:0x1cdbd>>]>
	<PARAM s :: int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1cd6d> endpc=<ABSOLUTE:0x1cdbd>>]>
	<VAR result :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1cd6d> endpc=<ABSOLUTE:0x1cdbd>>]>
ximemdup :: (void *, int8) -> void * @ PC range=(<ABSOLUTE:0x1cd2d>, <ABSOLUTE:0x1cd6e>)
	<PARAM p :: void * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1cd2d> endpc=<ABSOLUTE:0x1cd6e>>]>
	<PARAM s :: int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1cd2d> endpc=<ABSOLUTE:0x1cd6e>>]>
xmemdup :: (void *, unsigned int8) -> void * @ PC range=(<ABSOLUTE:0x1ccf5>, <ABSOLUTE:0x1cd2e>)
	<PARAM p :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1ccf5> endpc=<ABSOLUTE:0x1cd2e>>]>
	<PARAM s :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1ccf5> endpc=<ABSOLUTE:0x1cd2e>>]>
xicalloc :: (int8, int8) -> void * @ PC range=(<ABSOLUTE:0x1ccc4>, <ABSOLUTE:0x1ccf6>)
	<PARAM n :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1ccc4> endpc=<ABSOLUTE:0x1ccf6>>]>
	<PARAM s :: int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1ccc4> endpc=<ABSOLUTE:0x1ccf6>>]>
xcalloc :: (unsigned int8, unsigned int8) -> void * @ PC range=(<ABSOLUTE:0x1cc93>, <ABSOLUTE:0x1ccc5>)
	<PARAM n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1cc93> endpc=<ABSOLUTE:0x1ccc5>>]>
	<PARAM s :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1cc93> endpc=<ABSOLUTE:0x1ccc5>>]>
xizalloc :: (int8) -> void * @ PC range=(<ABSOLUTE:0x1cc70>, <ABSOLUTE:0x1cc94>)
	<PARAM s :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1cc70> endpc=<ABSOLUTE:0x1cc94>>]>
xzalloc :: (unsigned int8) -> void * @ PC range=(<ABSOLUTE:0x1cc4d>, <ABSOLUTE:0x1cc71>)
	<PARAM s :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1cc4d> endpc=<ABSOLUTE:0x1cc71>>]>
xpalloc :: (void *, int8 *, int8, int8, int8) -> void * @ PC range=(<ABSOLUTE:0x1ca91>, <ABSOLUTE:0x1cc4e>)
	<PARAM pa :: void * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x1ca91> endpc=<ABSOLUTE:0x1cc4e>>]>
	<PARAM pn :: int8 * @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x1ca91> endpc=<ABSOLUTE:0x1cc4e>>]>
	<PARAM n_incr_min :: int8 @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x1ca91> endpc=<ABSOLUTE:0x1cc4e>>]>
	<PARAM n_max :: int8 @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x1ca91> endpc=<ABSOLUTE:0x1cc4e>>]>
	<PARAM s :: int8 @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x1ca91> endpc=<ABSOLUTE:0x1cc4e>>]>
	<VAR n0 :: int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1ca91> endpc=<ABSOLUTE:0x1cc4e>>]>
	<VAR n :: int8 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1ca91> endpc=<ABSOLUTE:0x1cc4e>>]>
	<VAR nbytes :: int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1ca91> endpc=<ABSOLUTE:0x1cc4e>>]>
	<VAR adjusted_nbytes :: int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1ca91> endpc=<ABSOLUTE:0x1cc4e>>]>
x2nrealloc :: (void *, unsigned int8 *, unsigned int8) -> void * @ PC range=(<ABSOLUTE:0x1c9b2>, <ABSOLUTE:0x1ca92>)
	<PARAM p :: void * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1c9b2> endpc=<ABSOLUTE:0x1ca92>>]>
	<PARAM pn :: unsigned int8 * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1c9b2> endpc=<ABSOLUTE:0x1ca92>>]>
	<PARAM s :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1c9b2> endpc=<ABSOLUTE:0x1ca92>>]>
	<VAR n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1c9b2> endpc=<ABSOLUTE:0x1ca92>>]>
x2realloc :: (void *, unsigned int8 *) -> void * @ PC range=(<ABSOLUTE:0x1c984>, <ABSOLUTE:0x1c9b3>)
	<PARAM p :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1c984> endpc=<ABSOLUTE:0x1c9b3>>]>
	<PARAM ps :: unsigned int8 * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1c984> endpc=<ABSOLUTE:0x1c9b3>>]>
xinmalloc :: (int8, int8) -> void * @ PC range=(<ABSOLUTE:0x1c959>, <ABSOLUTE:0x1c985>)
	<PARAM n :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1c959> endpc=<ABSOLUTE:0x1c985>>]>
	<PARAM s :: int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1c959> endpc=<ABSOLUTE:0x1c985>>]>
xnmalloc :: (unsigned int8, unsigned int8) -> void * @ PC range=(<ABSOLUTE:0x1c92e>, <ABSOLUTE:0x1c95a>)
	<PARAM n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1c92e> endpc=<ABSOLUTE:0x1c95a>>]>
	<PARAM s :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1c92e> endpc=<ABSOLUTE:0x1c95a>>]>
xireallocarray :: (void *, int8, int8) -> void * @ PC range=(<ABSOLUTE:0x1c8f5>, <ABSOLUTE:0x1c92f>)
	<PARAM p :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1c8f5> endpc=<ABSOLUTE:0x1c92f>>]>
	<PARAM n :: int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1c8f5> endpc=<ABSOLUTE:0x1c92f>>]>
	<PARAM s :: int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1c8f5> endpc=<ABSOLUTE:0x1c92f>>]>
xreallocarray :: (void *, unsigned int8, unsigned int8) -> void * @ PC range=(<ABSOLUTE:0x1c89b>, <ABSOLUTE:0x1c8f6>)
	<PARAM p :: void * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1c89b> endpc=<ABSOLUTE:0x1c8f6>>]>
	<PARAM n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1c89b> endpc=<ABSOLUTE:0x1c8f6>>]>
	<PARAM s :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1c89b> endpc=<ABSOLUTE:0x1c8f6>>]>
	<VAR r :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1c89b> endpc=<ABSOLUTE:0x1c8f6>>]>
xirealloc :: (void *, int8) -> void * @ PC range=(<ABSOLUTE:0x1c86a>, <ABSOLUTE:0x1c89c>)
	<PARAM p :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1c86a> endpc=<ABSOLUTE:0x1c89c>>]>
	<PARAM s :: int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1c86a> endpc=<ABSOLUTE:0x1c89c>>]>
xrealloc :: (void *, unsigned int8) -> void * @ PC range=(<ABSOLUTE:0x1c81f>, <ABSOLUTE:0x1c86b>)
	<PARAM p :: void * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1c81f> endpc=<ABSOLUTE:0x1c86b>>]>
	<PARAM s :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1c81f> endpc=<ABSOLUTE:0x1c86b>>]>
	<VAR r :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1c81f> endpc=<ABSOLUTE:0x1c86b>>]>
xcharalloc :: (unsigned int8) -> char * @ PC range=(<ABSOLUTE:0x1c801>, <ABSOLUTE:0x1c820>)
	<PARAM n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1c801> endpc=<ABSOLUTE:0x1c820>>]>
ximalloc :: (int8) -> void * @ PC range=(<ABSOLUTE:0x1c7db>, <ABSOLUTE:0x1c802>)
	<PARAM s :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1c7db> endpc=<ABSOLUTE:0x1c802>>]>
xmalloc :: (unsigned int8) -> void * @ PC range=(<ABSOLUTE:0x1c7b5>, <ABSOLUTE:0x1c7dc>)
	<PARAM s :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1c7b5> endpc=<ABSOLUTE:0x1c7dc>>]>
nonnull :: (void *) -> void * @ PC range=(<ABSOLUTE:0x1c793>, <ABSOLUTE:0x1c7b6>)
	<PARAM p :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1c793> endpc=<ABSOLUTE:0x1c7b6>>]>
xnrealloc :: (void *, unsigned int8, unsigned int8) -> void * @ PC range=(<ABSOLUTE:0x1c762>, <ABSOLUTE:0x1c794>)
	<PARAM p :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1c762> endpc=<ABSOLUTE:0x1c794>>]>
	<PARAM n :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1c762> endpc=<ABSOLUTE:0x1c794>>]>
	<PARAM s :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1c762> endpc=<ABSOLUTE:0x1c794>>]>
xalloc_die :: () -> void @ PC range=(<ABSOLUTE:0x1cded>, <ABSOLUTE:0x1ce2e>)
xdectoumax :: (char *, unsigned int8, unsigned int8, char *, char *, int4) -> unsigned int8 @ PC range=(<ABSOLUTE:0x1cf67>, <ABSOLUTE:0x1cfc1>)
	<PARAM n_str :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1cf67> endpc=<ABSOLUTE:0x1cfc1>>]>
	<PARAM min :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1cf67> endpc=<ABSOLUTE:0x1cfc1>>]>
	<PARAM max :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1cf67> endpc=<ABSOLUTE:0x1cfc1>>]>
	<PARAM suffixes :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1cf67> endpc=<ABSOLUTE:0x1cfc1>>]>
	<PARAM err :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1cf67> endpc=<ABSOLUTE:0x1cfc1>>]>
	<PARAM err_exit :: int4 @ [<AddressLiveRange addr=<STACK:-0x3c> startpc=<ABSOLUTE:0x1cf67> endpc=<ABSOLUTE:0x1cfc1>>]>
xnumtoumax :: (char *, int4, unsigned int8, unsigned int8, char *, char *, int4) -> unsigned int8 @ PC range=(<ABSOLUTE:0x1ce2d>, <ABSOLUTE:0x1cf68>)
	<PARAM n_str :: char * @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x1ce2d> endpc=<ABSOLUTE:0x1cf68>>]>
	<PARAM base :: int4 @ [<AddressLiveRange addr=<STACK:-0x4c> startpc=<ABSOLUTE:0x1ce2d> endpc=<ABSOLUTE:0x1cf68>>]>
	<PARAM min :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x1ce2d> endpc=<ABSOLUTE:0x1cf68>>]>
	<PARAM max :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x1ce2d> endpc=<ABSOLUTE:0x1cf68>>]>
	<PARAM suffixes :: char * @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x1ce2d> endpc=<ABSOLUTE:0x1cf68>>]>
	<PARAM err :: char * @ [<AddressLiveRange addr=<STACK:-0x70> startpc=<ABSOLUTE:0x1ce2d> endpc=<ABSOLUTE:0x1cf68>>]>
	<PARAM err_exit :: int4 @ [<AddressLiveRange addr=<STACK:0x0> startpc=<ABSOLUTE:0x1ce2d> endpc=<ABSOLUTE:0x1cf68>>]>
	<VAR s_err :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x34> startpc=<ABSOLUTE:0x1ce2d> endpc=<ABSOLUTE:0x1cf68>>]>
	<VAR tnum :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1ce2d> endpc=<ABSOLUTE:0x1cf68>>]>
xgethostname :: () -> char * @ PC range=(<ABSOLUTE:0x1cfc0>, <ABSOLUTE:0x1d13d>)
	<VAR buf :: <ARRAY subtype=char dimensions=(100,) size=100> @ [<AddressLiveRange addr=<STACK:-0x80> startpc=<ABSOLUTE:0x1cfc0> endpc=<ABSOLUTE:0x1d13d>>]>
	<VAR size :: int8 @ [<AddressLiveRange addr=<STACK:-0xa8> startpc=<ABSOLUTE:0x1cfc0> endpc=<ABSOLUTE:0x1d13d>>]>
	<VAR name :: char * @ [<AddressLiveRange addr=<STACK:-0xa0> startpc=<ABSOLUTE:0x1cfc0> endpc=<ABSOLUTE:0x1d13d>>]>
	<VAR alloc :: char * @ [<AddressLiveRange addr=<STACK:-0x98> startpc=<ABSOLUTE:0x1cfc0> endpc=<ABSOLUTE:0x1d13d>>]>
	<VAR size_1 :: int8 @ [<AddressLiveRange addr=<STACK:-0x90> startpc=<ABSOLUTE:0x1cfc0> endpc=<ABSOLUTE:0x1d13d>>]>
	<VAR actual_size :: int8 @ [<AddressLiveRange addr=<STACK:-0x88> startpc=<ABSOLUTE:0x1cfc0> endpc=<ABSOLUTE:0x1d13d>>]>
xstrtol_fatal :: (unsigned int4, int4, char, <STRUCT option membertypes=4 size=32> *, char *) -> void @ PC range=(<ABSOLUTE:0x1d25a>, <ABSOLUTE:0x1d2a5>)
	<PARAM err :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1d25a> endpc=<ABSOLUTE:0x1d2a5>>]>
	<PARAM opt_idx :: int4 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1d25a> endpc=<ABSOLUTE:0x1d2a5>>]>
	<PARAM c :: char @ [<AddressLiveRange addr=<STACK:-0x1c> startpc=<ABSOLUTE:0x1d25a> endpc=<ABSOLUTE:0x1d2a5>>]>
	<PARAM long_options :: <STRUCT option membertypes=4 size=32> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1d25a> endpc=<ABSOLUTE:0x1d2a5>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1d25a> endpc=<ABSOLUTE:0x1d2a5>>]>
xstrtol_error :: (unsigned int4, int4, char, <STRUCT option membertypes=4 size=32> *, char *, int4) -> void @ PC range=(<ABSOLUTE:0x1d13c>, <ABSOLUTE:0x1d25b>)
	<PARAM err :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x44> startpc=<ABSOLUTE:0x1d13c> endpc=<ABSOLUTE:0x1d25b>>]>
	<PARAM opt_idx :: int4 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x1d13c> endpc=<ABSOLUTE:0x1d25b>>]>
	<PARAM c :: char @ [<AddressLiveRange addr=<STACK:-0x4c> startpc=<ABSOLUTE:0x1d13c> endpc=<ABSOLUTE:0x1d25b>>]>
	<PARAM long_options :: <STRUCT option membertypes=4 size=32> * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x1d13c> endpc=<ABSOLUTE:0x1d25b>>]>
	<PARAM arg :: char * @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x1d13c> endpc=<ABSOLUTE:0x1d25b>>]>
	<PARAM exit_status :: int4 @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x1d13c> endpc=<ABSOLUTE:0x1d25b>>]>
	<VAR hyphens :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1d13c> endpc=<ABSOLUTE:0x1d25b>>]>
	<VAR msgid :: char * @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1d13c> endpc=<ABSOLUTE:0x1d25b>>]>
	<VAR option :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1d13c> endpc=<ABSOLUTE:0x1d25b>>]>
	<VAR option_buffer :: <ARRAY subtype=char dimensions=(2,) size=2> @ [<AddressLiveRange addr=<STACK:-0x1a> startpc=<ABSOLUTE:0x1d13c> endpc=<ABSOLUTE:0x1d25b>>]>
xstrtoumax :: (char *, char * *, int4, unsigned int8 *, char *) -> unsigned int4 @ PC range=(<ABSOLUTE:0x1d37b>, <ABSOLUTE:0x1d7da>)
	<PARAM s :: char * @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x1d37b> endpc=<ABSOLUTE:0x1d7da>>]>
	<PARAM ptr :: char * * @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x1d37b> endpc=<ABSOLUTE:0x1d7da>>]>
	<PARAM strtol_base :: int4 @ [<AddressLiveRange addr=<STACK:-0x64> startpc=<ABSOLUTE:0x1d37b> endpc=<ABSOLUTE:0x1d7da>>]>
	<PARAM val :: unsigned int8 * @ [<AddressLiveRange addr=<STACK:-0x70> startpc=<ABSOLUTE:0x1d37b> endpc=<ABSOLUTE:0x1d7da>>]>
	<PARAM valid_suffixes :: char * @ [<AddressLiveRange addr=<STACK:-0x78> startpc=<ABSOLUTE:0x1d37b> endpc=<ABSOLUTE:0x1d7da>>]>
	<VAR t_ptr :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1d37b> endpc=<ABSOLUTE:0x1d7da>>]>
	<VAR p :: char * * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1d37b> endpc=<ABSOLUTE:0x1d7da>>]>
	<VAR tmp :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1d37b> endpc=<ABSOLUTE:0x1d7da>>]>
	<VAR err :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x1d37b> endpc=<ABSOLUTE:0x1d7da>>]>
	<VAR __PRETTY_FUNCTION__ :: <ARRAY subtype=char dimensions=(11,) size=11> @ [<AddressLiveRange addr=<ABSOLUTE:0x23f88> startpc=<ABSOLUTE:0x1d37b> endpc=<ABSOLUTE:0x1d7da>>]>
	<VAR q :: char * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1d37b> endpc=<ABSOLUTE:0x1d7da>>]>
	<VAR ch :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x49> startpc=<ABSOLUTE:0x1d37b> endpc=<ABSOLUTE:0x1d7da>>]>
	<VAR base :: int4 @ [<AddressLiveRange addr=<STACK:-0x44> startpc=<ABSOLUTE:0x1d37b> endpc=<ABSOLUTE:0x1d7da>>]>
	<VAR suffixes :: int4 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x1d37b> endpc=<ABSOLUTE:0x1d7da>>]>
	<VAR overflow :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x3c> startpc=<ABSOLUTE:0x1d37b> endpc=<ABSOLUTE:0x1d7da>>]>
bkm_scale_by_power :: (unsigned int8 *, int4, int4) -> unsigned int4 @ PC range=(<ABSOLUTE:0x1d336>, <ABSOLUTE:0x1d37c>)
	<PARAM x :: unsigned int8 * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1d336> endpc=<ABSOLUTE:0x1d37c>>]>
	<PARAM base :: int4 @ [<AddressLiveRange addr=<STACK:-0x2c> startpc=<ABSOLUTE:0x1d336> endpc=<ABSOLUTE:0x1d37c>>]>
	<PARAM power :: int4 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1d336> endpc=<ABSOLUTE:0x1d37c>>]>
	<VAR err :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1d336> endpc=<ABSOLUTE:0x1d37c>>]>
bkm_scale :: (unsigned int8 *, int4) -> unsigned int4 @ PC range=(<ABSOLUTE:0x1d2a4>, <ABSOLUTE:0x1d337>)
	<PARAM x :: unsigned int8 * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1d2a4> endpc=<ABSOLUTE:0x1d337>>]>
	<PARAM scale_factor :: int4 @ [<AddressLiveRange addr=<STACK:-0x2c> startpc=<ABSOLUTE:0x1d2a4> endpc=<ABSOLUTE:0x1d337>>]>
	<VAR scaled :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1d2a4> endpc=<ABSOLUTE:0x1d337>>]>
rpl_mktime :: (<STRUCT tm membertypes=11 size=56> *) -> int8 @ PC range=(<ABSOLUTE:0x1e6a9>, <ABSOLUTE:0x1e6de>)
	<PARAM tp :: <STRUCT tm membertypes=11 size=56> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1e6a9> endpc=<ABSOLUTE:0x1e6de>>]>
	<VAR localtime_offset :: int8 @ [<AddressLiveRange addr=<ABSOLUTE:0x2c5c8> startpc=<ABSOLUTE:0x1e6a9> endpc=<ABSOLUTE:0x1e6de>>]>
mktime_internal :: (<STRUCT tm membertypes=11 size=56> *, (int8 *, <STRUCT tm membertypes=11 size=56> *) -> <STRUCT tm membertypes=11 size=56> * *, int8 *) -> int8 @ PC range=(<ABSOLUTE:0x1de8b>, <ABSOLUTE:0x1e6aa>)
	<PARAM tp :: <STRUCT tm membertypes=11 size=56> * @ [<AddressLiveRange addr=<STACK:-0x168> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<PARAM convert :: (int8 *, <STRUCT tm membertypes=11 size=56> *) -> <STRUCT tm membertypes=11 size=56> * * @ [<AddressLiveRange addr=<STACK:-0x170> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<PARAM offset :: int8 * @ [<AddressLiveRange addr=<STACK:-0x178> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR tm :: <STRUCT tm membertypes=11 size=56> @ [<AddressLiveRange addr=<STACK:-0xa0> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR remaining_probes :: int4 @ [<AddressLiveRange addr=<STACK:-0x158> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR sec :: int4 @ [<AddressLiveRange addr=<STACK:-0x154> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR min :: int4 @ [<AddressLiveRange addr=<STACK:-0x144> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR hour :: int4 @ [<AddressLiveRange addr=<STACK:-0x140> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR mday :: int4 @ [<AddressLiveRange addr=<STACK:-0x13c> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR mon :: int4 @ [<AddressLiveRange addr=<STACK:-0x138> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR year_requested :: int4 @ [<AddressLiveRange addr=<STACK:-0x134> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR isdst :: int4 @ [<AddressLiveRange addr=<STACK:-0x130> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR dst2 :: int4 @ [<AddressLiveRange addr=<STACK:-0x150> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR mon_remainder :: int4 @ [<AddressLiveRange addr=<STACK:-0x12c> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR negative_mon_remainder :: int4 @ [<AddressLiveRange addr=<STACK:-0x128> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR mon_years :: int4 @ [<AddressLiveRange addr=<STACK:-0x124> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR lyear_requested :: int8 @ [<AddressLiveRange addr=<STACK:-0xe8> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR year :: int8 @ [<AddressLiveRange addr=<STACK:-0xe0> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR mon_yday :: int4 @ [<AddressLiveRange addr=<STACK:-0x120> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR lmday :: int8 @ [<AddressLiveRange addr=<STACK:-0xd8> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR yday :: int8 @ [<AddressLiveRange addr=<STACK:-0xd0> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR off :: int8 @ [<AddressLiveRange addr=<STACK:-0xc8> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR negative_offset_guess :: int4 @ [<AddressLiveRange addr=<STACK:-0x15c> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR sec_requested :: int4 @ [<AddressLiveRange addr=<STACK:-0x11c> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR t0 :: int8 @ [<AddressLiveRange addr=<STACK:-0xc0> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR t :: int8 @ [<AddressLiveRange addr=<STACK:-0x108> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR t1 :: int8 @ [<AddressLiveRange addr=<STACK:-0xf8> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR t2 :: int8 @ [<AddressLiveRange addr=<STACK:-0xf0> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR dt :: int8 @ [<AddressLiveRange addr=<STACK:-0xb8> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR dst_difference :: int4 @ [<AddressLiveRange addr=<STACK:-0x118> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR stride :: int4 @ [<AddressLiveRange addr=<STACK:-0x114> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR duration_max :: int4 @ [<AddressLiveRange addr=<STACK:-0x110> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR delta_bound :: int4 @ [<AddressLiveRange addr=<STACK:-0x10c> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR delta :: int4 @ [<AddressLiveRange addr=<STACK:-0x14c> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR direction :: int4 @ [<AddressLiveRange addr=<STACK:-0x148> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR ot :: int8 @ [<AddressLiveRange addr=<STACK:-0x100> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR otm :: <STRUCT tm membertypes=11 size=56> @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR gt :: int8 @ [<AddressLiveRange addr=<STACK:-0xb0> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
	<VAR sec_adjustment :: int8 @ [<AddressLiveRange addr=<STACK:-0xa8> startpc=<ABSOLUTE:0x1de8b> endpc=<ABSOLUTE:0x1e6aa>>]>
ranged_convert :: ((int8 *, <STRUCT tm membertypes=11 size=56> *) -> <STRUCT tm membertypes=11 size=56> * *, int8 *, <STRUCT tm membertypes=11 size=56> *) -> <STRUCT tm membertypes=11 size=56> * @ PC range=(<ABSOLUTE:0x1dc8f>, <ABSOLUTE:0x1de8c>)
	<PARAM convert :: (int8 *, <STRUCT tm membertypes=11 size=56> *) -> <STRUCT tm membertypes=11 size=56> * * @ [<AddressLiveRange addr=<STACK:-0x98> startpc=<ABSOLUTE:0x1dc8f> endpc=<ABSOLUTE:0x1de8c>>]>
	<PARAM t :: int8 * @ [<AddressLiveRange addr=<STACK:-0xa0> startpc=<ABSOLUTE:0x1dc8f> endpc=<ABSOLUTE:0x1de8c>>]>
	<PARAM tp :: <STRUCT tm membertypes=11 size=56> * @ [<AddressLiveRange addr=<STACK:-0xa8> startpc=<ABSOLUTE:0x1dc8f> endpc=<ABSOLUTE:0x1de8c>>]>
	<VAR t1 :: int8 @ [<AddressLiveRange addr=<STACK:-0x78> startpc=<ABSOLUTE:0x1dc8f> endpc=<ABSOLUTE:0x1de8c>>]>
	<VAR r :: <STRUCT tm membertypes=11 size=56> * @ [<AddressLiveRange addr=<STACK:-0x70> startpc=<ABSOLUTE:0x1dc8f> endpc=<ABSOLUTE:0x1de8c>>]>
	<VAR bad :: int8 @ [<AddressLiveRange addr=<STACK:-0x88> startpc=<ABSOLUTE:0x1dc8f> endpc=<ABSOLUTE:0x1de8c>>]>
	<VAR ok :: int8 @ [<AddressLiveRange addr=<STACK:-0x80> startpc=<ABSOLUTE:0x1dc8f> endpc=<ABSOLUTE:0x1de8c>>]>
	<VAR oktm :: <STRUCT tm membertypes=11 size=56> @ [<AddressLiveRange addr=<STACK:-0x60> startpc=<ABSOLUTE:0x1dc8f> endpc=<ABSOLUTE:0x1de8c>>]>
	<VAR mid :: int8 @ [<AddressLiveRange addr=<STACK:-0x68> startpc=<ABSOLUTE:0x1dc8f> endpc=<ABSOLUTE:0x1de8c>>]>
convert_time :: ((int8 *, <STRUCT tm membertypes=11 size=56> *) -> <STRUCT tm membertypes=11 size=56> * *, int8, <STRUCT tm membertypes=11 size=56> *) -> <STRUCT tm membertypes=11 size=56> * @ PC range=(<ABSOLUTE:0x1dc36>, <ABSOLUTE:0x1dc90>)
	<PARAM convert :: (int8 *, <STRUCT tm membertypes=11 size=56> *) -> <STRUCT tm membertypes=11 size=56> * * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1dc36> endpc=<ABSOLUTE:0x1dc90>>]>
	<PARAM t :: int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1dc36> endpc=<ABSOLUTE:0x1dc90>>]>
	<PARAM tm :: <STRUCT tm membertypes=11 size=56> * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1dc36> endpc=<ABSOLUTE:0x1dc90>>]>
	<VAR x :: int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1dc36> endpc=<ABSOLUTE:0x1dc90>>]>
tm_diff :: (int8, int8, int4, int4, int4, <STRUCT tm membertypes=11 size=56> *) -> int8 @ PC range=(<ABSOLUTE:0x1dbbd>, <ABSOLUTE:0x1dc37>)
	<PARAM year :: int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1dbbd> endpc=<ABSOLUTE:0x1dc37>>]>
	<PARAM yday :: int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1dbbd> endpc=<ABSOLUTE:0x1dc37>>]>
	<PARAM hour :: int4 @ [<AddressLiveRange addr=<STACK:-0x2c> startpc=<ABSOLUTE:0x1dbbd> endpc=<ABSOLUTE:0x1dc37>>]>
	<PARAM min :: int4 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1dbbd> endpc=<ABSOLUTE:0x1dc37>>]>
	<PARAM sec :: int4 @ [<AddressLiveRange addr=<STACK:-0x34> startpc=<ABSOLUTE:0x1dbbd> endpc=<ABSOLUTE:0x1dc37>>]>
	<PARAM tp :: <STRUCT tm membertypes=11 size=56> * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x1dbbd> endpc=<ABSOLUTE:0x1dc37>>]>
long_int_avg :: (int8, int8) -> int8 @ PC range=(<ABSOLUTE:0x1db6b>, <ABSOLUTE:0x1dbbe>)
	<PARAM a :: int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1db6b> endpc=<ABSOLUTE:0x1dbbe>>]>
	<PARAM b :: int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1db6b> endpc=<ABSOLUTE:0x1dbbe>>]>
ydhms_diff :: (int8, int8, int4, int4, int4, int4, int4, int4, int4, int4) -> int8 @ PC range=(<ABSOLUTE:0x1d948>, <ABSOLUTE:0x1db6c>)
	<PARAM year1 :: int8 @ [<AddressLiveRange addr=<STACK:-0x70> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<PARAM yday1 :: int8 @ [<AddressLiveRange addr=<STACK:-0x78> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<PARAM hour1 :: int4 @ [<AddressLiveRange addr=<STACK:-0x7c> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<PARAM min1 :: int4 @ [<AddressLiveRange addr=<STACK:-0x80> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<PARAM sec1 :: int4 @ [<AddressLiveRange addr=<STACK:-0x84> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<PARAM year0 :: int4 @ [<AddressLiveRange addr=<STACK:-0x88> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<PARAM yday0 :: int4 @ [<AddressLiveRange addr=<STACK:0x0> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<PARAM hour0 :: int4 @ [<AddressLiveRange addr=<STACK:0x8> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<PARAM min0 :: int4 @ [<AddressLiveRange addr=<STACK:0x10> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<PARAM sec0 :: int4 @ [<AddressLiveRange addr=<STACK:0x18> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<VAR a4 :: int4 @ [<AddressLiveRange addr=<STACK:-0x5c> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<VAR b4 :: int4 @ [<AddressLiveRange addr=<STACK:-0x58> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<VAR a100 :: int4 @ [<AddressLiveRange addr=<STACK:-0x54> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<VAR b100 :: int4 @ [<AddressLiveRange addr=<STACK:-0x50> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<VAR a400 :: int4 @ [<AddressLiveRange addr=<STACK:-0x4c> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<VAR b400 :: int4 @ [<AddressLiveRange addr=<STACK:-0x48> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<VAR intervening_leap_days :: int4 @ [<AddressLiveRange addr=<STACK:-0x44> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<VAR years :: int8 @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<VAR days :: int8 @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<VAR hours :: int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<VAR minutes :: int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
	<VAR seconds :: int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1d948> endpc=<ABSOLUTE:0x1db6c>>]>
isdst_differ :: (int4, int4) -> unsigned char @ PC range=(<ABSOLUTE:0x1d909>, <ABSOLUTE:0x1d949>)
	<PARAM a :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1d909> endpc=<ABSOLUTE:0x1d949>>]>
	<PARAM b :: int4 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1d909> endpc=<ABSOLUTE:0x1d949>>]>
leapyear :: (int8) -> unsigned char @ PC range=(<ABSOLUTE:0x1d860>, <ABSOLUTE:0x1d90a>)
	<PARAM year :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1d860> endpc=<ABSOLUTE:0x1d90a>>]>
shr :: (int8, int4) -> int8 @ PC range=(<ABSOLUTE:0x1d7e9>, <ABSOLUTE:0x1d861>)
	<PARAM a :: int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1d7e9> endpc=<ABSOLUTE:0x1d861>>]>
	<PARAM b :: int4 @ [<AddressLiveRange addr=<STACK:-0x2c> startpc=<ABSOLUTE:0x1d7e9> endpc=<ABSOLUTE:0x1d861>>]>
	<VAR one :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1d7e9> endpc=<ABSOLUTE:0x1d861>>]>
my_tzset :: () -> void @ PC range=(<ABSOLUTE:0x1d7d9>, <ABSOLUTE:0x1d7ea>)
rotr8 :: (unsigned char, int4) -> unsigned char @ PC range=(<ABSOLUTE:0x1e868>, <ABSOLUTE:0x1e89e>)
	<PARAM x :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1e868> endpc=<ABSOLUTE:0x1e89e>>]>
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1e868> endpc=<ABSOLUTE:0x1e89e>>]>
rotl8 :: (unsigned char, int4) -> unsigned char @ PC range=(<ABSOLUTE:0x1e833>, <ABSOLUTE:0x1e869>)
	<PARAM x :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1e833> endpc=<ABSOLUTE:0x1e869>>]>
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1e833> endpc=<ABSOLUTE:0x1e869>>]>
rotr16 :: (unsigned int2, int4) -> unsigned int2 @ PC range=(<ABSOLUTE:0x1e7fd>, <ABSOLUTE:0x1e834>)
	<PARAM x :: unsigned int2 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1e7fd> endpc=<ABSOLUTE:0x1e834>>]>
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1e7fd> endpc=<ABSOLUTE:0x1e834>>]>
rotl16 :: (unsigned int2, int4) -> unsigned int2 @ PC range=(<ABSOLUTE:0x1e7c7>, <ABSOLUTE:0x1e7fe>)
	<PARAM x :: unsigned int2 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1e7c7> endpc=<ABSOLUTE:0x1e7fe>>]>
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1e7c7> endpc=<ABSOLUTE:0x1e7fe>>]>
rotr_sz :: (unsigned int8, int4) -> unsigned int8 @ PC range=(<ABSOLUTE:0x1e78e>, <ABSOLUTE:0x1e7c8>)
	<PARAM x :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1e78e> endpc=<ABSOLUTE:0x1e7c8>>]>
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x1c> startpc=<ABSOLUTE:0x1e78e> endpc=<ABSOLUTE:0x1e7c8>>]>
rotl_sz :: (unsigned int8, int4) -> unsigned int8 @ PC range=(<ABSOLUTE:0x1e755>, <ABSOLUTE:0x1e78f>)
	<PARAM x :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1e755> endpc=<ABSOLUTE:0x1e78f>>]>
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x1c> startpc=<ABSOLUTE:0x1e755> endpc=<ABSOLUTE:0x1e78f>>]>
rotr32 :: (unsigned int4, int4) -> unsigned int4 @ PC range=(<ABSOLUTE:0x1e739>, <ABSOLUTE:0x1e756>)
	<PARAM x :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1e739> endpc=<ABSOLUTE:0x1e756>>]>
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1e739> endpc=<ABSOLUTE:0x1e756>>]>
rotl32 :: (unsigned int4, int4) -> unsigned int4 @ PC range=(<ABSOLUTE:0x1e71d>, <ABSOLUTE:0x1e73a>)
	<PARAM x :: unsigned int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1e71d> endpc=<ABSOLUTE:0x1e73a>>]>
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1e71d> endpc=<ABSOLUTE:0x1e73a>>]>
rotr64 :: (unsigned int8, int4) -> unsigned int8 @ PC range=(<ABSOLUTE:0x1e6fd>, <ABSOLUTE:0x1e71e>)
	<PARAM x :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1e6fd> endpc=<ABSOLUTE:0x1e71e>>]>
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x1c> startpc=<ABSOLUTE:0x1e6fd> endpc=<ABSOLUTE:0x1e71e>>]>
rotl64 :: (unsigned int8, int4) -> unsigned int8 @ PC range=(<ABSOLUTE:0x1e6dd>, <ABSOLUTE:0x1e6fe>)
	<PARAM x :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1e6dd> endpc=<ABSOLUTE:0x1e6fe>>]>
	<PARAM n :: int4 @ [<AddressLiveRange addr=<STACK:-0x1c> startpc=<ABSOLUTE:0x1e6dd> endpc=<ABSOLUTE:0x1e6fe>>]>
c_strcasecmp :: (char *, char *) -> int4 @ PC range=(<ABSOLUTE:0x1e89d>, <ABSOLUTE:0x1e918>)
	<PARAM s1 :: char * @ [<AddressLiveRange addr=<STACK:-0x38> startpc=<ABSOLUTE:0x1e89d> endpc=<ABSOLUTE:0x1e918>>]>
	<PARAM s2 :: char * @ [<AddressLiveRange addr=<STACK:-0x40> startpc=<ABSOLUTE:0x1e89d> endpc=<ABSOLUTE:0x1e918>>]>
	<VAR p1 :: unsigned char * @ [<AddressLiveRange addr=<REGISTER:12> startpc=<ABSOLUTE:0x1e89d> endpc=<ABSOLUTE:0x1e918>>]>
	<VAR p2 :: unsigned char * @ [<AddressLiveRange addr=<REGISTER:3> startpc=<ABSOLUTE:0x1e89d> endpc=<ABSOLUTE:0x1e918>>]>
	<VAR c1 :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x22> startpc=<ABSOLUTE:0x1e89d> endpc=<ABSOLUTE:0x1e918>>]>
	<VAR c2 :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x21> startpc=<ABSOLUTE:0x1e89d> endpc=<ABSOLUTE:0x1e918>>]>
close_stream :: (<STRUCT _IO_FILE membertypes=29 size=216> *) -> int4 @ PC range=(<ABSOLUTE:0x1e917>, <ABSOLUTE:0x1e9a7>)
	<PARAM stream :: <STRUCT _IO_FILE membertypes=29 size=216> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1e917> endpc=<ABSOLUTE:0x1e9a7>>]>
	<VAR some_pending :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x13> startpc=<ABSOLUTE:0x1e917> endpc=<ABSOLUTE:0x1e9a7>>]>
	<VAR prev_fail :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x12> startpc=<ABSOLUTE:0x1e917> endpc=<ABSOLUTE:0x1e9a7>>]>
	<VAR fclose_fail :: unsigned char @ [<AddressLiveRange addr=<STACK:-0x11> startpc=<ABSOLUTE:0x1e917> endpc=<ABSOLUTE:0x1e9a7>>]>
rpl_fclose :: (<STRUCT _IO_FILE membertypes=29 size=216> *) -> int4 @ PC range=(<ABSOLUTE:0x1e9a6>, <ABSOLUTE:0x1ea60>)
	<PARAM fp :: <STRUCT _IO_FILE membertypes=29 size=216> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1e9a6> endpc=<ABSOLUTE:0x1ea60>>]>
	<VAR saved_errno :: int4 @ [<AddressLiveRange addr=<STACK:-0x1c> startpc=<ABSOLUTE:0x1e9a6> endpc=<ABSOLUTE:0x1ea60>>]>
	<VAR fd :: int4 @ [<AddressLiveRange addr=<STACK:-0x14> startpc=<ABSOLUTE:0x1e9a6> endpc=<ABSOLUTE:0x1ea60>>]>
	<VAR result :: int4 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1e9a6> endpc=<ABSOLUTE:0x1ea60>>]>
rpl_fflush :: (<STRUCT _IO_FILE membertypes=29 size=216> *) -> int4 @ PC range=(<ABSOLUTE:0x1ea97>, <ABSOLUTE:0x1eae7>)
	<PARAM stream :: <STRUCT _IO_FILE membertypes=29 size=216> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1ea97> endpc=<ABSOLUTE:0x1eae7>>]>
clear_ungetc_buffer_preserving_position :: (<STRUCT _IO_FILE membertypes=29 size=216> *) -> void @ PC range=(<ABSOLUTE:0x1ea5f>, <ABSOLUTE:0x1ea98>)
	<PARAM fp :: <STRUCT _IO_FILE membertypes=29 size=216> * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1ea5f> endpc=<ABSOLUTE:0x1ea98>>]>
rpl_fseeko :: (<STRUCT _IO_FILE membertypes=29 size=216> *, int8, int4) -> int4 @ PC range=(<ABSOLUTE:0x1eae6>, <ABSOLUTE:0x1eba5>)
	<PARAM fp :: <STRUCT _IO_FILE membertypes=29 size=216> * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1eae6> endpc=<ABSOLUTE:0x1eba5>>]>
	<PARAM offset :: int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1eae6> endpc=<ABSOLUTE:0x1eba5>>]>
	<PARAM whence :: int4 @ [<AddressLiveRange addr=<STACK:-0x34> startpc=<ABSOLUTE:0x1eae6> endpc=<ABSOLUTE:0x1eba5>>]>
	<VAR pos :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1eae6> endpc=<ABSOLUTE:0x1eba5>>]>
hash_pjw :: (void *, unsigned int8) -> unsigned int8 @ PC range=(<ABSOLUTE:0x1eba4>, <ABSOLUTE:0x1ec03>)
	<PARAM x :: void * @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1eba4> endpc=<ABSOLUTE:0x1ec03>>]>
	<PARAM tablesize :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x30> startpc=<ABSOLUTE:0x1eba4> endpc=<ABSOLUTE:0x1ec03>>]>
	<VAR s :: char * @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1eba4> endpc=<ABSOLUTE:0x1ec03>>]>
	<VAR h :: unsigned int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1eba4> endpc=<ABSOLUTE:0x1ec03>>]>
ireallocarray :: (void *, int8, int8) -> void * @ PC range=(<ABSOLUTE:0x1ec9a>, <ABSOLUTE:0x1ecea>)
	<PARAM p :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1ec9a> endpc=<ABSOLUTE:0x1ecea>>]>
	<PARAM n :: int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1ec9a> endpc=<ABSOLUTE:0x1ecea>>]>
	<PARAM s :: int8 @ [<AddressLiveRange addr=<STACK:-0x28> startpc=<ABSOLUTE:0x1ec9a> endpc=<ABSOLUTE:0x1ecea>>]>
icalloc :: (int8, int8) -> void * @ PC range=(<ABSOLUTE:0x1ec71>, <ABSOLUTE:0x1ec9b>)
	<PARAM n :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1ec71> endpc=<ABSOLUTE:0x1ec9b>>]>
	<PARAM s :: int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1ec71> endpc=<ABSOLUTE:0x1ec9b>>]>
irealloc :: (void *, int8) -> void * @ PC range=(<ABSOLUTE:0x1ec3a>, <ABSOLUTE:0x1ec72>)
	<PARAM p :: void * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1ec3a> endpc=<ABSOLUTE:0x1ec72>>]>
	<PARAM s :: int8 @ [<AddressLiveRange addr=<STACK:-0x20> startpc=<ABSOLUTE:0x1ec3a> endpc=<ABSOLUTE:0x1ec72>>]>
imalloc :: (int8) -> void * @ PC range=(<ABSOLUTE:0x1ec1c>, <ABSOLUTE:0x1ec3b>)
	<PARAM s :: int8 @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1ec1c> endpc=<ABSOLUTE:0x1ec3b>>]>
_gl_alloc_nomem :: () -> void * @ PC range=(<ABSOLUTE:0x1ec02>, <ABSOLUTE:0x1ec1d>)
locale_charset :: () -> char * @ PC range=(<ABSOLUTE:0x1ece9>, <ABSOLUTE:0x1ed32>)
	<VAR codeset :: char * @ [<AddressLiveRange addr=<STACK:-0x18> startpc=<ABSOLUTE:0x1ece9> endpc=<ABSOLUTE:0x1ed32>>]>
